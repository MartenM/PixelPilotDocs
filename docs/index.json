{
  "api/PixelPilot.Api.PixelApiClient.html": {
    "href": "api/PixelPilot.Api.PixelApiClient.html",
    "title": "Class PixelApiClient | PixelPilot",
    "keywords": "Class PixelApiClient Namespace PixelPilot.Api Assembly PixelPilot.Core.dll Used to make HTTP API request instead of using the websocket. Required for obtaining information used to join a world. public class PixelApiClient : IDisposable Inheritance object PixelApiClient Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PixelApiClient(string) PixelApiClient that authenticates using a token. Does not verify validity. public PixelApiClient(string accountToken) Parameters accountToken string A valid account token PixelApiClient(string, string) PixelApiClient that authenticates using email and password. public PixelApiClient(string email, string password) Parameters email string User e-mail password string User password Exceptions PixelApiException When the login failed InvalidOperationException Something went very wrong Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() GetAuth(string, string) public Task<IAuthResponse> GetAuth(string email, string password) Parameters email string password string Returns Task<IAuthResponse> GetJoinKey(string, string) Request a join key for the given room from the API server. public Task<JoinKeyResponse?> GetJoinKey(string roomType, string roomId) Parameters roomType string The room type roomId string ID of the room Returns Task<JoinKeyResponse> GetMappings() Retrieves the mappings from the game API. public Task<MappingsResponse?> GetMappings() Returns Task<MappingsResponse> A MappingsResponse containing the mappings, or null if the mappings are not available. GetMessageTypes() Gets the world message types used by the server. public Task<string[]> GetMessageTypes() Returns Task<string[]> The list of event types Exceptions PixelApiException GetMinimap(WorldEntry) Get the raw bytes of the minimap. The format is PNG public Task<byte[]> GetMinimap(WorldEntry world) Parameters world WorldEntry Returns Task<byte[]> PNG Byte[] GetMinimap(string) Get the raw bytes of the minimap. The format is PNG. public Task<byte[]?> GetMinimap(string worldId) Parameters worldId string World ID Returns Task<byte[]> Byte[] or null if world could not be found. GetOwnedWorlds(int, int, QueryArgumentBuilder?) Fetches the worlds of the current authenticated player. public Task<CollectionResponse<WorldEntry>> GetOwnedWorlds(int page, int perPage, QueryArgumentBuilder? qb = null) Parameters page int Page to be fetched perPage int Entries per page qb QueryArgumentBuilder Query builder Returns Task<CollectionResponse<WorldEntry>> The page requested Exceptions PixelApiException When the rooms worlds could not be fetched GetPlayer(string) Asynchronously retrieves a player entry by username. public Task<PlayerEntry?> GetPlayer(string username) Parameters username string The username of the player to retrieve. Returns Task<PlayerEntry> A task representing the asynchronous operation, with a result of PlayerEntry containing the player entry, or null if no player with the specified username is found. GetPlayers(int, int, QueryArgumentBuilder?) Asynchronously retrieves a paginated collection of player entries with optional filters. public Task<CollectionResponse<PlayerEntry>> GetPlayers(int page, int perPage, QueryArgumentBuilder? qb = null) Parameters page int The page number to retrieve. Must be greater than 0. perPage int The number of player entries to retrieve per page. qb QueryArgumentBuilder Query builder Returns Task<CollectionResponse<PlayerEntry>> A task representing the asynchronous operation, with a result of CollectionResponse<T> containing the player entries. Exceptions PixelApiException Thrown when the page number is less than 1 or when an unknown error occurs during the fetch operation. GetPublicWorld(string) public Task<WorldEntry?> GetPublicWorld(string id) Parameters id string Returns Task<WorldEntry> GetPublicWorlds(int, int, QueryArgumentBuilder?) public Task<CollectionResponse<WorldEntry>> GetPublicWorlds(int page, int perPage, QueryArgumentBuilder? qb = null) Parameters page int perPage int qb QueryArgumentBuilder Returns Task<CollectionResponse<WorldEntry>> GetRoomTypes() Request the available room types from the game server. public Task<List<string>?> GetRoomTypes() Returns Task<List<string>> A list of room types GetVisibleWorlds() Fetch the visible worlds in the browser found in the lobby. public Task<PixelWalkerWorldsResponse> GetVisibleWorlds() Returns Task<PixelWalkerWorldsResponse> The visible rooms Exceptions PixelApiException When the worlds could not be fetched."
  },
  "api/PixelPilot.Api.PixelApiException.html": {
    "href": "api/PixelPilot.Api.PixelApiException.html",
    "title": "Class PixelApiException | PixelPilot",
    "keywords": "Class PixelApiException Namespace PixelPilot.Api Assembly PixelPilot.Core.dll public class PixelApiException : Exception, ISerializable Inheritance object Exception PixelApiException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PixelApiException(string) public PixelApiException(string msg) Parameters msg string"
  },
  "api/PixelPilot.Api.Responses.Auth.AuthErrorResponse.html": {
    "href": "api/PixelPilot.Api.Responses.Auth.AuthErrorResponse.html",
    "title": "Class AuthErrorResponse | PixelPilot",
    "keywords": "Class AuthErrorResponse Namespace PixelPilot.Api.Responses.Auth Assembly PixelPilot.Core.dll public class AuthErrorResponse : IAuthResponse Inheritance object AuthErrorResponse Implements IAuthResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Code [JsonPropertyName(\"code\")] public int Code { get; set; } Property Value int Message [JsonPropertyName(\"message\")] public string Message { get; set; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.Auth.AuthSuccessResponse.html": {
    "href": "api/PixelPilot.Api.Responses.Auth.AuthSuccessResponse.html",
    "title": "Class AuthSuccessResponse | PixelPilot",
    "keywords": "Class AuthSuccessResponse Namespace PixelPilot.Api.Responses.Auth Assembly PixelPilot.Core.dll public class AuthSuccessResponse : IAuthResponse Inheritance object AuthSuccessResponse Implements IAuthResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Data [JsonPropertyName(\"record\")] public PlayerData Data { get; set; } Property Value PlayerData Token [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.Auth.IAuthResponse.html": {
    "href": "api/PixelPilot.Api.Responses.Auth.IAuthResponse.html",
    "title": "Interface IAuthResponse | PixelPilot",
    "keywords": "Interface IAuthResponse Namespace PixelPilot.Api.Responses.Auth Assembly PixelPilot.Core.dll public interface IAuthResponse"
  },
  "api/PixelPilot.Api.Responses.Auth.html": {
    "href": "api/PixelPilot.Api.Responses.Auth.html",
    "title": "Namespace PixelPilot.Api.Responses.Auth | PixelPilot",
    "keywords": "Namespace PixelPilot.Api.Responses.Auth Classes AuthErrorResponse AuthSuccessResponse Interfaces IAuthResponse"
  },
  "api/PixelPilot.Api.Responses.CollectionResponse-1.html": {
    "href": "api/PixelPilot.Api.Responses.CollectionResponse-1.html",
    "title": "Class CollectionResponse<T> | PixelPilot",
    "keywords": "Class CollectionResponse<T> Namespace PixelPilot.Api.Responses Assembly PixelPilot.Core.dll public class CollectionResponse<T> where T : ICollectionEntry Type Parameters T Inheritance object CollectionResponse<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Items public List<T> Items { get; set; } Property Value List<T> Page public int Page { get; set; } Property Value int PerPage public int PerPage { get; set; } Property Value int TotalItems public int TotalItems { get; set; } Property Value int TotalPages public int TotalPages { get; set; } Property Value int"
  },
  "api/PixelPilot.Api.Responses.Collections.ICollectionEntry.html": {
    "href": "api/PixelPilot.Api.Responses.Collections.ICollectionEntry.html",
    "title": "Interface ICollectionEntry | PixelPilot",
    "keywords": "Interface ICollectionEntry Namespace PixelPilot.Api.Responses.Collections Assembly PixelPilot.Core.dll public interface ICollectionEntry Properties CollectionId string CollectionId { get; set; } Property Value string CollectionName string CollectionName { get; set; } Property Value string Created string Created { get; set; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.Collections.PlayerEntry.html": {
    "href": "api/PixelPilot.Api.Responses.Collections.PlayerEntry.html",
    "title": "Class PlayerEntry | PixelPilot",
    "keywords": "Class PlayerEntry Namespace PixelPilot.Api.Responses.Collections Assembly PixelPilot.Core.dll public class PlayerEntry : ICollectionEntry Inheritance object PlayerEntry Implements ICollectionEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Admin public bool Admin { get; set; } Property Value bool Banned public bool Banned { get; set; } Property Value bool CollectionId public string CollectionId { get; set; } Property Value string CollectionName public string CollectionName { get; set; } Property Value string Created public string Created { get; set; } Property Value string Face public int Face { get; set; } Property Value int Id public string Id { get; set; } Property Value string Username public string Username { get; set; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.Collections.QueryArgumentBuilder.html": {
    "href": "api/PixelPilot.Api.Responses.Collections.QueryArgumentBuilder.html",
    "title": "Class QueryArgumentBuilder | PixelPilot",
    "keywords": "Class QueryArgumentBuilder Namespace PixelPilot.Api.Responses.Collections Assembly PixelPilot.Core.dll Allows for building complex queries against some collections. public class QueryArgumentBuilder Inheritance object QueryArgumentBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors QueryArgumentBuilder() public QueryArgumentBuilder() Methods AddFilter(string, dynamic) Add a filter for a specific field public QueryArgumentBuilder AddFilter(string key, dynamic value) Parameters key string Key of the field value dynamic Value of the field Returns QueryArgumentBuilder The builder Build() Convert the builder to a string represenation. public string Build() Returns string SortAscending() Sets sorting method to ascending. Note this is the default. public QueryArgumentBuilder SortAscending() Returns QueryArgumentBuilder The builder SortBy(string) Sort by a specific field public QueryArgumentBuilder SortBy(string key) Parameters key string Key of the field Returns QueryArgumentBuilder The builder SortDescending() Set sorting to descending. public QueryArgumentBuilder SortDescending() Returns QueryArgumentBuilder The builder"
  },
  "api/PixelPilot.Api.Responses.Collections.WorldEntry.html": {
    "href": "api/PixelPilot.Api.Responses.Collections.WorldEntry.html",
    "title": "Class WorldEntry | PixelPilot",
    "keywords": "Class WorldEntry Namespace PixelPilot.Api.Responses.Collections Assembly PixelPilot.Core.dll public class WorldEntry : ICollectionEntry Inheritance object WorldEntry Implements ICollectionEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CollectionId public string CollectionId { get; set; } Property Value string CollectionName public string CollectionName { get; set; } Property Value string Created public string Created { get; set; } Property Value string Data public string Data { get; set; } Property Value string Height public int Height { get; set; } Property Value int Id public string Id { get; set; } Property Value string Minimap public string Minimap { get; set; } Property Value string Owner public string Owner { get; set; } Property Value string Plays public int Plays { get; set; } Property Value int Title public string Title { get; set; } Property Value string Updated public string Updated { get; set; } Property Value string Visibility public string Visibility { get; set; } Property Value string Width public int Width { get; set; } Property Value int"
  },
  "api/PixelPilot.Api.Responses.Collections.html": {
    "href": "api/PixelPilot.Api.Responses.Collections.html",
    "title": "Namespace PixelPilot.Api.Responses.Collections | PixelPilot",
    "keywords": "Namespace PixelPilot.Api.Responses.Collections Classes PlayerEntry QueryArgumentBuilder Allows for building complex queries against some collections. WorldEntry Interfaces ICollectionEntry"
  },
  "api/PixelPilot.Api.Responses.JoinKeyResponse.html": {
    "href": "api/PixelPilot.Api.Responses.JoinKeyResponse.html",
    "title": "Class JoinKeyResponse | PixelPilot",
    "keywords": "Class JoinKeyResponse Namespace PixelPilot.Api.Responses Assembly PixelPilot.Core.dll public class JoinKeyResponse Inheritance object JoinKeyResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Token [JsonPropertyName(\"token\")] public string Token { get; set; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.MappingsResponse.html": {
    "href": "api/PixelPilot.Api.Responses.MappingsResponse.html",
    "title": "Class MappingsResponse | PixelPilot",
    "keywords": "Class MappingsResponse Namespace PixelPilot.Api.Responses Assembly PixelPilot.Core.dll public class MappingsResponse Inheritance object MappingsResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MappingsResponse(Dictionary<string, int>) public MappingsResponse(Dictionary<string, int> mappings) Parameters mappings Dictionary<string, int> Properties mappings public Dictionary<string, int> mappings { get; } Property Value Dictionary<string, int> Methods AsEnumEntries() Method used to quickly generate a ENUM like mapping from the entries. public List<string> AsEnumEntries() Returns List<string> ToCName(string) public static string ToCName(string pwName) Parameters pwName string Returns string"
  },
  "api/PixelPilot.Api.Responses.PlayerData.html": {
    "href": "api/PixelPilot.Api.Responses.PlayerData.html",
    "title": "Class PlayerData | PixelPilot",
    "keywords": "Class PlayerData Namespace PixelPilot.Api.Responses Assembly PixelPilot.Core.dll public class PlayerData Inheritance object PlayerData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Admin [JsonPropertyName(\"admin\")] public bool Admin { get; set; } Property Value bool Banned [JsonPropertyName(\"banned\")] public bool Banned { get; set; } Property Value bool Face [JsonPropertyName(\"face\")] public int Face { get; set; } Property Value int Username [JsonPropertyName(\"username\")] public string Username { get; set; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.html": {
    "href": "api/PixelPilot.Api.Responses.html",
    "title": "Namespace PixelPilot.Api.Responses | PixelPilot",
    "keywords": "Namespace PixelPilot.Api.Responses Classes CollectionResponse<T> JoinKeyResponse MappingsResponse PlayerData"
  },
  "api/PixelPilot.Api.Responses.visible.PixelWalkerWorldsResponse.html": {
    "href": "api/PixelPilot.Api.Responses.visible.PixelWalkerWorldsResponse.html",
    "title": "Class PixelWalkerWorldsResponse | PixelPilot",
    "keywords": "Class PixelWalkerWorldsResponse Namespace PixelPilot.Api.Responses.visible Assembly PixelPilot.Core.dll public class PixelWalkerWorldsResponse Inheritance object PixelWalkerWorldsResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties OnlinePlayerCount public int OnlinePlayerCount { get; set; } Property Value int OnlineRoomCount public int OnlineRoomCount { get; set; } Property Value int VisibleRooms public List<VisibleRoom> VisibleRooms { get; set; } Property Value List<VisibleRoom>"
  },
  "api/PixelPilot.Api.Responses.visible.VisibleRoom.html": {
    "href": "api/PixelPilot.Api.Responses.visible.VisibleRoom.html",
    "title": "Class VisibleRoom | PixelPilot",
    "keywords": "Class VisibleRoom Namespace PixelPilot.Api.Responses.visible Assembly PixelPilot.Core.dll public class VisibleRoom Inheritance object VisibleRoom Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Data public VisibleRoomData Data { get; set; } Property Value VisibleRoomData Id public string Id { get; set; } Property Value string MaxPlayers [JsonPropertyName(\"max_players\")] public int MaxPlayers { get; set; } Property Value int Players public int Players { get; set; } Property Value int Plays public int Plays { get; } Property Value int Title public string Title { get; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.visible.VisibleRoomData.html": {
    "href": "api/PixelPilot.Api.Responses.visible.VisibleRoomData.html",
    "title": "Class VisibleRoomData | PixelPilot",
    "keywords": "Class VisibleRoomData Namespace PixelPilot.Api.Responses.visible Assembly PixelPilot.Core.dll public class VisibleRoomData Inheritance object VisibleRoomData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Plays public int Plays { get; set; } Property Value int Title public string Title { get; set; } Property Value string"
  },
  "api/PixelPilot.Api.Responses.visible.html": {
    "href": "api/PixelPilot.Api.Responses.visible.html",
    "title": "Namespace PixelPilot.Api.Responses.visible | PixelPilot",
    "keywords": "Namespace PixelPilot.Api.Responses.visible Classes PixelWalkerWorldsResponse VisibleRoom VisibleRoomData"
  },
  "api/PixelPilot.Api.html": {
    "href": "api/PixelPilot.Api.html",
    "title": "Namespace PixelPilot.Api | PixelPilot",
    "keywords": "Namespace PixelPilot.Api Classes PixelApiClient Used to make HTTP API request instead of using the websocket. Required for obtaining information used to join a world. PixelApiException"
  },
  "api/PixelPilot.ChatCommands.CommandManager.html": {
    "href": "api/PixelPilot.ChatCommands.CommandManager.html",
    "title": "Class CommandManager | PixelPilot",
    "keywords": "Class CommandManager Namespace PixelPilot.ChatCommands Assembly PixelPilot.ChatCommands.dll public class CommandManager : PixelChatCommandManager<Player>, IChatCommandManager Inheritance object PixelChatCommandManager<Player> CommandManager Implements IChatCommandManager Inherited Members PixelChatCommandManager<Player>.CommandPrefixes PixelChatCommandManager<Player>.ChatCommands PixelChatCommandManager<Player>.HelpFormatter PixelChatCommandManager<Player>.SendHelp PixelChatCommandManager<Player>.RegisterCustomCommands PixelChatCommandManager<Player>.RegisterRestrictedCustomCommands PixelChatCommandManager<Player>.GetAvailableCommands(ICommandSender) PixelChatCommandManager<Player>.OnPlayerCommand(string, ICommandSender, string) PixelChatCommandManager<Player>.CreateSender(Player, string) PixelChatCommandManager<Player>.AddCommand(ChatCommand) PixelChatCommandManager<Player>.AddHelpCommand() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandManager(PixelPilotClient, PixelPlayerManager<Player>) public CommandManager(PixelPilotClient client, PixelPlayerManager<Player> pixelPlayerManager) Parameters client PixelPilotClient pixelPlayerManager PixelPlayerManager<Player>"
  },
  "api/PixelPilot.ChatCommands.CommandSender.html": {
    "href": "api/PixelPilot.ChatCommands.CommandSender.html",
    "title": "Class CommandSender | PixelPilot",
    "keywords": "Class CommandSender Namespace PixelPilot.ChatCommands Assembly PixelPilot.ChatCommands.dll public class CommandSender : ICommandSender Inheritance object CommandSender Implements ICommandSender Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandSender(IPixelPlayer, PixelPilotClient, string) public CommandSender(IPixelPlayer player, PixelPilotClient client, string prefixUsed) Parameters player IPixelPlayer client PixelPilotClient prefixUsed string Properties Player public IPixelPlayer Player { get; } Property Value IPixelPlayer PrefixUsed public string PrefixUsed { get; set; } Property Value string Methods HasPermission(string?) public virtual bool HasPermission(string? permission) Parameters permission string Returns bool SendMessage(string) public virtual void SendMessage(string msg) Parameters msg string"
  },
  "api/PixelPilot.ChatCommands.Commands.ChatCommand.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.ChatCommand.html",
    "title": "Class ChatCommand | PixelPilot",
    "keywords": "Class ChatCommand Namespace PixelPilot.ChatCommands.Commands Assembly PixelPilot.ChatCommands.dll public abstract class ChatCommand : ICommandExecutor Inheritance object ChatCommand Implements ICommandExecutor Derived BasicHelpCommand RootCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChatCommand(string, string, string?) public ChatCommand(string name, string description, string? permission) Parameters name string description string permission string Properties Aliases public List<string> Aliases { get; } Property Value List<string> Description public string Description { get; } Property Value string FullPermission protected string? FullPermission { get; set; } Property Value string HelpFormatter public IHelpFormatter? HelpFormatter { get; set; } Property Value IHelpFormatter IsAsync public bool IsAsync { get; set; } Property Value bool Name public string Name { get; } Property Value string Parent public ChatCommand? Parent { get; set; } Property Value ChatCommand Permission public string? Permission { get; } Property Value string Methods CheckNameMatch(string) Checks if the input matches the name or aliases of this command. public bool CheckNameMatch(string input) Parameters input string Input to test Returns bool CheckPermission(ICommandSender) public virtual bool CheckPermission(ICommandSender sender) Parameters sender ICommandSender Returns bool ExecuteCommand(ICommandSender, string, string[]) public abstract Task ExecuteCommand(ICommandSender sender, string fullCommand, string[] args) Parameters sender ICommandSender fullCommand string args string[] Returns Task GetAlias() public string GetAlias() Returns string GetFullName() public string GetFullName() Returns string GetFullName(CommandNameFormat) public string GetFullName(CommandNameFormat format) Parameters format CommandNameFormat Returns string GetFullPermission() public string? GetFullPermission() Returns string GetHelpFormatter() protected IHelpFormatter GetHelpFormatter() Returns IHelpFormatter HasParent() public bool HasParent() Returns bool"
  },
  "api/PixelPilot.ChatCommands.Commands.CommandNameFormat.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.CommandNameFormat.html",
    "title": "Enum CommandNameFormat | PixelPilot",
    "keywords": "Enum CommandNameFormat Namespace PixelPilot.ChatCommands.Commands Assembly PixelPilot.ChatCommands.dll public enum CommandNameFormat Fields AllAlias = 1 NoAlias = 0 RootAlias = 2"
  },
  "api/PixelPilot.ChatCommands.Commands.Help.BasicHelpCommand.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.Help.BasicHelpCommand.html",
    "title": "Class BasicHelpCommand | PixelPilot",
    "keywords": "Class BasicHelpCommand Namespace PixelPilot.ChatCommands.Commands.Help Assembly PixelPilot.ChatCommands.dll public class BasicHelpCommand : ChatCommand, ICommandExecutor Inheritance object ChatCommand BasicHelpCommand Implements ICommandExecutor Inherited Members ChatCommand.Name ChatCommand.Description ChatCommand.Permission ChatCommand.Aliases ChatCommand.HelpFormatter ChatCommand.FullPermission ChatCommand.Parent ChatCommand.IsAsync ChatCommand.CheckNameMatch(string) ChatCommand.CheckPermission(ICommandSender) ChatCommand.GetAlias() ChatCommand.GetFullPermission() ChatCommand.GetFullName() ChatCommand.GetFullName(CommandNameFormat) ChatCommand.HasParent() ChatCommand.GetHelpFormatter() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BasicHelpCommand(IChatCommandManager) public BasicHelpCommand(IChatCommandManager chatCommandManager) Parameters chatCommandManager IChatCommandManager Methods ExecuteCommand(ICommandSender, string, string[]) public override Task ExecuteCommand(ICommandSender sender, string fullCommand, string[] args) Parameters sender ICommandSender fullCommand string args string[] Returns Task"
  },
  "api/PixelPilot.ChatCommands.Commands.Help.BasicHelpFormatter.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.Help.BasicHelpFormatter.html",
    "title": "Class BasicHelpFormatter | PixelPilot",
    "keywords": "Class BasicHelpFormatter Namespace PixelPilot.ChatCommands.Commands.Help Assembly PixelPilot.ChatCommands.dll public class BasicHelpFormatter : IHelpFormatter Inheritance object BasicHelpFormatter Implements IHelpFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SendHelp(ICommandSender, List<ChatCommand>) public void SendHelp(ICommandSender sender, List<ChatCommand> subCommands) Parameters sender ICommandSender subCommands List<ChatCommand>"
  },
  "api/PixelPilot.ChatCommands.Commands.Help.IHelpFormatter.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.Help.IHelpFormatter.html",
    "title": "Interface IHelpFormatter | PixelPilot",
    "keywords": "Interface IHelpFormatter Namespace PixelPilot.ChatCommands.Commands.Help Assembly PixelPilot.ChatCommands.dll public interface IHelpFormatter Methods SendHelp(ICommandSender, List<ChatCommand>) void SendHelp(ICommandSender sender, List<ChatCommand> subCommands) Parameters sender ICommandSender subCommands List<ChatCommand>"
  },
  "api/PixelPilot.ChatCommands.Commands.Help.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.Help.html",
    "title": "Namespace PixelPilot.ChatCommands.Commands.Help | PixelPilot",
    "keywords": "Namespace PixelPilot.ChatCommands.Commands.Help Classes BasicHelpCommand BasicHelpFormatter Interfaces IHelpFormatter"
  },
  "api/PixelPilot.ChatCommands.Commands.ICommandExecutor.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.ICommandExecutor.html",
    "title": "Interface ICommandExecutor | PixelPilot",
    "keywords": "Interface ICommandExecutor Namespace PixelPilot.ChatCommands.Commands Assembly PixelPilot.ChatCommands.dll public interface ICommandExecutor Methods ExecuteCommand(ICommandSender, string, string[]) Task ExecuteCommand(ICommandSender sender, string fullCommand, string[] args) Parameters sender ICommandSender fullCommand string args string[] Returns Task"
  },
  "api/PixelPilot.ChatCommands.Commands.RootCommand.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.RootCommand.html",
    "title": "Class RootCommand | PixelPilot",
    "keywords": "Class RootCommand Namespace PixelPilot.ChatCommands.Commands Assembly PixelPilot.ChatCommands.dll public class RootCommand : ChatCommand, ICommandExecutor Inheritance object ChatCommand RootCommand Implements ICommandExecutor Inherited Members ChatCommand.Name ChatCommand.Description ChatCommand.Permission ChatCommand.Aliases ChatCommand.HelpFormatter ChatCommand.FullPermission ChatCommand.Parent ChatCommand.IsAsync ChatCommand.CheckNameMatch(string) ChatCommand.GetAlias() ChatCommand.GetFullPermission() ChatCommand.GetFullName() ChatCommand.GetFullName(CommandNameFormat) ChatCommand.HasParent() ChatCommand.GetHelpFormatter() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RootCommand(string, string, string?) public RootCommand(string name, string description, string? permission) Parameters name string description string permission string Methods AddCommand(ChatCommand) public void AddCommand(ChatCommand command) Parameters command ChatCommand CheckPermission(ICommandSender) Permission check for this node. @param sender The command sender @return True if allowed public override bool CheckPermission(ICommandSender sender) Parameters sender ICommandSender Returns bool ExecuteCommand(ICommandSender, string, string[]) public override Task ExecuteCommand(ICommandSender sender, string fullCommand, string[] args) Parameters sender ICommandSender fullCommand string args string[] Returns Task GetSubCommands(ICommandSender) public List<ChatCommand> GetSubCommands(ICommandSender sender) Parameters sender ICommandSender Returns List<ChatCommand>"
  },
  "api/PixelPilot.ChatCommands.Commands.html": {
    "href": "api/PixelPilot.ChatCommands.Commands.html",
    "title": "Namespace PixelPilot.ChatCommands.Commands | PixelPilot",
    "keywords": "Namespace PixelPilot.ChatCommands.Commands Classes ChatCommand RootCommand Interfaces ICommandExecutor Enums CommandNameFormat"
  },
  "api/PixelPilot.ChatCommands.IChatCommandManager.html": {
    "href": "api/PixelPilot.ChatCommands.IChatCommandManager.html",
    "title": "Interface IChatCommandManager | PixelPilot",
    "keywords": "Interface IChatCommandManager Namespace PixelPilot.ChatCommands Assembly PixelPilot.ChatCommands.dll public interface IChatCommandManager Properties HelpFormatter IHelpFormatter HelpFormatter { get; } Property Value IHelpFormatter Methods GetAvailableCommands(ICommandSender) List<ChatCommand> GetAvailableCommands(ICommandSender sender) Parameters sender ICommandSender Returns List<ChatCommand>"
  },
  "api/PixelPilot.ChatCommands.ICommandSender.html": {
    "href": "api/PixelPilot.ChatCommands.ICommandSender.html",
    "title": "Interface ICommandSender | PixelPilot",
    "keywords": "Interface ICommandSender Namespace PixelPilot.ChatCommands Assembly PixelPilot.ChatCommands.dll public interface ICommandSender Properties Player IPixelPlayer Player { get; } Property Value IPixelPlayer PrefixUsed string PrefixUsed { get; set; } Property Value string Methods HasPermission(string?) bool HasPermission(string? permission) Parameters permission string Returns bool SendMessage(string) void SendMessage(string msg) Parameters msg string"
  },
  "api/PixelPilot.ChatCommands.Messages.CommandMessages.html": {
    "href": "api/PixelPilot.ChatCommands.Messages.CommandMessages.html",
    "title": "Class CommandMessages | PixelPilot",
    "keywords": "Class CommandMessages Namespace PixelPilot.ChatCommands.Messages Assembly PixelPilot.ChatCommands.dll public static class CommandMessages Inheritance object CommandMessages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NoPermission public static string NoPermission Field Value string UnknownArgument public static string UnknownArgument Field Value string UnknownCommand public static string? UnknownCommand Field Value string"
  },
  "api/PixelPilot.ChatCommands.Messages.html": {
    "href": "api/PixelPilot.ChatCommands.Messages.html",
    "title": "Namespace PixelPilot.ChatCommands.Messages | PixelPilot",
    "keywords": "Namespace PixelPilot.ChatCommands.Messages Classes CommandMessages"
  },
  "api/PixelPilot.ChatCommands.PixelChatCommandManager-1.html": {
    "href": "api/PixelPilot.ChatCommands.PixelChatCommandManager-1.html",
    "title": "Class PixelChatCommandManager<T> | PixelPilot",
    "keywords": "Class PixelChatCommandManager<T> Namespace PixelPilot.ChatCommands Assembly PixelPilot.ChatCommands.dll public class PixelChatCommandManager<T> : IChatCommandManager where T : IPixelPlayer Type Parameters T Inheritance object PixelChatCommandManager<T> Implements IChatCommandManager Derived CommandManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PixelChatCommandManager(PixelPilotClient, PixelPlayerManager<T>) public PixelChatCommandManager(PixelPilotClient client, PixelPlayerManager<T> pixelPlayerManager) Parameters client PixelPilotClient pixelPlayerManager PixelPlayerManager<T> Properties ChatCommands public List<ChatCommand> ChatCommands { get; set; } Property Value List<ChatCommand> CommandPrefixes public List<string> CommandPrefixes { get; set; } Property Value List<string> HelpFormatter public IHelpFormatter HelpFormatter { get; set; } Property Value IHelpFormatter RegisterCustomCommands public bool RegisterCustomCommands { get; set; } Property Value bool RegisterRestrictedCustomCommands public bool RegisterRestrictedCustomCommands { get; set; } Property Value bool SendHelp public bool SendHelp { get; set; } Property Value bool Methods AddCommand(ChatCommand) public void AddCommand(ChatCommand command) Parameters command ChatCommand AddHelpCommand() public void AddHelpCommand() CreateSender(T, string) protected virtual ICommandSender CreateSender(T player, string prefixUsed) Parameters player T prefixUsed string Returns ICommandSender GetAvailableCommands(ICommandSender) public List<ChatCommand> GetAvailableCommands(ICommandSender sender) Parameters sender ICommandSender Returns List<ChatCommand> OnPlayerCommand(string, ICommandSender, string) public void OnPlayerCommand(string prefix, ICommandSender sender, string commandText) Parameters prefix string sender ICommandSender commandText string"
  },
  "api/PixelPilot.ChatCommands.html": {
    "href": "api/PixelPilot.ChatCommands.html",
    "title": "Namespace PixelPilot.ChatCommands | PixelPilot",
    "keywords": "Namespace PixelPilot.ChatCommands Classes CommandManager CommandSender PixelChatCommandManager<T> Interfaces IChatCommandManager ICommandSender"
  },
  "api/PixelPilot.Client.JoinData.html": {
    "href": "api/PixelPilot.Client.JoinData.html",
    "title": "Class JoinData | PixelPilot",
    "keywords": "Class JoinData Namespace PixelPilot.Client Assembly PixelPilot.Core.dll public class JoinData Inheritance object JoinData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties WorldHeight [JsonPropertyName(\"world_height\")] public int? WorldHeight { get; set; } Property Value int? WorldTitle [JsonPropertyName(\"world_title\")] public string WorldTitle { get; set; } Property Value string WorldWidth [JsonPropertyName(\"world_width\")] public int? WorldWidth { get; set; } Property Value int?"
  },
  "api/PixelPilot.Client.Messages.BinaryDataList.html": {
    "href": "api/PixelPilot.Client.Messages.BinaryDataList.html",
    "title": "Class BinaryDataList | PixelPilot",
    "keywords": "Class BinaryDataList Namespace PixelPilot.Client.Messages Assembly PixelPilot.Core.dll public class BinaryDataList Inheritance object BinaryDataList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BinaryDataList(dynamic[]) public BinaryDataList(dynamic[] data) Parameters data dynamic[] Properties Items public IReadOnlyCollection<dynamic> Items { get; } Property Value IReadOnlyCollection<dynamic> Methods FromByteArray(byte[]) public static BinaryDataList FromByteArray(byte[] array) Parameters array byte[] Returns BinaryDataList Get(int) public dynamic Get(int index) Parameters index int Returns dynamic ToByteArray() public byte[] ToByteArray() Returns byte[]"
  },
  "api/PixelPilot.Client.Messages.BinaryFieldConverter.html": {
    "href": "api/PixelPilot.Client.Messages.BinaryFieldConverter.html",
    "title": "Class BinaryFieldConverter | PixelPilot",
    "keywords": "Class BinaryFieldConverter Namespace PixelPilot.Client.Messages Assembly PixelPilot.Core.dll Converts binary data into pixel game packets. public class BinaryFieldConverter Inheritance object BinaryFieldConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConstructBinaryDataList(byte[]) Read from a binary stream and output the correct objects. public static dynamic[] ConstructBinaryDataList(byte[] binary) Parameters binary byte[] The binary data representing the packet. Returns dynamic[] The constructed array ReadType(BinaryReader, PacketFieldType) Reads data of a specified type from a BinaryReader according to the provided PacketFieldType. public static dynamic ReadType(BinaryReader reader, PacketFieldType fieldType) Parameters reader BinaryReader The BinaryReader to read from. fieldType PacketFieldType The type of data to read. Returns dynamic The data read from the BinaryReader. Exceptions Exception Thrown when the provided fieldType is not supported. ReadTypeLe(BinaryReader, PacketFieldType) Reads data of a specified type from a BinaryReader in little-endian format according to the provided PacketFieldType. public static dynamic ReadTypeLe(BinaryReader reader, PacketFieldType fieldType) Parameters reader BinaryReader The BinaryReader to read from. fieldType PacketFieldType The type of data to read. Returns dynamic The data read from the BinaryReader. Exceptions Exception Thrown when the provided fieldType is not supported. WriteTypeBe(BinaryWriter, dynamic) public static void WriteTypeBe(BinaryWriter writer, dynamic fieldValue) Parameters writer BinaryWriter fieldValue dynamic"
  },
  "api/PixelPilot.Client.Messages.Constants.EffectType.html": {
    "href": "api/PixelPilot.Client.Messages.Constants.EffectType.html",
    "title": "Enum EffectType | PixelPilot",
    "keywords": "Enum EffectType Namespace PixelPilot.Client.Messages.Constants Assembly PixelPilot.Core.dll public enum EffectType Fields Curse = 4 Fly = 1 GravityDirection = 9 GravityForce = 7 GravityMultiJump = 8 Invulnerability = 3 JumpHeight = 0 Magic = 6 Speed = 2 Zombie = 5"
  },
  "api/PixelPilot.Client.Messages.Constants.PacketFieldType.html": {
    "href": "api/PixelPilot.Client.Messages.Constants.PacketFieldType.html",
    "title": "Enum PacketFieldType | PixelPilot",
    "keywords": "Enum PacketFieldType Namespace PixelPilot.Client.Messages.Constants Assembly PixelPilot.Core.dll public enum PacketFieldType Fields Boolean = 7 Byte = 1 ByteArray = 8 Double = 6 Float = 5 Int16 = 2 Int32 = 3 Int64 = 4 String = 0 UInt32 = 9"
  },
  "api/PixelPilot.Client.Messages.Constants.html": {
    "href": "api/PixelPilot.Client.Messages.Constants.html",
    "title": "Namespace PixelPilot.Client.Messages.Constants | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Messages.Constants Enums EffectType PacketFieldType"
  },
  "api/PixelPilot.Client.Messages.Exceptions.PixelException.html": {
    "href": "api/PixelPilot.Client.Messages.Exceptions.PixelException.html",
    "title": "Class PixelException | PixelPilot",
    "keywords": "Class PixelException Namespace PixelPilot.Client.Messages.Exceptions Assembly PixelPilot.Core.dll public abstract class PixelException : Exception, ISerializable Inheritance object Exception PixelException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PixelException(string) protected PixelException(string msg) Parameters msg string"
  },
  "api/PixelPilot.Client.Messages.Exceptions.html": {
    "href": "api/PixelPilot.Client.Messages.Exceptions.html",
    "title": "Namespace PixelPilot.Client.Messages.Exceptions | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Messages.Exceptions Classes PixelException"
  },
  "api/PixelPilot.Client.Messages.IDynamicConstructedPacket.html": {
    "href": "api/PixelPilot.Client.Messages.IDynamicConstructedPacket.html",
    "title": "Interface IDynamicConstructedPacket | PixelPilot",
    "keywords": "Interface IDynamicConstructedPacket Namespace PixelPilot.Client.Messages Assembly PixelPilot.Core.dll Constructor that enforces the contract that the packet implements a List of dynamic type constructor. This is used for when a packet cannot simply be constructed using a constructor because the packet length may vary. public interface IDynamicConstructedPacket : IPixelGamePacket"
  },
  "api/PixelPilot.Client.Messages.IPacketOutConvertible.html": {
    "href": "api/PixelPilot.Client.Messages.IPacketOutConvertible.html",
    "title": "Interface IPacketOutConvertible | PixelPilot",
    "keywords": "Interface IPacketOutConvertible Namespace PixelPilot.Client.Messages Assembly PixelPilot.Core.dll public interface IPacketOutConvertible Methods AsPacketOut() IPixelGamePacketOut AsPacketOut() Returns IPixelGamePacketOut"
  },
  "api/PixelPilot.Client.Messages.IPixelGamePacket.html": {
    "href": "api/PixelPilot.Client.Messages.IPixelGamePacket.html",
    "title": "Interface IPixelGamePacket | PixelPilot",
    "keywords": "Interface IPixelGamePacket Namespace PixelPilot.Client.Messages Assembly PixelPilot.Core.dll public interface IPixelGamePacket"
  },
  "api/PixelPilot.Client.Messages.IPixelGamePacketOut.html": {
    "href": "api/PixelPilot.Client.Messages.IPixelGamePacketOut.html",
    "title": "Interface IPixelGamePacketOut | PixelPilot",
    "keywords": "Interface IPixelGamePacketOut Namespace PixelPilot.Client.Messages Assembly PixelPilot.Core.dll Packets that can be sent to the PixelWalker game server. public interface IPixelGamePacketOut Methods ToBinaryPacket() byte[] ToBinaryPacket() Returns byte[]"
  },
  "api/PixelPilot.Client.Messages.IPixelGamePlayerPacket.html": {
    "href": "api/PixelPilot.Client.Messages.IPixelGamePlayerPacket.html",
    "title": "Interface IPixelGamePlayerPacket | PixelPilot",
    "keywords": "Interface IPixelGamePlayerPacket Namespace PixelPilot.Client.Messages Assembly PixelPilot.Core.dll Special interface for packets that are triggered by or indicate a status change to a player. public interface IPixelGamePlayerPacket : IPixelGamePacket Properties PlayerId int PlayerId { get; } Property Value int"
  },
  "api/PixelPilot.Client.Messages.Misc.BinaryReaderExtensions.html": {
    "href": "api/PixelPilot.Client.Messages.Misc.BinaryReaderExtensions.html",
    "title": "Class BinaryReaderExtensions | PixelPilot",
    "keywords": "Class BinaryReaderExtensions Namespace PixelPilot.Client.Messages.Misc Assembly PixelPilot.Core.dll public static class BinaryReaderExtensions Inheritance object BinaryReaderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReadBytesRequired(BinaryReader, int) public static byte[] ReadBytesRequired(this BinaryReader binRdr, int byteCount) Parameters binRdr BinaryReader byteCount int Returns byte[] ReadDoubleBE(BinaryReader) public static double ReadDoubleBE(this BinaryReader binaryReader) Parameters binaryReader BinaryReader Returns double ReadInt16BE(BinaryReader) public static short ReadInt16BE(this BinaryReader binRdr) Parameters binRdr BinaryReader Returns short ReadInt32BE(BinaryReader) public static int ReadInt32BE(this BinaryReader binRdr) Parameters binRdr BinaryReader Returns int ReadUInt16BE(BinaryReader) public static ushort ReadUInt16BE(this BinaryReader binRdr) Parameters binRdr BinaryReader Returns ushort ReadUInt32BE(BinaryReader) public static uint ReadUInt32BE(this BinaryReader binRdr) Parameters binRdr BinaryReader Returns uint Reverse(byte[]) public static byte[] Reverse(this byte[] b) Parameters b byte[] Returns byte[]"
  },
  "api/PixelPilot.Client.Messages.Misc.html": {
    "href": "api/PixelPilot.Client.Messages.Misc.html",
    "title": "Namespace PixelPilot.Client.Messages.Misc | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Messages.Misc Classes BinaryReaderExtensions"
  },
  "api/PixelPilot.Client.Messages.Packets.Exceptions.PacketWrapException.html": {
    "href": "api/PixelPilot.Client.Messages.Packets.Exceptions.PacketWrapException.html",
    "title": "Class PacketWrapException | PixelPilot",
    "keywords": "Class PacketWrapException Namespace PixelPilot.Client.Messages.Packets.Exceptions Assembly PixelPilot.Core.dll public class PacketWrapException : Exception, ISerializable Inheritance object Exception PacketWrapException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PacketWrapException(string, string) public PacketWrapException(string packetToWrap, string wrapperPacket) Parameters packetToWrap string wrapperPacket string"
  },
  "api/PixelPilot.Client.Messages.Packets.Exceptions.html": {
    "href": "api/PixelPilot.Client.Messages.Packets.Exceptions.html",
    "title": "Namespace PixelPilot.Client.Messages.Packets.Exceptions | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Messages.Packets.Exceptions Classes PacketWrapException"
  },
  "api/PixelPilot.Client.Messages.Packets.Extensions.PartExtensions.html": {
    "href": "api/PixelPilot.Client.Messages.Packets.Extensions.PartExtensions.html",
    "title": "Class PartExtensions | PixelPilot",
    "keywords": "Class PartExtensions Namespace PixelPilot.Client.Messages.Packets.Extensions Assembly PixelPilot.Core.dll public static class PartExtensions Inheritance object PartExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToPoint(PointInteger) public static Point ToPoint(this PointInteger point) Parameters point PointInteger Returns Point"
  },
  "api/PixelPilot.Client.Messages.Packets.Extensions.WorldBlockPacketBuilder.html": {
    "href": "api/PixelPilot.Client.Messages.Packets.Extensions.WorldBlockPacketBuilder.html",
    "title": "Class WorldBlockPacketBuilder | PixelPilot",
    "keywords": "Class WorldBlockPacketBuilder Namespace PixelPilot.Client.Messages.Packets.Extensions Assembly PixelPilot.Core.dll public static class WorldBlockPacketBuilder Inheritance object WorldBlockPacketBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreatePacket(List<Point>, int, int) public static WorldBlockPlacedPacket CreatePacket(List<Point> positions, int layer, int blockId) Parameters positions List<Point> layer int blockId int Returns WorldBlockPlacedPacket CreatePacket(List<Point>, int, int, dynamic[]) public static WorldBlockPlacedPacket CreatePacket(List<Point> positions, int layer, int blockId, dynamic[] extraFields) Parameters positions List<Point> layer int blockId int extraFields dynamic[] Returns WorldBlockPlacedPacket CreatePacket(int, int, int, int) public static WorldBlockPlacedPacket CreatePacket(int x, int y, int layer, int blockId) Parameters x int y int layer int blockId int Returns WorldBlockPlacedPacket CreatePacket(int, int, int, int, dynamic[]) public static WorldBlockPlacedPacket CreatePacket(int x, int y, int layer, int blockId, dynamic[] extraFields) Parameters x int y int layer int blockId int extraFields dynamic[] Returns WorldBlockPlacedPacket"
  },
  "api/PixelPilot.Client.Messages.Packets.Extensions.WorldPacketExtensions.html": {
    "href": "api/PixelPilot.Client.Messages.Packets.Extensions.WorldPacketExtensions.html",
    "title": "Class WorldPacketExtensions | PixelPilot",
    "keywords": "Class WorldPacketExtensions Namespace PixelPilot.Client.Messages.Packets.Extensions Assembly PixelPilot.Core.dll public static class WorldPacketExtensions Inheritance object WorldPacketExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPacket(WorldPacket) public static IMessage GetPacket(this WorldPacket packet) Parameters packet WorldPacket Returns IMessage GetPlayerId(IMessage) public static int? GetPlayerId(this IMessage packet) Parameters packet IMessage Returns int? IsReplayable(IMessage) If this packet can be replayed without much issue by the client. public static bool IsReplayable(this IMessage packet) Parameters packet IMessage Returns bool RemovePlayerId(IMessage) Returns a clone of the packet with the PlayerId field unset. public static IMessage RemovePlayerId(this IMessage packet) Parameters packet IMessage A worldPacket oneof Returns IMessage A clone of the packet. ToWorldPacket(IMessage) public static WorldPacket ToWorldPacket(this IMessage message) Parameters message IMessage Returns WorldPacket"
  },
  "api/PixelPilot.Client.Messages.Packets.Extensions.html": {
    "href": "api/PixelPilot.Client.Messages.Packets.Extensions.html",
    "title": "Namespace PixelPilot.Client.Messages.Packets.Extensions | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Messages.Packets.Extensions Classes PartExtensions WorldBlockPacketBuilder WorldPacketExtensions"
  },
  "api/PixelPilot.Client.Messages.Queue.IPixelPacketQueue.html": {
    "href": "api/PixelPilot.Client.Messages.Queue.IPixelPacketQueue.html",
    "title": "Interface IPixelPacketQueue | PixelPilot",
    "keywords": "Interface IPixelPacketQueue Namespace PixelPilot.Client.Messages.Queue Assembly PixelPilot.Core.dll public interface IPixelPacketQueue : IDisposable Inherited Members IDisposable.Dispose() Properties IsOwner bool IsOwner { get; set; } Property Value bool QueueSize int QueueSize { get; } Property Value int Methods EnqueuePacket(IMessage) void EnqueuePacket(IMessage packet) Parameters packet IMessage Start() Task Start() Returns Task Stop() Task Stop() Returns Task"
  },
  "api/PixelPilot.Client.Messages.Queue.TokenBucketPacketOutQueue.html": {
    "href": "api/PixelPilot.Client.Messages.Queue.TokenBucketPacketOutQueue.html",
    "title": "Class TokenBucketPacketOutQueue | PixelPilot",
    "keywords": "Class TokenBucketPacketOutQueue Namespace PixelPilot.Client.Messages.Queue Assembly PixelPilot.Core.dll Rate limits outgoing messages by consuming tokens. public class TokenBucketPacketOutQueue : IPixelPacketQueue, IDisposable Inheritance object TokenBucketPacketOutQueue Implements IPixelPacketQueue IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenBucketPacketOutQueue(PixelPilotClient) public TokenBucketPacketOutQueue(PixelPilotClient client) Parameters client PixelPilotClient Fields GuestChatRateLimit public const int GuestChatRateLimit = 15 Field Value int GuestTotalRateLimit public const int GuestTotalRateLimit = 100 Field Value int OwnerChatRateLimit public const int OwnerChatRateLimit = 15 Field Value int OwnerTotalRateLimit public const int OwnerTotalRateLimit = 250 Field Value int Properties IsOwner public bool IsOwner { get; set; } Property Value bool IsProcessing public bool IsProcessing { get; } Property Value bool QueueSize public int QueueSize { get; } Property Value int Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() EnqueuePacket(IMessage) public void EnqueuePacket(IMessage packet) Parameters packet IMessage Start() public Task Start() Returns Task Stop() public Task Stop() Returns Task"
  },
  "api/PixelPilot.Client.Messages.Queue.html": {
    "href": "api/PixelPilot.Client.Messages.Queue.html",
    "title": "Namespace PixelPilot.Client.Messages.Queue | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Messages.Queue Classes TokenBucketPacketOutQueue Rate limits outgoing messages by consuming tokens. Interfaces IPixelPacketQueue"
  },
  "api/PixelPilot.Client.Messages.html": {
    "href": "api/PixelPilot.Client.Messages.html",
    "title": "Namespace PixelPilot.Client.Messages | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Messages Classes BinaryDataList BinaryFieldConverter Converts binary data into pixel game packets. Interfaces IDynamicConstructedPacket Constructor that enforces the contract that the packet implements a List of dynamic type constructor. This is used for when a packet cannot simply be constructed using a constructor because the packet length may vary. IPacketOutConvertible IPixelGamePacket IPixelGamePacketOut Packets that can be sent to the PixelWalker game server. IPixelGamePlayerPacket Special interface for packets that are triggered by or indicate a status change to a player."
  },
  "api/PixelPilot.Client.PixelGameClientBuilder.html": {
    "href": "api/PixelPilot.Client.PixelGameClientBuilder.html",
    "title": "Class PixelGameClientBuilder | PixelPilot",
    "keywords": "Class PixelGameClientBuilder Namespace PixelPilot.Client Assembly PixelPilot.Core.dll public class PixelGameClientBuilder Inheritance object PixelGameClientBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ApiClient public PixelApiClient? ApiClient Field Value PixelApiClient Properties AutomaticReconnect public bool AutomaticReconnect { get; set; } Property Value bool ConfigurePacketQueue public Func<PixelPilotClient, IPixelPacketQueue?> ConfigurePacketQueue { get; set; } Property Value Func<PixelPilotClient, IPixelPacketQueue> Email public string? Email { get; set; } Property Value string Password public string? Password { get; set; } Property Value string Prefix public string? Prefix { get; set; } Property Value string Token public string? Token { get; set; } Property Value string Methods Build() public PixelPilotClient Build() Returns PixelPilotClient DisablePacketQueue() Disable the internal packet queue that prevents messages from being caught by the PW rate limiter. public PixelGameClientBuilder DisablePacketQueue() Returns PixelGameClientBuilder SetAutomaticReconnect(bool) public PixelGameClientBuilder SetAutomaticReconnect(bool value) Parameters value bool Returns PixelGameClientBuilder SetEmail(string) public PixelGameClientBuilder SetEmail(string email) Parameters email string Returns PixelGameClientBuilder SetPassword(string) public PixelGameClientBuilder SetPassword(string password) Parameters password string Returns PixelGameClientBuilder SetPixelApi(PixelApiClient?) Use a custom PixelApiClient public PixelGameClientBuilder SetPixelApi(PixelApiClient? client) Parameters client PixelApiClient The custom client Returns PixelGameClientBuilder SetPrefix(string?) Set the prefix that the bot will use outgoing chat messages. public PixelGameClientBuilder SetPrefix(string? prefix) Parameters prefix string Returns PixelGameClientBuilder SetToken(string) public PixelGameClientBuilder SetToken(string token) Parameters token string Returns PixelGameClientBuilder"
  },
  "api/PixelPilot.Client.PixelGameException.html": {
    "href": "api/PixelPilot.Client.PixelGameException.html",
    "title": "Class PixelGameException | PixelPilot",
    "keywords": "Class PixelGameException Namespace PixelPilot.Client Assembly PixelPilot.Core.dll public class PixelGameException : Exception, ISerializable Inheritance object Exception PixelGameException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PixelGameException(string) public PixelGameException(string msg) Parameters msg string"
  },
  "api/PixelPilot.Client.PixelPilotClient.ClientConnected.html": {
    "href": "api/PixelPilot.Client.PixelPilotClient.ClientConnected.html",
    "title": "Delegate PixelPilotClient.ClientConnected | PixelPilot",
    "keywords": "Delegate PixelPilotClient.ClientConnected Namespace PixelPilot.Client Assembly PixelPilot.Core.dll public delegate void PixelPilotClient.ClientConnected(object sender) Parameters sender object"
  },
  "api/PixelPilot.Client.PixelPilotClient.ClientDisconnected.html": {
    "href": "api/PixelPilot.Client.PixelPilotClient.ClientDisconnected.html",
    "title": "Delegate PixelPilotClient.ClientDisconnected | PixelPilot",
    "keywords": "Delegate PixelPilotClient.ClientDisconnected Namespace PixelPilot.Client Assembly PixelPilot.Core.dll public delegate void PixelPilotClient.ClientDisconnected(object sender, string? reason) Parameters sender object reason string"
  },
  "api/PixelPilot.Client.PixelPilotClient.PacketReceived.html": {
    "href": "api/PixelPilot.Client.PixelPilotClient.PacketReceived.html",
    "title": "Delegate PixelPilotClient.PacketReceived | PixelPilot",
    "keywords": "Delegate PixelPilotClient.PacketReceived Namespace PixelPilot.Client Assembly PixelPilot.Core.dll public delegate void PixelPilotClient.PacketReceived(object sender, IMessage packet) Parameters sender object packet IMessage"
  },
  "api/PixelPilot.Client.PixelPilotClient.PacketSend.html": {
    "href": "api/PixelPilot.Client.PixelPilotClient.PacketSend.html",
    "title": "Delegate PixelPilotClient.PacketSend | PixelPilot",
    "keywords": "Delegate PixelPilotClient.PacketSend Namespace PixelPilot.Client Assembly PixelPilot.Core.dll public delegate void PixelPilotClient.PacketSend(object sender, IMessage packet) Parameters sender object packet IMessage"
  },
  "api/PixelPilot.Client.PixelPilotClient.html": {
    "href": "api/PixelPilot.Client.PixelPilotClient.html",
    "title": "Class PixelPilotClient | PixelPilot",
    "keywords": "Class PixelPilotClient Namespace PixelPilot.Client Assembly PixelPilot.Core.dll Client for interacting with the PixelWalker game server. public class PixelPilotClient : IDisposable Inheritance object PixelPilotClient Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PixelPilotClient(PixelApiClient, bool, string?, Func<PixelPilotClient, IPixelPacketQueue?>) public PixelPilotClient(PixelApiClient apiClient, bool automaticReconnect, string? botPrefix, Func<PixelPilotClient, IPixelPacketQueue?> configurePacketQueue) Parameters apiClient PixelApiClient automaticReconnect bool botPrefix string configurePacketQueue Func<PixelPilotClient, IPixelPacketQueue> Fields ApiClient public readonly PixelApiClient ApiClient Field Value PixelApiClient SecondsBeforeGatewayTimeout public static readonly int SecondsBeforeGatewayTimeout Field Value int Properties AutomaticReconnect Indicates if the client will try to automatically reconnect if the connection gets somehow lost. public bool AutomaticReconnect { get; } Property Value bool BotId The ID used for the bot in the world. public int? BotId { get; } Property Value int? BotPlayerProperties The PlayerProperties of the bot account. public PlayerProperties? BotPlayerProperties { get; } Property Value PlayerProperties BotPrefix public string? BotPrefix { get; set; } Property Value string DisposeApi public bool DisposeApi { get; set; } Property Value bool IsConnected Indicates if the client is connected. public bool IsConnected { get; } Property Value bool PacketQueueSize public int PacketQueueSize { get; } Property Value int Username The username of this bot. public string? Username { get; } Property Value string Methods Builder() public static PixelGameClientBuilder Builder() Returns PixelGameClientBuilder Connect(string, JoinData?) Connects to a game room using the specified room type and room ID. public Task Connect(string roomId, JoinData? joinData = null) Parameters roomId string The ID of the room. joinData JoinData Join data, required for creating unsaved worlds. Returns Task A task representing the asynchronous operation. Disconnect() Disconnects the socket client gracefully by stopping it with a normal closure status. public Task Disconnect() Returns Task A task representing the asynchronous operation. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Send(IMessage) Sends a pixel game packet. Uses an internal rate limiter to limit packets. public void Send(IMessage packet) Parameters packet IMessage The pixel game packet to send. SendChat(string, bool) Sends a chat message while ensuring that the message doesn't become too long. public void SendChat(string msg, bool prefix = true) Parameters msg string The message prefix bool If the message should be prefixed SendDirect(IMessage) Sends a pixel game packet. Wraps it into a WorldPacket. public void SendDirect(IMessage packet) Parameters packet IMessage The pixel game packet to send. SendPm(string, string, bool) Same as SendChat but as PM. public void SendPm(string username, string msg, bool prefix = true) Parameters username string Player username msg string The message prefix bool If the message should contain the prefix SendRange(IEnumerable<IMessage>) Sends multiple pixel game packets. Uses an internal rate limiter to limit packets. public void SendRange(IEnumerable<IMessage> packets) Parameters packets IEnumerable<IMessage> The packets to be send WaitForDisconnect(CancellationToken) public Task WaitForDisconnect(CancellationToken ct = default) Parameters ct CancellationToken Returns Task WaitForEmptyQueue(int) public Task WaitForEmptyQueue(int checkTime = 1000) Parameters checkTime int Returns Task Events OnClientConnected Fired once init has been received by the client. public event PixelPilotClient.ClientConnected? OnClientConnected Event Type PixelPilotClient.ClientConnected OnClientDisconnected Fired when the client has been disconnected. Optional reason is available when present on the socket connection. public event PixelPilotClient.ClientDisconnected? OnClientDisconnected Event Type PixelPilotClient.ClientDisconnected OnPacketReceived Event that occurs when a packet is received. public event PixelPilotClient.PacketReceived? OnPacketReceived Event Type PixelPilotClient.PacketReceived OnPacketSend Event that occurs when a packet is send. The packet is the oneof WorldPacket (so not the WorldPacket). public event PixelPilotClient.PacketSend? OnPacketSend Event Type PixelPilotClient.PacketSend"
  },
  "api/PixelPilot.Client.Players.Basic.Player.html": {
    "href": "api/PixelPilot.Client.Players.Basic.Player.html",
    "title": "Class Player | PixelPilot",
    "keywords": "Class Player Namespace PixelPilot.Client.Players.Basic Assembly PixelPilot.Core.dll public class Player : IPixelPlayer Inheritance object Player Implements IPixelPlayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Player(PlayerJoinedPacket) Construct a new player from the incoming packet. public Player(PlayerJoinedPacket packet) Parameters packet PlayerJoinedPacket Player(int, string, string, int, string, Color, double, double, int, int, int, bool, bool, bool, bool, bool) public Player(int id, string accountId, string username, int face, string role, Color chatColor, double x, double y, int coins, int blueCoins, int deaths, bool godmode, bool modmode, bool hasCrown, bool canGod, bool canEdit) Parameters id int accountId string username string face int role string chatColor Color x double y double coins int blueCoins int deaths int godmode bool modmode bool hasCrown bool canGod bool canEdit bool Properties AccountId The account ID of this player. Use this for persistant storage. public string AccountId { get; } Property Value string BlueCoins public int BlueCoins { get; set; } Property Value int CanEdit public bool CanEdit { get; set; } Property Value bool CanGod public bool CanGod { get; set; } Property Value bool ChatColor public Color ChatColor { get; set; } Property Value Color Deaths public int Deaths { get; set; } Property Value int Face public int Face { get; set; } Property Value int Godmode public bool Godmode { get; set; } Property Value bool GoldCoins public int GoldCoins { get; set; } Property Value int HasCompletedWorld public bool HasCompletedWorld { get; set; } Property Value bool HasCrown public bool HasCrown { get; set; } Property Value bool Horizontal public int Horizontal { get; set; } Property Value int Id The unique player ID of this player in this world. public int Id { get; } Property Value int IsAdmin public bool IsAdmin { get; } Property Value bool ModX public double ModX { get; set; } Property Value double ModY public double ModY { get; set; } Property Value double Modmode public bool Modmode { get; set; } Property Value bool Role public string Role { get; } Property Value string SpaceJustDown public bool SpaceJustDown { get; set; } Property Value bool Spacedown public bool Spacedown { get; set; } Property Value bool TickId public int TickId { get; set; } Property Value int Username The display name of the player. public string Username { get; } Property Value string VelocityX public double VelocityX { get; set; } Property Value double VelocityY public double VelocityY { get; set; } Property Value double Vertical public int Vertical { get; set; } Property Value int X public double X { get; set; } Property Value double Y public double Y { get; set; } Property Value double"
  },
  "api/PixelPilot.Client.Players.Basic.PlayerManager.html": {
    "href": "api/PixelPilot.Client.Players.Basic.PlayerManager.html",
    "title": "Class PlayerManager | PixelPilot",
    "keywords": "Class PlayerManager Namespace PixelPilot.Client.Players.Basic Assembly PixelPilot.Core.dll Basic implementation of the player manager. public class PlayerManager : PixelPlayerManager<Player> Inheritance object PixelPlayerManager<Player> PlayerManager Inherited Members PixelPlayerManager<Player>._logger PixelPlayerManager<Player>.Players PixelPlayerManager<Player>.CrownedPlayerId PixelPlayerManager<Player>.ClientId PixelPlayerManager<Player>.OnPrePlayerStatusChange PixelPlayerManager<Player>.OnPlayerStatusChanged PixelPlayerManager<Player>.OnPlayerJoined PixelPlayerManager<Player>.OnPlayerLeft PixelPlayerManager<Player>.CrownedPlayer PixelPlayerManager<Player>.GetPlayer(int) PixelPlayerManager<Player>.GetPlayerByUsername(string) PixelPlayerManager<Player>.HandlePacket(object, IMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreatePlayer(PlayerJoinedPacket) Used to create a new instance of IPixelPlayer protected override Player CreatePlayer(PlayerJoinedPacket join) Parameters join PlayerJoinedPacket The join packet Returns Player A new IPixelPlayer instance"
  },
  "api/PixelPilot.Client.Players.Basic.html": {
    "href": "api/PixelPilot.Client.Players.Basic.html",
    "title": "Namespace PixelPilot.Client.Players.Basic | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Players.Basic Classes Player PlayerManager Basic implementation of the player manager."
  },
  "api/PixelPilot.Client.Players.IPixelPlayer.html": {
    "href": "api/PixelPilot.Client.Players.IPixelPlayer.html",
    "title": "Interface IPixelPlayer | PixelPilot",
    "keywords": "Interface IPixelPlayer Namespace PixelPilot.Client.Players Assembly PixelPilot.Core.dll public interface IPixelPlayer Properties AccountId The account ID of this player. Use this for persistant storage. string AccountId { get; } Property Value string BlockX int BlockX { get; } Property Value int BlockY int BlockY { get; } Property Value int BlueCoins int BlueCoins { get; set; } Property Value int CanEdit bool CanEdit { get; set; } Property Value bool CanGod bool CanGod { get; set; } Property Value bool ChatColor Color ChatColor { get; set; } Property Value Color Deaths int Deaths { get; set; } Property Value int Face int Face { get; set; } Property Value int Godmode bool Godmode { get; set; } Property Value bool GoldCoins int GoldCoins { get; set; } Property Value int HasCompletedWorld bool HasCompletedWorld { get; set; } Property Value bool HasCrown bool HasCrown { get; set; } Property Value bool Horizontal int Horizontal { get; set; } Property Value int Id The unique player ID of this player in this world. int Id { get; } Property Value int IsAdmin bool IsAdmin { get; } Property Value bool ModX double ModX { get; set; } Property Value double ModY double ModY { get; set; } Property Value double Modmode bool Modmode { get; set; } Property Value bool Role string Role { get; } Property Value string SpaceJustDown bool SpaceJustDown { get; set; } Property Value bool Spacedown bool Spacedown { get; set; } Property Value bool TickId int TickId { get; set; } Property Value int Username The display name of the player. string Username { get; } Property Value string VelocityX double VelocityX { get; set; } Property Value double VelocityY double VelocityY { get; set; } Property Value double Vertical int Vertical { get; set; } Property Value int X double X { get; set; } Property Value double Y double Y { get; set; } Property Value double"
  },
  "api/PixelPilot.Client.Players.PixelPlayerManager-1.PlayerJoined.html": {
    "href": "api/PixelPilot.Client.Players.PixelPlayerManager-1.PlayerJoined.html",
    "title": "Delegate PixelPlayerManager<T>.PlayerJoined | PixelPilot",
    "keywords": "Delegate PixelPlayerManager<T>.PlayerJoined Namespace PixelPilot.Client.Players Assembly PixelPilot.Core.dll public delegate void PixelPlayerManager<T>.PlayerJoined(object sender, T player) Parameters sender object player T"
  },
  "api/PixelPilot.Client.Players.PixelPlayerManager-1.PlayerLeft.html": {
    "href": "api/PixelPilot.Client.Players.PixelPlayerManager-1.PlayerLeft.html",
    "title": "Delegate PixelPlayerManager<T>.PlayerLeft | PixelPilot",
    "keywords": "Delegate PixelPlayerManager<T>.PlayerLeft Namespace PixelPilot.Client.Players Assembly PixelPilot.Core.dll public delegate void PixelPlayerManager<T>.PlayerLeft(object sender, T player) Parameters sender object player T"
  },
  "api/PixelPilot.Client.Players.PixelPlayerManager-1.PlayerStatusChanged.html": {
    "href": "api/PixelPilot.Client.Players.PixelPlayerManager-1.PlayerStatusChanged.html",
    "title": "Delegate PixelPlayerManager<T>.PlayerStatusChanged | PixelPilot",
    "keywords": "Delegate PixelPlayerManager<T>.PlayerStatusChanged Namespace PixelPilot.Client.Players Assembly PixelPilot.Core.dll public delegate void PixelPlayerManager<T>.PlayerStatusChanged(object sender, T player) Parameters sender object player T"
  },
  "api/PixelPilot.Client.Players.PixelPlayerManager-1.PrePlayerStatusChange.html": {
    "href": "api/PixelPilot.Client.Players.PixelPlayerManager-1.PrePlayerStatusChange.html",
    "title": "Delegate PixelPlayerManager<T>.PrePlayerStatusChange | PixelPilot",
    "keywords": "Delegate PixelPlayerManager<T>.PrePlayerStatusChange Namespace PixelPilot.Client.Players Assembly PixelPilot.Core.dll public delegate void PixelPlayerManager<T>.PrePlayerStatusChange(object sender, T player, IMessage packet) Parameters sender object player T packet IMessage"
  },
  "api/PixelPilot.Client.Players.PixelPlayerManager-1.html": {
    "href": "api/PixelPilot.Client.Players.PixelPlayerManager-1.html",
    "title": "Class PixelPlayerManager<T> | PixelPilot",
    "keywords": "Class PixelPlayerManager<T> Namespace PixelPilot.Client.Players Assembly PixelPilot.Core.dll Class that handles players in a world. Automatically updates the players stats. public abstract class PixelPlayerManager<T> where T : IPixelPlayer Type Parameters T Class that handles players in a world. Automatically updates the players stats. Inheritance object PixelPlayerManager<T> Derived PlayerManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields _logger protected ILogger _logger Field Value ILogger Properties ClientId public int ClientId { get; } Property Value int CrownedPlayer public T? CrownedPlayer { get; } Property Value T CrownedPlayerId public int CrownedPlayerId { get; } Property Value int Players public IEnumerable<T> Players { get; } Property Value IEnumerable<T> Methods CreatePlayer(PlayerJoinedPacket) Used to create a new instance of IPixelPlayer protected abstract T CreatePlayer(PlayerJoinedPacket join) Parameters join PlayerJoinedPacket The join packet Returns T A new IPixelPlayer instance GetPlayer(int) Get the player based on it's ID. Returns NULL if no player was found. public T? GetPlayer(int id) Parameters id int The player ID Returns T A IPixelPlayer or NULL GetPlayerByUsername(string) Gets the player by username (case invariant). Returns NULL if no player was found. public T? GetPlayerByUsername(string username) Parameters username string The username Returns T HandlePacket(object, IMessage) Method that can receive packets and handle them accordingly. Should update the player state and fire relevant events. public void HandlePacket(object sender, IMessage packet) Parameters sender object The packet sender packet IMessage The packet Events OnPlayerJoined Fired when a player leaves the world. public event PixelPlayerManager<T>.PlayerJoined? OnPlayerJoined Event Type PixelPlayerManager<T>.PlayerJoined OnPlayerLeft Fired when a player leaves the world. public event PixelPlayerManager<T>.PlayerLeft? OnPlayerLeft Event Type PixelPlayerManager<T>.PlayerLeft OnPlayerStatusChanged Fired once the players properties have been updated. public event PixelPlayerManager<T>.PlayerStatusChanged? OnPlayerStatusChanged Event Type PixelPlayerManager<T>.PlayerStatusChanged OnPrePlayerStatusChange Fired before the player properties are changed. public event PixelPlayerManager<T>.PrePlayerStatusChange? OnPrePlayerStatusChange Event Type PixelPlayerManager<T>.PrePlayerStatusChange"
  },
  "api/PixelPilot.Client.Players.html": {
    "href": "api/PixelPilot.Client.Players.html",
    "title": "Namespace PixelPilot.Client.Players | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.Players Classes PixelPlayerManager<T> Class that handles players in a world. Automatically updates the players stats. Interfaces IPixelPlayer Delegates PixelPlayerManager<T>.PlayerJoined PixelPlayerManager<T>.PlayerLeft PixelPlayerManager<T>.PlayerStatusChanged PixelPlayerManager<T>.PrePlayerStatusChange"
  },
  "api/PixelPilot.Client.World.Blocks.BasicBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.BasicBlock.html",
    "title": "Class BasicBlock | PixelPilot",
    "keywords": "Class BasicBlock Namespace PixelPilot.Client.World.Blocks Assembly PixelPilot.Core.dll Basic blocks only have a block ID. No special data can be assigned to them. public class BasicBlock : IPixelBlock, ICloneable Inheritance object BasicBlock Implements IPixelBlock ICloneable Derived MorphableBlock ActivatorBlock ColoredBlock LeveledEffectBlock TimedEffectBlock ToggleEffectBlock NoteBlock PortalBlock ResetterBlock SignBlock WorldPortalBlock Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BasicBlock(PixelBlock) public BasicBlock(PixelBlock block) Parameters block PixelBlock BasicBlock(int) public BasicBlock(int blockId) Parameters blockId int Properties BlockId public int BlockId { get; set; } Property Value int Methods AsPacketOut(List<Point>, int) public virtual WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public virtual WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsPlacedBlock(int, int, int) public IPlacedBlock AsPlacedBlock(int x, int y, int layer) Parameters x int y int layer int Returns IPlacedBlock AsWorldBuffer(int, int, int) public byte[] AsWorldBuffer(int x, int y, int layer) Parameters x int y int layer int Returns byte[] AsWorldBuffer(int, int, int, int) public virtual byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Clone() Creates a new object that is a copy of the current instance. public virtual object Clone() Returns object A new object that is a copy of this instance. Equals(BasicBlock) protected bool Equals(BasicBlock other) Parameters other BasicBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.IPixelBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.IPixelBlock.html",
    "title": "Interface IPixelBlock | PixelPilot",
    "keywords": "Interface IPixelBlock Namespace PixelPilot.Client.World.Blocks Assembly PixelPilot.Core.dll Generic interface for blocks. Every block has atleast these properties. public interface IPixelBlock : ICloneable Inherited Members ICloneable.Clone() Properties Block PixelBlock Block { get; } Property Value PixelBlock BlockId int BlockId { get; } Property Value int Methods AsPacketOut(List<Point>, int) WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsPlacedBlock(int, int, int) IPlacedBlock AsPlacedBlock(int x, int y, int layer) Parameters x int y int layer int Returns IPlacedBlock AsWorldBuffer(int, int, int) byte[] AsWorldBuffer(int x, int y, int layer) Parameters x int y int layer int Returns byte[] AsWorldBuffer(int, int, int, int) byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[]"
  },
  "api/PixelPilot.Client.World.Blocks.MorphableBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.MorphableBlock.html",
    "title": "Class MorphableBlock | PixelPilot",
    "keywords": "Class MorphableBlock Namespace PixelPilot.Client.World.Blocks Assembly PixelPilot.Core.dll Morphable blocks include blocks with multiple states. This includes decorations but also coin doors, gates, etc. public class MorphableBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock MorphableBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MorphableBlock(PixelBlock, int) public MorphableBlock(PixelBlock block, int morph) Parameters block PixelBlock morph int MorphableBlock(int, int) public MorphableBlock(int blockId, int morph) Parameters blockId int morph int Properties Morph public int Morph { get; set; } Property Value int Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(MorphableBlock) protected bool Equals(MorphableBlock other) Parameters other MorphableBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Placed.IPlacedBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Placed.IPlacedBlock.html",
    "title": "Interface IPlacedBlock | PixelPilot",
    "keywords": "Interface IPlacedBlock Namespace PixelPilot.Client.World.Blocks.Placed Assembly PixelPilot.Core.dll A placed block has a location assigned to it. This wrapper is used by API methods where the block in question is placed in some kind of way. public interface IPlacedBlock : ICloneable Inherited Members ICloneable.Clone() Properties Block IPixelBlock Block { get; } Property Value IPixelBlock Layer int Layer { get; } Property Value int X int X { get; } Property Value int Y int Y { get; } Property Value int Methods AsPacketOut() WorldBlockPlacedPacket AsPacketOut() Returns WorldBlockPlacedPacket AsWorldBuffer() byte[] AsWorldBuffer() Returns byte[] AsWorldBuffer(int) byte[] AsWorldBuffer(int customId) Parameters customId int Returns byte[]"
  },
  "api/PixelPilot.Client.World.Blocks.Placed.PlacedBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Placed.PlacedBlock.html",
    "title": "Class PlacedBlock | PixelPilot",
    "keywords": "Class PlacedBlock Namespace PixelPilot.Client.World.Blocks.Placed Assembly PixelPilot.Core.dll An immutable instance of a IPlacedBlock public class PlacedBlock : IPlacedBlock, ICloneable Inheritance object PlacedBlock Implements IPlacedBlock ICloneable Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlacedBlock(int, int, WorldLayer, IPixelBlock) public PlacedBlock(int x, int y, WorldLayer layer, IPixelBlock block) Parameters x int y int layer WorldLayer block IPixelBlock PlacedBlock(int, int, int, IPixelBlock) public PlacedBlock(int x, int y, int layer, IPixelBlock block) Parameters x int y int layer int block IPixelBlock Properties Block public IPixelBlock Block { get; } Property Value IPixelBlock Layer public int Layer { get; } Property Value int PlacedUserId public int? PlacedUserId { get; } Property Value int? X public int X { get; } Property Value int Y public int Y { get; } Property Value int Methods AsPacketOut() public WorldBlockPlacedPacket AsPacketOut() Returns WorldBlockPlacedPacket AsWorldBuffer() public byte[] AsWorldBuffer() Returns byte[] AsWorldBuffer(int) public byte[] AsWorldBuffer(int customId) Parameters customId int Returns byte[] Clone() Creates a new object that is a copy of the current instance. public object Clone() Returns object A new object that is a copy of this instance. Equals(PlacedBlock) protected bool Equals(PlacedBlock other) Parameters other PlacedBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Placed.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Placed.html",
    "title": "Namespace PixelPilot.Client.World.Blocks.Placed | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.World.Blocks.Placed Classes PlacedBlock An immutable instance of a IPlacedBlock Interfaces IPlacedBlock A placed block has a location assigned to it. This wrapper is used by API methods where the block in question is placed in some kind of way."
  },
  "api/PixelPilot.Client.World.Blocks.Types.ActivatorBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.ActivatorBlock.html",
    "title": "Class ActivatorBlock | PixelPilot",
    "keywords": "Class ActivatorBlock Namespace PixelPilot.Client.World.Blocks.Types Assembly PixelPilot.Core.dll public class ActivatorBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock ActivatorBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ActivatorBlock(PixelBlock, int, bool) public ActivatorBlock(PixelBlock block, int switchId, bool status) Parameters block PixelBlock switchId int status bool ActivatorBlock(int, int, bool) public ActivatorBlock(int blockId, int switchId, bool status) Parameters blockId int switchId int status bool Properties Status public bool Status { get; set; } Property Value bool SwitchId public int SwitchId { get; set; } Property Value int Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(ActivatorBlock) protected bool Equals(ActivatorBlock other) Parameters other ActivatorBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.ColoredBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.ColoredBlock.html",
    "title": "Class ColoredBlock | PixelPilot",
    "keywords": "Class ColoredBlock Namespace PixelPilot.Client.World.Blocks.Types Assembly PixelPilot.Core.dll public class ColoredBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock ColoredBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ColoredBlock(PixelBlock, Color) public ColoredBlock(PixelBlock block, Color color) Parameters block PixelBlock color Color Properties PrimaryColor public Color PrimaryColor { get; set; } Property Value Color Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(ColoredBlock) protected bool Equals(ColoredBlock other) Parameters other ColoredBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.Effects.LeveledEffectBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.Effects.LeveledEffectBlock.html",
    "title": "Class LeveledEffectBlock | PixelPilot",
    "keywords": "Class LeveledEffectBlock Namespace PixelPilot.Client.World.Blocks.Types.Effects Assembly PixelPilot.Core.dll public class LeveledEffectBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock LeveledEffectBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LeveledEffectBlock(PixelBlock, int) public LeveledEffectBlock(PixelBlock block, int level) Parameters block PixelBlock level int LeveledEffectBlock(int, int) public LeveledEffectBlock(int blockId, int level) Parameters blockId int level int Properties Level public int Level { get; set; } Property Value int Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(LeveledEffectBlock) protected bool Equals(LeveledEffectBlock other) Parameters other LeveledEffectBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.Effects.TimedEffectBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.Effects.TimedEffectBlock.html",
    "title": "Class TimedEffectBlock | PixelPilot",
    "keywords": "Class TimedEffectBlock Namespace PixelPilot.Client.World.Blocks.Types.Effects Assembly PixelPilot.Core.dll public class TimedEffectBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock TimedEffectBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TimedEffectBlock(PixelBlock, int) public TimedEffectBlock(PixelBlock block, int duration) Parameters block PixelBlock duration int TimedEffectBlock(int, int) public TimedEffectBlock(int blockId, int duration) Parameters blockId int duration int Properties Duration public int Duration { get; set; } Property Value int Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(TimedEffectBlock) protected bool Equals(TimedEffectBlock other) Parameters other TimedEffectBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.Effects.ToggleEffectBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.Effects.ToggleEffectBlock.html",
    "title": "Class ToggleEffectBlock | PixelPilot",
    "keywords": "Class ToggleEffectBlock Namespace PixelPilot.Client.World.Blocks.Types.Effects Assembly PixelPilot.Core.dll public class ToggleEffectBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock ToggleEffectBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ToggleEffectBlock(PixelBlock, bool) public ToggleEffectBlock(PixelBlock block, bool enabled) Parameters block PixelBlock enabled bool ToggleEffectBlock(int, bool) public ToggleEffectBlock(int blockId, bool enabled) Parameters blockId int enabled bool Properties Enabled public bool Enabled { get; set; } Property Value bool Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(ToggleEffectBlock) protected bool Equals(ToggleEffectBlock other) Parameters other ToggleEffectBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.Effects.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.Effects.html",
    "title": "Namespace PixelPilot.Client.World.Blocks.Types.Effects | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.World.Blocks.Types.Effects Classes LeveledEffectBlock TimedEffectBlock ToggleEffectBlock"
  },
  "api/PixelPilot.Client.World.Blocks.Types.Music.NoteBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.Music.NoteBlock.html",
    "title": "Class NoteBlock | PixelPilot",
    "keywords": "Class NoteBlock Namespace PixelPilot.Client.World.Blocks.Types.Music Assembly PixelPilot.Core.dll public class NoteBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock NoteBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NoteBlock(PixelBlock, byte[]) public NoteBlock(PixelBlock block, byte[] notes) Parameters block PixelBlock notes byte[] NoteBlock(int, byte[]) public NoteBlock(int blockId, byte[] notes) Parameters blockId int notes byte[] Fields Notes protected byte[] Notes Field Value byte[] Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(NoteBlock) protected bool Equals(NoteBlock other) Parameters other NoteBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.Music.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.Music.html",
    "title": "Namespace PixelPilot.Client.World.Blocks.Types.Music | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.World.Blocks.Types.Music Classes NoteBlock"
  },
  "api/PixelPilot.Client.World.Blocks.Types.PortalBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.PortalBlock.html",
    "title": "Class PortalBlock | PixelPilot",
    "keywords": "Class PortalBlock Namespace PixelPilot.Client.World.Blocks.Types Assembly PixelPilot.Core.dll public class PortalBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock PortalBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PortalBlock(PixelBlock, int, int, int) public PortalBlock(PixelBlock block, int portalId, int targetId, int direction) Parameters block PixelBlock portalId int targetId int direction int PortalBlock(int, int, int, int) public PortalBlock(int blockId, int portalId, int targetId, int direction) Parameters blockId int portalId int targetId int direction int Properties Direction public int Direction { get; set; } Property Value int PortalId public int PortalId { get; set; } Property Value int TargetId public int TargetId { get; set; } Property Value int Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(PortalBlock) protected bool Equals(PortalBlock other) Parameters other PortalBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.ResetterBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.ResetterBlock.html",
    "title": "Class ResetterBlock | PixelPilot",
    "keywords": "Class ResetterBlock Namespace PixelPilot.Client.World.Blocks.Types Assembly PixelPilot.Core.dll public class ResetterBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock ResetterBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ResetterBlock(PixelBlock, bool) public ResetterBlock(PixelBlock block, bool activated) Parameters block PixelBlock activated bool ResetterBlock(int, bool) public ResetterBlock(int blockId, bool activated) Parameters blockId int activated bool Properties Status public bool Status { get; } Property Value bool Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(ResetterBlock) protected bool Equals(ResetterBlock other) Parameters other ResetterBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.SignBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.SignBlock.html",
    "title": "Class SignBlock | PixelPilot",
    "keywords": "Class SignBlock Namespace PixelPilot.Client.World.Blocks.Types Assembly PixelPilot.Core.dll public class SignBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock SignBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SignBlock(PixelBlock, string) public SignBlock(PixelBlock block, string text) Parameters block PixelBlock text string SignBlock(int, string) public SignBlock(int blockId, string text) Parameters blockId int text string Properties Text public string Text { get; set; } Property Value string Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[] Equals(SignBlock) protected bool Equals(SignBlock other) Parameters other SignBlock Returns bool Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/PixelPilot.Client.World.Blocks.Types.WorldPortalBlock.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.WorldPortalBlock.html",
    "title": "Class WorldPortalBlock | PixelPilot",
    "keywords": "Class WorldPortalBlock Namespace PixelPilot.Client.World.Blocks.Types Assembly PixelPilot.Core.dll public class WorldPortalBlock : BasicBlock, IPixelBlock, ICloneable Inheritance object BasicBlock WorldPortalBlock Implements IPixelBlock ICloneable Inherited Members BasicBlock.BlockId BasicBlock.AsPlacedBlock(int, int, int) BasicBlock.AsWorldBuffer(int, int, int) BasicBlock.Equals(BasicBlock) BasicBlock.Equals(object) BasicBlock.GetHashCode() BasicBlock.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors WorldPortalBlock(string, int) public WorldPortalBlock(string worldId, int spawnId) Parameters worldId string spawnId int Properties SpawnId public int SpawnId { get; set; } Property Value int WorldId public string WorldId { get; set; } Property Value string Methods AsPacketOut(List<Point>, int) public override WorldBlockPlacedPacket AsPacketOut(List<Point> positions, int layer) Parameters positions List<Point> layer int Returns WorldBlockPlacedPacket AsPacketOut(int, int, int) public override WorldBlockPlacedPacket AsPacketOut(int x, int y, int layer) Parameters x int y int layer int Returns WorldBlockPlacedPacket AsWorldBuffer(int, int, int, int) public override byte[] AsWorldBuffer(int x, int y, int layer, int customId) Parameters x int y int layer int customId int Returns byte[]"
  },
  "api/PixelPilot.Client.World.Blocks.Types.html": {
    "href": "api/PixelPilot.Client.World.Blocks.Types.html",
    "title": "Namespace PixelPilot.Client.World.Blocks.Types | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.World.Blocks.Types Classes ActivatorBlock ColoredBlock PortalBlock ResetterBlock SignBlock WorldPortalBlock"
  },
  "api/PixelPilot.Client.World.Blocks.html": {
    "href": "api/PixelPilot.Client.World.Blocks.html",
    "title": "Namespace PixelPilot.Client.World.Blocks | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.World.Blocks Classes BasicBlock Basic blocks only have a block ID. No special data can be assigned to them. MorphableBlock Morphable blocks include blocks with multiple states. This includes decorations but also coin doors, gates, etc. Interfaces IPixelBlock Generic interface for blocks. Every block has atleast these properties."
  },
  "api/PixelPilot.Client.World.Constants.BlockType.html": {
    "href": "api/PixelPilot.Client.World.Constants.BlockType.html",
    "title": "Enum BlockType | PixelPilot",
    "keywords": "Enum BlockType Namespace PixelPilot.Client.World.Constants Assembly PixelPilot.Core.dll General category for block types. public enum BlockType Extension Methods PixelBlockExtensions.GetPacketFieldTypes(BlockType) Fields ColorBlock = 11 EffectLeveled = 10 EffectTimed = 8 EffectTogglable = 9 Morphable = 1 Normal = 0 NoteBlock = 7 Portal = 2 Sign = 6 SwitchActivator = 3 SwitchResetter = 4 WorldPortal = 5"
  },
  "api/PixelPilot.Client.World.Constants.PixelBlock.html": {
    "href": "api/PixelPilot.Client.World.Constants.PixelBlock.html",
    "title": "Enum PixelBlock | PixelPilot",
    "keywords": "Enum PixelBlock Namespace PixelPilot.Client.World.Constants Assembly PixelPilot.Core.dll All blocks available in the game as of 29-04-2024. public enum PixelBlock Extension Methods PixelBlockExtensions.GetBlockType(PixelBlock) Fields BasicBlack = 257 BasicBlackBg = 267 BasicBlue = 263 BasicBlueBg = 273 BasicCyan = 262 BasicCyanBg = 272 BasicGray = 256 BasicGrayBg = 266 BasicGreen = 261 BasicGreenBg = 271 BasicMagenta = 264 BasicMagentaBg = 274 BasicOrange = 259 BasicOrangeBg = 269 BasicRed = 258 BasicRedBg = 268 BasicWhite = 255 BasicWhiteBg = 265 BasicYellow = 260 BasicYellowBg = 270 BeachAnchor = 443 BeachDockRopeLeft = 444 BeachDockRopeRight = 445 BeachDryBush = 437 BeachLifePreserverRingRed = 442 BeachParasol = 431 BeachRock = 436 BeachSand = 430 BeachSandDriftBottomLeft = 434 BeachSandDriftBottomRight = 435 BeachSandDriftTopLeft = 432 BeachSandDriftTopRight = 433 BeachTreePalm = 446 BeveledBlack = 277 BeveledBlackBg = 287 BeveledBlue = 283 BeveledBlueBg = 293 BeveledCyan = 282 BeveledCyanBg = 292 BeveledGray = 276 BeveledGrayBg = 286 BeveledGreen = 281 BeveledGreenBg = 291 BeveledMagenta = 284 BeveledMagentaBg = 294 BeveledOrange = 279 BeveledOrangeBg = 289 BeveledRed = 278 BeveledRedBg = 288 BeveledWhite = 275 BeveledWhiteBg = 285 BeveledYellow = 280 BeveledYellowBg = 290 BoostDown = 22 BoostLeft = 19 BoostRight = 21 BoostUp = 20 BrickBlack = 297 BrickBlackBg = 307 BrickBlue = 303 BrickBlueBg = 313 BrickBrown = 299 BrickBrownBg = 309 BrickGray = 296 BrickGrayBg = 306 BrickGreen = 301 BrickGreenBg = 311 BrickOlive = 300 BrickOliveBg = 310 BrickPurple = 304 BrickPurpleBg = 314 BrickRed = 298 BrickRedBg = 308 BrickTeal = 302 BrickTealBg = 312 BrickWhite = 295 BrickWhiteBg = 305 CandyBlue = 415 CandyBlueBg = 429 CandyCane = 420 CandyChocolate = 422 CandyCreamLarge = 424 CandyCreamSmall = 423 CandyGumdropGreen = 426 CandyGumdropPink = 427 CandyGumdropRed = 425 CandyLicorice = 421 CandyOnewayCyanTop = 418 CandyOnewayGreenTop = 419 CandyOnewayPinkTop = 416 CandyOnewayRedTop = 417 CandyPink = 414 CandyPinkBg = 428 CanvasBlue = 488 CanvasBlueBg = 497 CanvasCyan = 487 CanvasCyanBg = 496 CanvasGrayBg = 490 CanvasGreen = 486 CanvasGreenBg = 495 CanvasOrange = 484 CanvasOrangeBg = 492 CanvasPurple = 489 CanvasPurpleBg = 498 CanvasRed = 483 CanvasRedBg = 491 CanvasTanBg = 493 CanvasYellow = 485 CanvasYellowBg = 494 CarnivalBlueBg = 1426 CarnivalCheckerBg = 1422 CarnivalGreenBg = 1424 CarnivalPinkBg = 1423 CarnivalStripesPurpleVioletBg = 1421 CarnivalStripesRedWhiteBg = 1419 CarnivalStripesRedYellowBg = 1420 CarnivalYellowBg = 1425 CaveBlackBg = 545 CaveBlueBg = 551 CaveBrownBg = 547 CaveCyanBg = 550 CaveGrayDarkBg = 544 CaveGrayLightBg = 543 CaveGreenBg = 549 CavePinkBg = 553 CavePurpleBg = 552 CaveRedBg = 546 CaveYellowBg = 548 CheckerBlack = 337 CheckerBlackBg = 347 CheckerBlue = 343 CheckerBlueBg = 353 CheckerCyan = 342 CheckerCyanBg = 352 CheckerGray = 336 CheckerGrayBg = 346 CheckerGreen = 341 CheckerGreenBg = 351 CheckerMagenta = 344 CheckerMagentaBg = 354 CheckerOrange = 339 CheckerOrangeBg = 349 CheckerRed = 338 CheckerRedBg = 348 CheckerWhite = 335 CheckerWhiteBg = 345 CheckerYellow = 340 CheckerYellowBg = 350 ChristmasBellGroupRed = 916 ChristmasBellYellow = 915 ChristmasCandleRed = 917 ChristmasCandyCane = 891 ChristmasFencePlain = 875 ChristmasFenceSnow = 876 ChristmasGiftFullBlue = 901 ChristmasGiftFullGreen = 897 ChristmasGiftFullRed = 895 ChristmasGiftFullWhite = 899 ChristmasGiftFullYellow = 903 ChristmasGiftHalfBlue = 902 ChristmasGiftHalfGreen = 898 ChristmasGiftHalfRed = 896 ChristmasGiftHalfWhite = 900 ChristmasGiftHalfYellow = 904 ChristmasMistletoe = 892 ChristmasOrnamentBlue = 879 ChristmasOrnamentGreen = 878 ChristmasOrnamentRed = 877 ChristmasRibbonBlueCross = 887 ChristmasRibbonBlueHorizontal = 886 ChristmasRibbonBlueVertical = 885 ChristmasRibbonPurpleCross = 890 ChristmasRibbonPurpleHorizontal = 889 ChristmasRibbonPurpleVertical = 888 ChristmasRibbonRedBow = 894 ChristmasStar = 881 ChristmasStocking = 893 ChristmasStringLightBottomBlue = 913 ChristmasStringLightBottomGreen = 912 ChristmasStringLightBottomPurple = 914 ChristmasStringLightBottomRed = 910 ChristmasStringLightBottomYellow = 911 ChristmasStringLightTopBlue = 908 ChristmasStringLightTopGreen = 907 ChristmasStringLightTopPurple = 909 ChristmasStringLightTopRed = 905 ChristmasStringLightTopYellow = 906 ChristmasTreeLights = 874 ChristmasTreePlain = 873 ChristmasWrappingPaperBlueBg = 884 ChristmasWrappingPaperGreenBg = 883 ChristmasWrappingPaperYellowBg = 882 ChristmasWreath = 880 ClayTileBrickBg = 686 ClayTileDiamondBg = 687 ClayTileRoughBg = 689 ClayTileWhiteBg = 685 ClayTileXBg = 688 ClimbableChainDarkHorizontal = 28 ClimbableChainDarkVertical = 27 ClimbableChainLightHorizontal = 26 ClimbableChainLightVertical = 25 ClimbableLadderMetal = 29 ClimbableLadderStalkLarge = 34 ClimbableLadderStalkSmall = 33 ClimbableLadderWood = 30 ClimbableLatticeVine = 35 ClimbableRopeHorizontal = 32 ClimbableRopeVertical = 31 ClimbableVineHorizontal = 24 ClimbableVineVertical = 23 CloudGrayBottom = 634 CloudGrayBottomLeft = 639 CloudGrayBottomRight = 640 CloudGrayCenter = 632 CloudGrayLeft = 635 CloudGrayRight = 636 CloudGrayTop = 633 CloudGrayTopLeft = 638 CloudGrayTopRight = 637 CloudWhiteBottom = 625 CloudWhiteBottomLeft = 630 CloudWhiteBottomRight = 631 CloudWhiteCenter = 623 CloudWhiteLeft = 626 CloudWhiteRight = 627 CloudWhiteTop = 624 CloudWhiteTopLeft = 629 CloudWhiteTopRight = 628 CoinBlue = 46 CoinBlueDoor = 49 CoinBlueGate = 50 CoinGold = 45 CoinGoldDoor = 47 CoinGoldGate = 48 ConstructionBeamRedHorizontalLeft = 1016 ConstructionBeamRedHorizontalLeftBg = 1030 ConstructionBeamRedHorizontalMiddle = 1017 ConstructionBeamRedHorizontalMiddleBg = 1031 ConstructionBeamRedHorizontalRight = 1018 ConstructionBeamRedHorizontalRightBg = 1032 ConstructionBeamRedVerticalBottom = 1021 ConstructionBeamRedVerticalBottomBg = 1035 ConstructionBeamRedVerticalMiddle = 1020 ConstructionBeamRedVerticalMiddleBg = 1034 ConstructionBeamRedVerticalTop = 1019 ConstructionBeamRedVerticalTopBg = 1033 ConstructionCautionOrange = 1022 ConstructionCement = 1015 ConstructionCementBg = 1029 ConstructionConeOrange = 1023 ConstructionGravel = 1014 ConstructionGravelBg = 1028 ConstructionHydrantFire = 1026 ConstructionPlywood = 1013 ConstructionPlywoodBg = 1027 ConstructionSignStop = 1025 ConstructionSignWarning = 1024 CounterBlackConsumable = 197 CounterBlackConsumableSet = 198 CounterBlackDoor = 202 CounterBlackGate = 203 CounterBlackReusable = 199 CounterBlackReusableConsumableReset = 201 CounterBlackReusableSet = 200 CounterBlueConsumable = 239 CounterBlueConsumableSet = 240 CounterBlueDoor = 244 CounterBlueGate = 245 CounterBlueReusable = 241 CounterBlueReusableConsumableReset = 243 CounterBlueReusableSet = 242 CounterCyanConsumable = 232 CounterCyanConsumableSet = 233 CounterCyanDoor = 237 CounterCyanGate = 238 CounterCyanReusable = 234 CounterCyanReusableConsumableReset = 236 CounterCyanReusableSet = 235 CounterGrayConsumable = 190 CounterGrayConsumableSet = 191 CounterGrayDoor = 195 CounterGrayGate = 196 CounterGrayReusable = 192 CounterGrayReusableConsumableReset = 194 CounterGrayReusableSet = 193 CounterGreenConsumable = 225 CounterGreenConsumableSet = 226 CounterGreenDoor = 230 CounterGreenGate = 231 CounterGreenReusable = 227 CounterGreenReusableConsumableReset = 229 CounterGreenReusableSet = 228 CounterMagentaConsumable = 246 CounterMagentaConsumableSet = 247 CounterMagentaDoor = 251 CounterMagentaGate = 252 CounterMagentaReusable = 248 CounterMagentaReusableConsumableReset = 250 CounterMagentaReusableSet = 249 CounterOrangeConsumable = 211 CounterOrangeConsumableSet = 212 CounterOrangeDoor = 216 CounterOrangeGate = 217 CounterOrangeReusable = 213 CounterOrangeReusableConsumableReset = 215 CounterOrangeReusableSet = 214 CounterRedConsumable = 204 CounterRedConsumableSet = 205 CounterRedDoor = 209 CounterRedGate = 210 CounterRedReusable = 206 CounterRedReusableConsumableReset = 208 CounterRedReusableSet = 207 CounterWhiteConsumable = 183 CounterWhiteConsumableSet = 184 CounterWhiteDoor = 188 CounterWhiteGate = 189 CounterWhiteReusable = 185 CounterWhiteReusableConsumableReset = 187 CounterWhiteReusableSet = 186 CounterYellowConsumable = 218 CounterYellowConsumableSet = 219 CounterYellowDoor = 223 CounterYellowGate = 224 CounterYellowReusable = 220 CounterYellowReusableConsumableReset = 222 CounterYellowReusableSet = 221 CrownGold = 39 CrownGoldDoor = 41 CrownGoldGate = 42 CrownSilver = 40 CrownSilverDoor = 43 CrownSilverGate = 44 CustomCheckerBg = 254 CustomSolidBg = 253 DarkBlackBg = 327 DarkBlueBg = 333 DarkCyanBg = 332 DarkGrayBg = 326 DarkGreenBg = 331 DarkMagentaBg = 334 DarkOrangeBg = 329 DarkRedBg = 328 DarkWhiteBg = 325 DarkYellowBg = 330 DesertBush = 1314 DesertCactus = 1313 DesertRockOrange = 1312 DesertTree = 1315 DojoChineseCharacterAnd = 870 DojoChineseCharacterBook = 871 DojoChineseSymbolYinYang = 872 DojoOnewayGrayTop = 847 DojoOnewayWhiteTop = 846 DojoRooftopBlueDarkLeft = 862 DojoRooftopBlueDarkRight = 863 DojoRooftopBlueLeft = 856 DojoRooftopBlueRight = 857 DojoRooftopGreenDarkLeft = 866 DojoRooftopGreenDarkRight = 867 DojoRooftopGreenLeft = 860 DojoRooftopGreenRight = 861 DojoRooftopRedDarkLeft = 864 DojoRooftopRedDarkRight = 865 DojoRooftopRedLeft = 858 DojoRooftopRedRight = 859 DojoShinglesBlueBg = 852 DojoShinglesBlueDarkBg = 855 DojoShinglesGreenBg = 851 DojoShinglesGreenDarkBg = 854 DojoShinglesRedBg = 850 DojoShinglesRedDarkBg = 853 DojoWallpaperGrayBg = 849 DojoWallpaperWhiteBg = 848 DojoWindowBright = 868 DojoWindowDark = 869 DomesticBottomRight = 796 DomesticFrameBorderBottom = 844 DomesticFrameBorderBottomLeft = 843 DomesticFrameBorderBottomRight = 845 DomesticFrameBorderFull = 840 DomesticFrameBorderLeft = 839 DomesticFrameBorderLeftRight = 842 DomesticFrameBorderRight = 841 DomesticFrameBorderTop = 836 DomesticFrameBorderTopBottom = 838 DomesticFrameBorderTopLeft = 835 DomesticFrameBorderTopRight = 837 DomesticHalfBrownBottom = 830 DomesticHalfBrownLeft = 827 DomesticHalfBrownRight = 829 DomesticHalfBrownTop = 828 DomesticHalfWhiteBottom = 834 DomesticHalfWhiteLeft = 831 DomesticHalfWhiteRight = 833 DomesticHalfWhiteTop = 832 DomesticHalfYellowBottom = 826 DomesticHalfYellowLeft = 823 DomesticHalfYellowRight = 825 DomesticHalfYellowTop = 824 DomesticLamp = 791 DomesticLightBulbBottomOff = 795 DomesticLightBulbBottomOn = 794 DomesticLightBulbTopOff = 793 DomesticLightBulbTopOn = 792 DomesticPaintingBlue = 807 DomesticPaintingBlueDark = 809 DomesticPaintingGreen = 808 DomesticPaintingPurple = 810 DomesticPipeBottomLeft = 798 DomesticPipeCross = 801 DomesticPipeStraightHorizontal = 799 DomesticPipeStraightVertical = 803 DomesticPipeTBottom = 797 DomesticPipeTLeft = 802 DomesticPipeTRight = 800 DomesticPipeTTop = 805 DomesticPipeTopLeft = 806 DomesticPipeTopRight = 804 DomesticTelevisionBlack = 815 DomesticTelevisionBlue = 817 DomesticTelevisionGray = 816 DomesticTelevisionYellow = 818 DomesticTile = 783 DomesticVaseBlue = 811 DomesticVaseOrange = 813 DomesticVasePurple = 812 DomesticVaseYellow = 814 DomesticWallpaperBlueBg = 789 DomesticWallpaperBrownBg = 787 DomesticWallpaperGreenBg = 790 DomesticWallpaperRedBg = 788 DomesticWallpaperYellowBg = 786 DomesticWindowBlack = 819 DomesticWindowBlue = 820 DomesticWindowOrange = 821 DomesticWindowYellow = 822 DomesticWood = 784 DomesticWoodPanel = 785 DungeonChainHook = 1259 DungeonChainLock = 1260 DungeonChainRing = 1258 DungeonCobblestoneBlue = 1227 DungeonCobblestoneBlueBg = 1231 DungeonCobblestoneGreen = 1226 DungeonCobblestoneGreenBg = 1230 DungeonCobblestoneGrey = 1225 DungeonCobblestoneGreyBg = 1229 DungeonCobblestonePurple = 1228 DungeonCobblestonePurpleBg = 1232 DungeonOnewayPillarTopBlue = 1243 DungeonOnewayPillarTopGray = 1241 DungeonOnewayPillarTopGreen = 1242 DungeonOnewayPillarTopPurple = 1244 DungeonPillarArcRightBlue = 1250 DungeonPillarArcRightGray = 1246 DungeonPillarArcRightGreen = 1248 DungeonPillarArcRightPurple = 1252 DungeonPillarBottomBlue = 1239 DungeonPillarBottomGray = 1237 DungeonPillarBottomGreen = 1238 DungeonPillarBottomPurple = 1240 DungeonPillarMiddleBlue = 1235 DungeonPillarMiddleGray = 1233 DungeonPillarMiddleGreen = 1234 DungeonPillarMiddlePurple = 1236 DungeonSteelArcLeftBlue = 1249 DungeonSteelArcLeftGray = 1245 DungeonSteelArcLeftGreen = 1247 DungeonSteelArcLeftPurple = 1251 DungeonTorchBlue = 1255 DungeonTorchGreen = 1254 DungeonTorchPurple = 1256 DungeonTorchYellow = 1253 DungeonWindow = 1257 EasterEggBlue = 409 EasterEggGreen = 413 EasterEggPink = 410 EasterEggRed = 412 EasterEggYellow = 411 EffectsCurse = 55 EffectsFly = 52 EffectsGravityDown = 62 EffectsGravityLeft = 59 EffectsGravityOff = 63 EffectsGravityRight = 61 EffectsGravityUp = 60 EffectsGravityforce = 57 EffectsInvulnerability = 54 EffectsJumpHeight = 51 EffectsMultiJump = 58 EffectsOff = 64 EffectsSpeed = 53 EffectsZombie = 56 EffectsZombieDoor = 65 EffectsZombieGate = 66 Empty = 0 EnvironmentBamboo = 466 EnvironmentBambooBg = 471 EnvironmentGrass = 465 EnvironmentGrassBg = 470 EnvironmentLava = 468 EnvironmentLavaBg = 473 EnvironmentLog = 464 EnvironmentLogBg = 469 EnvironmentObsidian = 467 EnvironmentObsidianBg = 472 FactoryCrateMetal = 396 FactoryCrateWood = 397 FactoryScales = 400 FactoryStone = 398 FactoryWood = 399 FairytaleCloudBlue = 1141 FairytaleDewDrop = 1146 FairytaleFlowerBlue = 1167 FairytaleFlowerOrange = 1168 FairytaleFlowerPink = 1169 FairytaleHalfBlueBottom = 1162 FairytaleHalfBlueLeft = 1159 FairytaleHalfBlueRight = 1161 FairytaleHalfBlueTop = 1160 FairytaleHalfGreenBottom = 1158 FairytaleHalfGreenLeft = 1155 FairytaleHalfGreenRight = 1157 FairytaleHalfGreenTop = 1156 FairytaleHalfOrangeBottom = 1154 FairytaleHalfOrangeLeft = 1151 FairytaleHalfOrangeRight = 1153 FairytaleHalfOrangeTop = 1152 FairytaleHalfPinkBottom = 1166 FairytaleHalfPinkLeft = 1163 FairytaleHalfPinkRight = 1165 FairytaleHalfPinkTop = 1164 FairytaleMistBlueBg = 1149 FairytaleMistGreenBg = 1148 FairytaleMistOrangeBg = 1147 FairytaleMistPinkBg = 1150 FairytaleMossGreen = 1140 FairytaleMushroomBlockRed = 1142 FairytaleMushroomDecorationOrange = 1144 FairytaleMushroomDecorationRed = 1145 FairytalePebbles = 1138 FairytaleTreeOrange = 1139 FairytaleVineGreen = 1143 FallAcorn = 1349 FallGrassLeft = 1346 FallGrassMiddle = 1347 FallGrassRight = 1348 FallLeavesDriftBottomLeft = 1344 FallLeavesDriftBottomRight = 1345 FallLeavesDriftTopLeft = 1342 FallLeavesDriftTopRight = 1343 FallLeavesOrangeBg = 1352 FallLeavesRedBg = 1353 FallLeavesYellowBg = 1351 FallPumpkin = 1350 FarmCorn = 538 FarmFenceLeft = 539 FarmFenceMiddle = 540 FarmFenceRight = 541 FarmHay = 542 FarmWheat = 537 FogBottom = 642 FogBottomLeft = 648 FogBottomRight = 649 FogCenter = 641 FogLeft = 643 FogRight = 646 FogTop = 647 FogTopLeft = 644 FogTopRight = 645 GardenButterfly = 778 GardenFence = 772 GardenFrame = 782 GardenGrass = 769 GardenGrassBg = 780 GardenGrassplant = 771 GardenLattice = 773 GardenLeaves = 770 GardenLeavesBg = 781 GardenOnewayLeafBranch = 774 GardenOnewayLeafLeft = 775 GardenOnewayLeafRight = 776 GardenRock = 768 GardenRockBg = 779 GardenSnail = 777 GemstoneBlack = 518 GemstoneBlue = 514 GemstoneCyan = 516 GemstoneGreen = 511 GemstonePurple = 512 GemstoneRed = 515 GemstoneWhite = 517 GemstoneYellow = 513 GenericBlack = 375 GenericBlackTransparent = 376 GenericStripedHazardBlack = 370 GenericStripedHazardYellow = 369 GenericYellow = 374 GenericYellowFace = 371 GenericYellowFaceFrown = 373 GenericYellowFaceSmile = 372 GildedBronzeBasic = 991 GildedBronzeBasicBg = 1006 GildedBronzeBrick = 994 GildedBronzeBrickBg = 1009 GildedBronzeChiseled = 997 GildedBronzeChiseledBg = 1012 GildedBronzeMantleOnewayTop = 1003 GildedBronzeTile = 1000 GildedGoldBasic = 989 GildedGoldBasicBg = 1004 GildedGoldBrick = 992 GildedGoldBrickBg = 1007 GildedGoldChiseled = 995 GildedGoldChiseledBg = 1010 GildedGoldMantleOnewayTop = 1001 GildedGoldTile = 998 GildedSilverBasic = 990 GildedSilverBasicBg = 1005 GildedSilverBrick = 993 GildedSilverBrickBg = 1008 GildedSilverChiseled = 996 GildedSilverChiseledBg = 1011 GildedSilverMantleOnewayTop = 1002 GildedSilverTile = 999 GlassBlue = 385 GlassCyan = 384 GlassGreen = 383 GlassMagenta = 387 GlassOrange = 381 GlassPurple = 386 GlassRed = 380 GlassYellow = 382 GrassBrickLeft = 364 GrassBrickMiddle = 363 GrassBrickRight = 365 GravityDot = 5 GravityDown = 4 GravityLeft = 1 GravityRight = 3 GravitySlowDot = 6 GravityUp = 2 HalfblocksBlackBottom = 1067 HalfblocksBlackLeft = 1064 HalfblocksBlackRight = 1066 HalfblocksBlackTop = 1065 HalfblocksBlueBottom = 1091 HalfblocksBlueLeft = 1088 HalfblocksBlueRight = 1090 HalfblocksBlueTop = 1089 HalfblocksCyanBottom = 1087 HalfblocksCyanLeft = 1084 HalfblocksCyanRight = 1086 HalfblocksCyanTop = 1085 HalfblocksGrayBottom = 1063 HalfblocksGrayLeft = 1060 HalfblocksGrayRight = 1062 HalfblocksGrayTop = 1061 HalfblocksGreenBottom = 1083 HalfblocksGreenLeft = 1080 HalfblocksGreenRight = 1082 HalfblocksGreenTop = 1081 HalfblocksMagentaBottom = 1095 HalfblocksMagentaLeft = 1092 HalfblocksMagentaRight = 1094 HalfblocksMagentaTop = 1093 HalfblocksOrangeBottom = 1075 HalfblocksOrangeLeft = 1072 HalfblocksOrangeRight = 1074 HalfblocksOrangeTop = 1073 HalfblocksRedBottom = 1071 HalfblocksRedLeft = 1068 HalfblocksRedRight = 1070 HalfblocksRedTop = 1069 HalfblocksWhiteBottom = 1059 HalfblocksWhiteLeft = 1056 HalfblocksWhiteRight = 1058 HalfblocksWhiteTop = 1057 HalfblocksYellowBottom = 1079 HalfblocksYellowLeft = 1076 HalfblocksYellowRight = 1078 HalfblocksYellowTop = 1077 HalloweenBlood = 554 HalloweenBrickGray = 555 HalloweenBrickGrayBg = 557 HalloweenBrickGrayLeftBg = 559 HalloweenBrickGrayRightBg = 558 HalloweenCobwebBottomLeft = 565 HalloweenCobwebBottomRight = 566 HalloweenCobwebTopLeft = 563 HalloweenCobwebTopRight = 564 HalloweenEyesGreen = 577 HalloweenEyesOrange = 575 HalloweenEyesPurple = 576 HalloweenEyesYellow = 574 HalloweenGrassPurple = 573 HalloweenGrayBg = 556 HalloweenLeavesPurpleBg = 561 HalloweenPumpkinOff = 572 HalloweenPumpkinOn = 571 HalloweenTombstone = 562 HalloweenTreeBg = 560 HalloweenTreeBranchBottomLeft = 569 HalloweenTreeBranchBottomRight = 570 HalloweenTreeBranchTopLeft = 567 HalloweenTreeBranchTopRight = 568 HauntedBushDead = 1301 HauntedFenceIron = 1302 HauntedLanternOff = 1307 HauntedLanternOn = 1308 HauntedMossyBrickGreen = 1297 HauntedMossyBrickGreenBg = 1309 HauntedMossyShinglesGray = 1299 HauntedMossyShinglesGrayBg = 1311 HauntedOnewayStoneGrayTop = 1300 HauntedSidingGray = 1298 HauntedSlidingGrayBg = 1310 HauntedWindowCircleOff = 1305 HauntedWindowCircleOn = 1306 HauntedWindowCurvedOff = 1303 HauntedWindowCurvedOn = 1304 HazardDeathDoor = 157 HazardDeathGate = 158 HazardFire = 156 HazardSpikesBlueCenter = 150 HazardSpikesBlueDown = 148 HazardSpikesBlueLeft = 149 HazardSpikesBlueRight = 147 HazardSpikesBlueUp = 146 HazardSpikesBrownCenter = 130 HazardSpikesBrownDown = 128 HazardSpikesBrownLeft = 129 HazardSpikesBrownRight = 127 HazardSpikesBrownUp = 126 HazardSpikesCyanCenter = 145 HazardSpikesCyanDown = 143 HazardSpikesCyanLeft = 144 HazardSpikesCyanRight = 142 HazardSpikesCyanUp = 141 HazardSpikesGrayCenter = 120 HazardSpikesGrayDown = 118 HazardSpikesGrayLeft = 119 HazardSpikesGrayRight = 117 HazardSpikesGrayUp = 116 HazardSpikesGreenCenter = 140 HazardSpikesGreenDown = 138 HazardSpikesGreenLeft = 139 HazardSpikesGreenRight = 137 HazardSpikesGreenUp = 136 HazardSpikesPurpleCenter = 155 HazardSpikesPurpleDown = 153 HazardSpikesPurpleLeft = 154 HazardSpikesPurpleRight = 152 HazardSpikesPurpleUp = 151 HazardSpikesRedCenter = 125 HazardSpikesRedDown = 123 HazardSpikesRedLeft = 124 HazardSpikesRedRight = 122 HazardSpikesRedUp = 121 HazardSpikesWhiteCenter = 115 HazardSpikesWhiteDown = 113 HazardSpikesWhiteLeft = 114 HazardSpikesWhiteRight = 112 HazardSpikesWhiteUp = 111 HazardSpikesYellowCenter = 135 HazardSpikesYellowDown = 133 HazardSpikesYellowLeft = 134 HazardSpikesYellowRight = 132 HazardSpikesYellowUp = 131 IndustrialCautionSignDeath = 673 IndustrialCautionSignElectricity = 674 IndustrialCautionSignEntry = 675 IndustrialCautionSignFire = 672 IndustrialCautionTapeHorizontal = 676 IndustrialCautionTapeVertical = 677 IndustrialConveyorLeft = 668 IndustrialConveyorMiddle = 670 IndustrialConveyorMiddlePeg = 669 IndustrialConveyorRight = 671 IndustrialElectricity = 684 IndustrialIron = 650 IndustrialLampOverhead = 680 IndustrialOnewayGrayTop = 657 IndustrialPipeDecorationHorizontal = 678 IndustrialPipeDecorationVertical = 679 IndustrialPipeThickHorizontal = 664 IndustrialPipeThickVertical = 665 IndustrialPipeThinHorizontal = 666 IndustrialPipeThinVertical = 667 IndustrialPistonBottom = 663 IndustrialPistonLeft = 660 IndustrialPistonRight = 662 IndustrialPistonTop = 661 IndustrialPlateGrayBlueBg = 654 IndustrialPlateGrayGrayBg = 653 IndustrialPlateGrayGreenBg = 655 IndustrialPlateGrayPlainBg = 652 IndustrialPlateGrayYellowBg = 656 IndustrialScaffoldingHorizontal = 658 IndustrialScaffoldingVertical = 659 IndustrialTeslaCoil = 681 IndustrialWireHorizontal = 682 IndustrialWireVertical = 683 IndustrialWires = 651 InvisibleGravityDot = 11 InvisibleGravityDown = 10 InvisibleGravityLeft = 7 InvisibleGravityRight = 9 InvisibleGravitySlowDot = 12 InvisibleGravityUp = 8 JungleBlue = 451 JungleBlueBg = 459 JungleFaceBlock = 447 JungleGray = 449 JungleGrayBg = 457 JungleLeavesDarkBg = 463 JungleLeavesLightBg = 461 JungleLeavesMediumBg = 462 JungleOlive = 452 JungleOliveBg = 460 JungleOnewayTop = 448 JunglePlant = 454 JunglePot = 453 JunglePotBroken = 455 JungleRed = 450 JungleRedBg = 458 JungleStatue = 456 KeyBlue = 85 KeyBlueDoor = 91 KeyBlueGate = 97 KeyCyan = 86 KeyCyanDoor = 92 KeyCyanGate = 98 KeyGreen = 84 KeyGreenDoor = 90 KeyGreenGate = 96 KeyMagenta = 87 KeyMagentaDoor = 93 KeyMagentaGate = 99 KeyRed = 83 KeyRedDoor = 89 KeyRedGate = 95 KeyYellow = 88 KeyYellowDoor = 94 KeyYellowGate = 100 LavaDarkOrange = 985 LavaDarkRedBg = 988 LavaOrange = 984 LavaOrangeBg = 987 LavaYellow = 983 LavaYellowBg = 986 LeprechaunGoldBag = 1376 LeprechaunGoldPot = 1375 LeprechaunHorseShoe = 1377 LeprechaunRainbowLeft = 1378 LeprechaunRainbowRight = 1379 LeprechaunShamrock = 1374 LiquidLava = 79 LiquidLavaSurface = 80 LiquidMud = 81 LiquidMudSurface = 82 LiquidWaste = 77 LiquidWasteSurface = 78 LiquidWater = 75 LiquidWaterSurface = 76 MarbleColumnBottom = 580 MarbleColumnMiddle = 579 MarbleColumnTop = 578 MarbleGray = 581 MarbleGrayBg = 585 MarbleGreen = 582 MarbleGreenBg = 586 MarbleOneway = 584 MarbleRed = 583 MarbleRedBg = 587 MeadowBushLeft = 404 MeadowBushMiddle = 405 MeadowBushRight = 406 MeadowGrassLeft = 401 MeadowGrassMiddle = 402 MeadowGrassRight = 403 MeadowSmallBush = 408 MeadowYellowFlower = 407 MedievalAnvil = 702 MedievalAxeBottomLeft = 713 MedievalAxeBottomRight = 714 MedievalAxeTopLeft = 711 MedievalAxeTopRight = 712 MedievalBannerBlue = 727 MedievalBannerGreen = 728 MedievalBannerRed = 730 MedievalBannerYellow = 729 MedievalBarrel = 703 MedievalBlinds = 704 MedievalBrick = 691 MedievalBrickBg = 693 MedievalBrickDecorationTopMiddle = 700 MedievalBrickWindow = 692 MedievalOnewayGrayTop = 690 MedievalRoofBrownBg = 698 MedievalRoofGrayBg = 699 MedievalRoofGreenBg = 697 MedievalRoofRedBg = 696 MedievalScaffoldingAngledLeft = 710 MedievalScaffoldingAngledMiddle = 707 MedievalScaffoldingAngledRight = 709 MedievalScaffoldingStraightHorizontal = 706 MedievalScaffoldingStraightT = 705 MedievalScaffoldingStraightVertical = 708 MedievalShield = 731 MedievalShieldCircleBlue = 719 MedievalShieldCircleGreen = 720 MedievalShieldCircleRed = 722 MedievalShieldCircleYellow = 721 MedievalShieldCurvedBlue = 723 MedievalShieldCurvedGreen = 724 MedievalShieldCurvedRed = 726 MedievalShieldCurvedYellow = 725 MedievalStone = 701 MedievalStrawBg = 695 MedievalSwordBottomLeft = 717 MedievalSwordBottomRight = 718 MedievalSwordTopLeft = 715 MedievalSwordTopRight = 716 MedievalWoodBg = 694 MetalCopper = 367 MetalGold = 368 MetalSilver = 366 MineCrystalBlue = 1294 MineCrystalCyan = 1293 MineCrystalGreen = 1291 MineCrystalPurple = 1295 MineCrystalRed = 1290 MineCrystalYellow = 1292 MineStalagmite = 1288 MineStalagtite = 1289 MineStoneBrown = 1286 MineStoneBrownBg = 1287 MineTorch = 1296 MineralsBlue = 393 MineralsCyan = 392 MineralsGreen = 391 MineralsMagenta = 395 MineralsOrange = 389 MineralsPurple = 394 MineralsRed = 388 MineralsYellow = 390 MonsterEyeBlue = 1335 MonsterEyePurple = 1336 MonsterEyeYellow = 1334 MonsterScalesPurpleDarkBg = 1321 MonsterScalesPurpleLightBg = 1320 MonsterScalesRedDarkBg = 1319 MonsterScalesRedLightBg = 1318 MonsterSkinGreenDarkBg = 1317 MonsterSkinGreenLightBg = 1316 MonsterTeethLargeBottom = 1323 MonsterTeethLargeLeft = 1324 MonsterTeethLargeRight = 1325 MonsterTeethLargeTop = 1322 MonsterTeethMediumBottom = 1327 MonsterTeethMediumLeft = 1328 MonsterTeethMediumRight = 1329 MonsterTeethMediumTop = 1326 MonsterTeethSmallBottom = 1331 MonsterTeethSmallLeft = 1332 MonsterTeethSmallRight = 1333 MonsterTeethSmallTop = 1330 NeonBlueBg = 622 NeonCyanBg = 621 NeonGreenBg = 620 NeonMagentaBg = 617 NeonOrangeBg = 618 NeonYellowBg = 619 NewyearsBalloonBlue = 1367 NewyearsBalloonGreen = 1366 NewyearsBalloonOrange = 1365 NewyearsBalloonPurple = 1368 NewyearsBalloonRed = 1364 NewyearsChampagne = 1363 NewyearsHungLightBlue = 1360 NewyearsHungLightGreen = 1359 NewyearsHungLightPink = 1361 NewyearsHungLightRed = 1357 NewyearsHungLightYellow = 1358 NewyearsStreamerBlue = 1372 NewyearsStreamerGreen = 1371 NewyearsStreamerOrange = 1370 NewyearsStreamerPurple = 1373 NewyearsStreamerRed = 1369 NewyearsWine = 1362 NormalBlackBg = 317 NormalBlueBg = 323 NormalCyanBg = 322 NormalGrayBg = 316 NormalGreenBg = 321 NormalMagentaBg = 324 NormalOrangeBg = 319 NormalRedBg = 318 NormalWhiteBg = 315 NormalYellowBg = 320 NoteDrum = 159 NoteGuitar = 161 NotePiano = 160 OnewayBlackBottom = 1196 OnewayBlackLeft = 1193 OnewayBlackRight = 1195 OnewayBlackTop = 1194 OnewayBlueBottom = 1220 OnewayBlueLeft = 1217 OnewayBlueRight = 1219 OnewayBlueTop = 1218 OnewayCyanBottom = 1216 OnewayCyanLeft = 1213 OnewayCyanRight = 1215 OnewayCyanTop = 1214 OnewayGrayBottom = 1192 OnewayGrayLeft = 1189 OnewayGrayRight = 1191 OnewayGrayTop = 1190 OnewayGreenBottom = 1212 OnewayGreenLeft = 1209 OnewayGreenRight = 1211 OnewayGreenTop = 1210 OnewayMagentaBottom = 1224 OnewayMagentaLeft = 1221 OnewayMagentaRight = 1223 OnewayMagentaTop = 1222 OnewayOrangeBottom = 1204 OnewayOrangeLeft = 1201 OnewayOrangeRight = 1203 OnewayOrangeTop = 1202 OnewayRedBottom = 1200 OnewayRedLeft = 1197 OnewayRedRight = 1199 OnewayRedTop = 1198 OnewayWhiteBottom = 1188 OnewayWhiteLeft = 1185 OnewayWhiteRight = 1187 OnewayWhiteTop = 1186 OnewayYellowBottom = 1208 OnewayYellowLeft = 1205 OnewayYellowRight = 1207 OnewayYellowTop = 1206 OuterspaceBlue = 739 OuterspaceBlueBg = 750 OuterspaceComputer = 763 OuterspaceGreen = 740 OuterspaceGreenBg = 751 OuterspaceLightBlue = 758 OuterspaceLightCyan = 762 OuterspaceLightGreen = 759 OuterspaceLightMagenta = 761 OuterspaceLightRed = 757 OuterspaceLightYellow = 760 OuterspaceMarsRock1 = 744 OuterspaceMarsRock2 = 745 OuterspaceMarsRock3 = 746 OuterspaceMarsRock3Bg = 753 OuterspaceMarsRock4 = 747 OuterspaceMarsRock4Bg = 754 OuterspaceMarsRock5 = 748 OuterspaceMarsRock5Bg = 755 OuterspaceMoon = 743 OuterspaceRed = 741 OuterspaceRedBg = 752 OuterspaceRockGray = 767 OuterspaceSand = 742 OuterspaceSign = 756 OuterspaceStarBlue = 765 OuterspaceStarRed = 764 OuterspaceStarYellow = 766 OuterspaceWhite = 738 OuterspaceWhiteBg = 749 PastelBlueBg = 361 PastelCyanBg = 360 PastelGreenBg = 359 PastelLimeBg = 358 PastelOrangeBg = 356 PastelPurpleBg = 362 PastelRedBg = 355 PastelYellowBg = 357 PipesDown = 737 PipesHorizontal = 733 PipesLeft = 732 PipesRight = 734 PipesUp = 735 PipesVertical = 736 PirateCannon = 969 PirateChestBrown = 965 PirateOnewayBrownTop = 966 PiratePortWindow = 970 PirateShipBorderBrown = 967 PirateSkeletonFlagBg = 974 PirateSkeletonHead = 968 PirateWoodPlankBrown = 964 PirateWoodPlankBrownBg = 972 PirateWoodPlankDarkBrownBg = 973 PirateWoodPlankLightBrownBg = 971 PlasticBlue = 981 PlasticCyan = 980 PlasticGreen = 979 PlasticLime = 978 PlasticMagenta = 982 PlasticOrange = 976 PlasticRed = 975 PlasticYellow = 977 Portal = 72 PortalInvisible = 73 PortalWorld = 74 PrisonBars = 958 PrisonBrick = 959 PrisonBrickBg = 960 PrisonWindowBlackBg = 963 PrisonWindowBlueBg = 962 PrisonWindowOrangeBg = 961 RestaurantBowlEmpty = 1396 RestaurantBowlIcecream = 1399 RestaurantBowlSalad = 1397 RestaurantBowlSpaghetti = 1398 RestaurantFoodBurger = 1380 RestaurantFoodFries = 1384 RestaurantFoodHotdog = 1381 RestaurantFoodSoda = 1383 RestaurantFoodSub = 1382 RestaurantGlassEmpty = 1385 RestaurantGlassMilk = 1387 RestaurantGlassOrangejuice = 1388 RestaurantGlassWater = 1386 RestaurantPlateCakeChocolate = 1393 RestaurantPlateChicken = 1390 RestaurantPlateCookies = 1395 RestaurantPlateEmpty = 1389 RestaurantPlateFish = 1392 RestaurantPlateHam = 1391 RestaurantPlatePieCherry = 1394 RetailAwningBlue = 1271 RetailAwningCyan = 1270 RetailAwningGreen = 1268 RetailAwningPurple = 1272 RetailAwningRed = 1267 RetailAwningYellow = 1269 RetailFlagBlue = 1265 RetailFlagCyan = 1264 RetailFlagGreen = 1262 RetailFlagPurple = 1266 RetailFlagRed = 1261 RetailFlagYellow = 1263 SandBrownDark = 529 SandBrownDarkBg = 536 SandBrownDarkSurface = 530 SandBrownLight = 527 SandBrownLightBg = 535 SandBrownLightSurface = 528 SandGray = 521 SandGrayBg = 532 SandGraySurface = 522 SandOrange = 525 SandOrangeBg = 534 SandOrangeSurface = 526 SandWhite = 519 SandWhiteSurface = 520 SandYellow = 523 SandYellowDarkBg = 533 SandYellowLightBg = 531 SandYellowSurface = 524 ScifiBrownLeopard = 926 ScifiLaserBlueCornerBottomleft = 936 ScifiLaserBlueCornerBottomright = 935 ScifiLaserBlueCornerTopleft = 938 ScifiLaserBlueCornerTopright = 937 ScifiLaserBlueStraightHorizontal = 933 ScifiLaserBlueStraightVertical = 934 ScifiLaserGreenCornerBottomleft = 942 ScifiLaserGreenCornerBottomright = 941 ScifiLaserGreenCornerTopleft = 944 ScifiLaserGreenCornerTopright = 943 ScifiLaserGreenStraightHorizontal = 939 ScifiLaserGreenStraightVertical = 940 ScifiLaserOrangeCornerBottomleft = 948 ScifiLaserOrangeCornerBottomright = 947 ScifiLaserOrangeCornerTopleft = 950 ScifiLaserOrangeCornerTopright = 949 ScifiLaserOrangeStraightHorizontal = 945 ScifiLaserOrangeStraightVeritical = 946 ScifiLaserRedCornerBottomleft = 954 ScifiLaserRedCornerBottomright = 953 ScifiLaserRedCornerTopleft = 956 ScifiLaserRedCornerTopright = 955 ScifiLaserRedStraightHorizontal = 951 ScifiLaserRedStraightVertical = 952 ScifiMetalGray = 924 ScifiMetalWhite = 925 ScifiOnewayBlueTop = 928 ScifiOnewayCyanTop = 932 ScifiOnewayGreenTop = 929 ScifiOnewayMagentaTop = 931 ScifiOnewayRedTop = 927 ScifiOnewayYellowTop = 930 ScifiOutlineGrayBg = 957 ScifiPanelBlue = 919 ScifiPanelCyan = 923 ScifiPanelGreen = 920 ScifiPanelMagenta = 922 ScifiPanelRed = 918 ScifiPanelYellow = 921 SecretAppear = 377 SecretDisappear = 378 SecretInvisible = 379 SignBlue = 70 SignGold = 71 SignGreen = 69 SignNormal = 67 SignRed = 68 SpecialCake = 38 SpecialDiamond = 37 SpecialHologram = 36 SpringDaffodilOrange = 1184 SpringDaffodilWhite = 1182 SpringDaffodilYellow = 1183 SpringDaisyBlue = 1177 SpringDaisyPink = 1178 SpringDaisyWhite = 1176 SpringDirtBrown = 1170 SpringDirtDriftBottomLeft = 1174 SpringDirtDriftBottomRight = 1175 SpringDirtDriftTopLeft = 1172 SpringDirtDriftTopRight = 1173 SpringHedgeGreen = 1171 SpringTulipPink = 1181 SpringTulipRed = 1179 SpringTulipYellow = 1180 StoneBlue = 502 StoneBlueBg = 509 StoneBrown = 501 StoneBrownBg = 507 StoneGray = 499 StoneGrayBg = 503 StoneGreen = 500 StoneGreenBg = 505 StoneHalfBlueBg = 510 StoneHalfBrownBg = 508 StoneHalfGrayBg = 504 StoneHalfGreenBg = 506 SummerBeach = 438 SummerDrink = 441 SummerIceCreamChocolate = 1283 SummerIceCreamMint = 1285 SummerIceCreamSrawberry = 1284 SummerIceCreamVanilla = 1282 SummerOnewayDockTop = 1277 SummerPail = 439 SummerPlankGreen = 1276 SummerPlankGreenBg = 1281 SummerPlankPurple = 1274 SummerPlankPurpleBg = 1279 SummerPlankYelllow = 1275 SummerPlankYellowBg = 1280 SummerShovel = 440 SummerStraw = 1273 SummerStrawBg = 1278 SwampGrass = 1337 SwampGrassBg = 1341 SwampLog = 1338 SwampMudBg = 1340 SwampSignToxic = 1339 SwitchGlobalActivator = 107 SwitchGlobalDoor = 109 SwitchGlobalGate = 110 SwitchGlobalResetter = 108 SwitchGlobalToggle = 106 SwitchLocalActivator = 102 SwitchLocalDoor = 104 SwitchLocalGate = 105 SwitchLocalResetter = 103 SwitchLocalToggle = 101 TeamBlueDoor = 172 TeamBlueGate = 179 TeamCyanDoor = 173 TeamCyanGate = 180 TeamEffectBlue = 165 TeamEffectCyan = 166 TeamEffectGreen = 164 TeamEffectMagenta = 167 TeamEffectNone = 162 TeamEffectRed = 163 TeamEffectYellow = 168 TeamGreenDoor = 171 TeamGreenGate = 178 TeamMagentaDoor = 174 TeamMagentaGate = 181 TeamNoneDoor = 169 TeamNoneGate = 176 TeamRedDoor = 170 TeamRedGate = 177 TeamYellowDoor = 175 TeamYellowGate = 182 TextileClothBlueBg = 1415 TextileClothGreenBg = 1414 TextileClothPinkBg = 1416 TextileClothRedBg = 1418 TextileClothYellowBg = 1417 TilesBlack = 1038 TilesBlackBg = 1048 TilesBlue = 1044 TilesBlueBg = 1054 TilesCyan = 1043 TilesCyanBg = 1053 TilesGray = 1037 TilesGrayBg = 1047 TilesGreen = 1042 TilesGreenBg = 1052 TilesOrange = 1040 TilesOrangeBg = 1050 TilesPurple = 1045 TilesPurpleBg = 1055 TilesRed = 1039 TilesRedBg = 1049 TilesWhite = 1036 TilesWhiteBg = 1046 TilesYellow = 1041 TilesYellowBg = 1051 ToolActivateMinimap = 18 ToolCheckpoint = 14 ToolGodModeActivator = 16 ToolPortalWorldSpawn = 17 ToolReset = 15 ToolSpawnLobby = 13 ToxicLadderVerticalBroken = 1412 ToxicOnewayRustedBottom = 1403 ToxicOnewayRustedLeft = 1400 ToxicOnewayRustedRight = 1402 ToxicOnewayRustedTop = 1401 ToxicRailRusted = 1413 ToxicSewerDrainEmpty = 1407 ToxicSewerDrainLava = 1410 ToxicSewerDrainMud = 1411 ToxicSewerDrainWaste = 1409 ToxicSewerDrainWater = 1408 ToxicWasteBarrelOff = 1405 ToxicWasteBarrelOn = 1406 ToxicWasteBg = 1404 UnderwaterBg = 1427 UnderwaterFishBg = 1429 UnderwaterOctopusBg = 1428 UnderwaterSeahorseBg = 1430 UnderwaterSeaweedBg = 1431 ValentinesHeartPink = 1356 ValentinesHeartPurple = 1355 ValentinesHeartRed = 1354 WildwestDoorLeftBlue = 608 WildwestDoorLeftBrown = 604 WildwestDoorLeftRed = 606 WildwestDoorRightBlue = 609 WildwestDoorRightBrown = 605 WildwestDoorRightRed = 607 WildwestFenceBlueDark = 616 WildwestFenceBlueLight = 613 WildwestFenceBrownDark = 614 WildwestFenceBrownLight = 611 WildwestFenceRedDark = 615 WildwestFenceRedLight = 612 WildwestOnewayBlueDarkTop = 593 WildwestOnewayBlueTop = 590 WildwestOnewayBrownDarkTop = 591 WildwestOnewayBrownTop = 588 WildwestOnewayRedDarkTop = 592 WildwestOnewayRedTop = 589 WildwestPoleGrayHorizontal = 602 WildwestPoleGrayVertical = 603 WildwestPoleWhiteHorizontal = 600 WildwestPoleWhiteVertical = 601 WildwestSidingBlueDarkBg = 599 WildwestSidingBlueLightBg = 598 WildwestSidingBrownDarkBg = 595 WildwestSidingBrownLightBg = 594 WildwestSidingRedDarkBg = 597 WildwestSidingRedLightBg = 596 WildwestWindow = 610 WindowBlue = 480 WindowClear = 474 WindowGreen = 478 WindowOrange = 476 WindowPink = 482 WindowPurple = 481 WindowRed = 475 WindowTeal = 479 WindowYellow = 477 WinterGlacier = 1098 WinterGlacierBg = 1136 WinterHalfIceBottom = 1114 WinterHalfIceLeft = 1111 WinterHalfIceRight = 1113 WinterHalfIceTop = 1112 WinterHalfSnowBottom = 1110 WinterHalfSnowLeft = 1107 WinterHalfSnowRight = 1109 WinterHalfSnowTop = 1108 WinterIce = 1100 WinterIceBrick = 1096 WinterIceBrickBg = 1134 WinterIceDark = 1103 WinterIceDarkBg = 1132 WinterIceDarkLeft = 1104 WinterIceDarkMiddle = 1105 WinterIceDarkRight = 1106 WinterIceDriftBottomLeft = 1119 WinterIceDriftBottomRight = 1120 WinterIceDriftTopLeft = 1117 WinterIceDriftTopRight = 1118 WinterIceLight = 1102 WinterIceLightBg = 1133 WinterIceSlippery = 1115 WinterOnewayIce = 1101 WinterSlate = 1099 WinterSlateBg = 1137 WinterSnow = 1097 WinterSnowBg = 1135 WinterSnowDriftBottomLeft = 1123 WinterSnowDriftBottomRight = 1124 WinterSnowDriftTopLeft = 1121 WinterSnowDriftTopRight = 1122 WinterSnowFluffLeft = 1125 WinterSnowFluffMiddle = 1126 WinterSnowFluffRight = 1127 WinterSnowPile = 1116 WinterSnowflakeLarge = 1130 WinterSnowflakeSmall = 1131 WinterSnowman = 1128 WinterTree = 1129"
  },
  "api/PixelPilot.Client.World.Constants.PixelBlockExtensions.html": {
    "href": "api/PixelPilot.Client.World.Constants.PixelBlockExtensions.html",
    "title": "Class PixelBlockExtensions | PixelPilot",
    "keywords": "Class PixelBlockExtensions Namespace PixelPilot.Client.World.Constants Assembly PixelPilot.Core.dll public static class PixelBlockExtensions Inheritance object PixelBlockExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetBlockType(PixelBlock) public static BlockType GetBlockType(this PixelBlock pixelBlock) Parameters pixelBlock PixelBlock Returns BlockType GetPacketFieldTypes(BlockType) public static PacketFieldType[] GetPacketFieldTypes(this BlockType blockType) Parameters blockType BlockType Returns PacketFieldType[]"
  },
  "api/PixelPilot.Client.World.Constants.WorldLayer.html": {
    "href": "api/PixelPilot.Client.World.Constants.WorldLayer.html",
    "title": "Enum WorldLayer | PixelPilot",
    "keywords": "Enum WorldLayer Namespace PixelPilot.Client.World.Constants Assembly PixelPilot.Core.dll All available world layers. public enum WorldLayer Fields Background = 0 Foreground = 1 Overlay = 2"
  },
  "api/PixelPilot.Client.World.Constants.html": {
    "href": "api/PixelPilot.Client.World.Constants.html",
    "title": "Namespace PixelPilot.Client.World.Constants | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.World.Constants Classes PixelBlockExtensions Enums BlockType General category for block types. PixelBlock All blocks available in the game as of 29-04-2024. WorldLayer All available world layers."
  },
  "api/PixelPilot.Client.World.PixelWorld.BlockPlaced.html": {
    "href": "api/PixelPilot.Client.World.PixelWorld.BlockPlaced.html",
    "title": "Delegate PixelWorld.BlockPlaced | PixelPilot",
    "keywords": "Delegate PixelWorld.BlockPlaced Namespace PixelPilot.Client.World Assembly PixelPilot.Core.dll Represents a delegate for the BlockPlaced event. public delegate void PixelWorld.BlockPlaced(object sender, int userId, IPlacedBlock oldBlock, IPlacedBlock newBlock) Parameters sender object The object that triggered the event. userId int The ID of the user who placed the block. oldBlock IPlacedBlock The previous state of the block. newBlock IPlacedBlock The new state of the block after being placed. Includes X, Y, Layer."
  },
  "api/PixelPilot.Client.World.PixelWorld.WorldCleared.html": {
    "href": "api/PixelPilot.Client.World.PixelWorld.WorldCleared.html",
    "title": "Delegate PixelWorld.WorldCleared | PixelPilot",
    "keywords": "Delegate PixelWorld.WorldCleared Namespace PixelPilot.Client.World Assembly PixelPilot.Core.dll Represents a delegate for the WorldCleared event. public delegate void PixelWorld.WorldCleared(object sender) Parameters sender object The object that triggered the event."
  },
  "api/PixelPilot.Client.World.PixelWorld.WorldInit.html": {
    "href": "api/PixelPilot.Client.World.PixelWorld.WorldInit.html",
    "title": "Delegate PixelWorld.WorldInit | PixelPilot",
    "keywords": "Delegate PixelWorld.WorldInit Namespace PixelPilot.Client.World Assembly PixelPilot.Core.dll Represents a delegate for the WorldInit event. public delegate void PixelWorld.WorldInit(object sender) Parameters sender object The object that triggered the event."
  },
  "api/PixelPilot.Client.World.PixelWorld.WorldReloaded.html": {
    "href": "api/PixelPilot.Client.World.PixelWorld.WorldReloaded.html",
    "title": "Delegate PixelWorld.WorldReloaded | PixelPilot",
    "keywords": "Delegate PixelWorld.WorldReloaded Namespace PixelPilot.Client.World Assembly PixelPilot.Core.dll Represents a delegate for the WorldReloaded event. public delegate void PixelWorld.WorldReloaded(object sender) Parameters sender object The object that triggered the event."
  },
  "api/PixelPilot.Client.World.PixelWorld.html": {
    "href": "api/PixelPilot.Client.World.PixelWorld.html",
    "title": "Class PixelWorld | PixelPilot",
    "keywords": "Class PixelWorld Namespace PixelPilot.Client.World Assembly PixelPilot.Core.dll Represents the 'world' in PixelWalker. The world includes blocks, switches and other things that can be placed or interacted with. This does not include players! public class PixelWorld Inheritance object PixelWorld Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods WorldExtensions.GetDifference(PixelWorld, Structure, int, int, bool) WorldExtensions.GetStructure(PixelWorld, Point, Point, bool) WorldExtensions.GetStructure(PixelWorld, int, int, int, int, bool) WorldExtensions.PasteSafe(PixelWorld, Structure, PixelPilotClient, Point, int) Constructors PixelWorld() public PixelWorld() PixelWorld(PlayerInitPacket) public PixelWorld(PlayerInitPacket initPacket) Parameters initPacket PlayerInitPacket PixelWorld(int, int) public PixelWorld(int height, int width) Parameters height int width int Properties Height public int Height { get; } Property Value int InitTask A task that can be used to await world init completion. This ensures the world has been properly populated before using it. public Task InitTask { get; } Property Value Task OwnerUsername public string OwnerUsername { get; } Property Value string Width public int Width { get; } Property Value int WorldName public string WorldName { get; } Property Value string Methods BlockAt(WorldLayer, int, int) Gets the block at the specified point. public IPixelBlock BlockAt(WorldLayer layer, int x, int y) Parameters layer WorldLayer Layer x int X y int Y Returns IPixelBlock The block BlockAt(int, int, int) Gets the block at the specified point. public IPixelBlock BlockAt(int layer, int x, int y) Parameters layer int Layer x int X y int Y Returns IPixelBlock The block DeserializeBlock(WorldBlockPlacedPacket) Deserializes a WorldBlockPlacedPacket into an IPixelBlock object. This conversion loses information about where, or by who, a block was placed. public static IPixelBlock DeserializeBlock(WorldBlockPlacedPacket packet) Parameters packet WorldBlockPlacedPacket The WorldBlockPlacedPacket to deserialize. Returns IPixelBlock An IPlacedBlock object representing the deserialized packet but without location data. Exceptions NotImplementedException If the type has not been implemented yet. DeserializeBlock(BinaryReader) Desterialize a blok public static IPixelBlock DeserializeBlock(BinaryReader reader) Parameters reader BinaryReader Memory stream reader Returns IPixelBlock The block Exceptions ArgumentOutOfRangeException Only when implementation is missing DeserializeBlock(BinaryReader, PixelBlock) public static IPixelBlock DeserializeBlock(BinaryReader reader, PixelBlock block) Parameters reader BinaryReader block PixelBlock Returns IPixelBlock GetBlocks(bool) public IEnumerable<PlacedBlock> GetBlocks(bool includeEmpty = true) Parameters includeEmpty bool Returns IEnumerable<PlacedBlock> HandlePacket(object, IMessage) Utility method that can attached to the client. This allows for an easy hook without having to write this each time. public void HandlePacket(object sender, IMessage packet) Parameters sender object The sender packet IMessage The incoming packet Init(byte[]) Initialize the world using a byte[]. public void Init(byte[] buffer) Parameters buffer byte[] Exceptions Exception Events OnBlockPlaced Fired once init has been received by the client. The public event PixelWorld.BlockPlaced? OnBlockPlaced Event Type PixelWorld.BlockPlaced OnWorldCleared Fired after the world is initialized. public event PixelWorld.WorldCleared? OnWorldCleared Event Type PixelWorld.WorldCleared OnWorldInit Fired after the world is initialized. public event PixelWorld.WorldInit? OnWorldInit Event Type PixelWorld.WorldInit OnWorldReloaded Fired after the world is reloaded public event PixelWorld.WorldReloaded? OnWorldReloaded Event Type PixelWorld.WorldReloaded"
  },
  "api/PixelPilot.Client.World.html": {
    "href": "api/PixelPilot.Client.World.html",
    "title": "Namespace PixelPilot.Client.World | PixelPilot",
    "keywords": "Namespace PixelPilot.Client.World Classes PixelWorld Represents the 'world' in PixelWalker. The world includes blocks, switches and other things that can be placed or interacted with. This does not include players! Delegates PixelWorld.BlockPlaced Represents a delegate for the BlockPlaced event. PixelWorld.WorldCleared Represents a delegate for the WorldCleared event. PixelWorld.WorldInit Represents a delegate for the WorldInit event. PixelWorld.WorldReloaded Represents a delegate for the WorldReloaded event."
  },
  "api/PixelPilot.Client.html": {
    "href": "api/PixelPilot.Client.html",
    "title": "Namespace PixelPilot.Client | PixelPilot",
    "keywords": "Namespace PixelPilot.Client Classes JoinData PixelGameClientBuilder PixelGameException PixelPilotClient Client for interacting with the PixelWalker game server. Delegates PixelPilotClient.ClientConnected PixelPilotClient.ClientDisconnected PixelPilotClient.PacketReceived PixelPilotClient.PacketSend"
  },
  "api/PixelPilot.Common.EndPoints.html": {
    "href": "api/PixelPilot.Common.EndPoints.html",
    "title": "Class EndPoints | PixelPilot",
    "keywords": "Class EndPoints Namespace PixelPilot.Common Assembly PixelPilot.Core.dll public static class EndPoints Inheritance object EndPoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ApiEndpoint public const string ApiEndpoint = \"https://api.pixelwalker.net\" Field Value string GameHttpEndpoint public const string GameHttpEndpoint = \"https://game.pixelwalker.net\" Field Value string GameWebsocketEndpoint public const string GameWebsocketEndpoint = \"wss://game.pixelwalker.net\" Field Value string"
  },
  "api/PixelPilot.Common.Logging.LogManager.html": {
    "href": "api/PixelPilot.Common.Logging.LogManager.html",
    "title": "Class LogManager | PixelPilot",
    "keywords": "Class LogManager Namespace PixelPilot.Common.Logging Assembly PixelPilot.Core.dll The LogManager class provides static access to loggers though the project. public static class LogManager Inheritance object LogManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Configure(IConfigurationSection) Use a configuration section to configure the logger. public static void Configure(IConfigurationSection section) Parameters section IConfigurationSection Logging configuration Configure(Action<ILoggingBuilder>) Set an action to be used when creating the logger factory. public static void Configure(Action<ILoggingBuilder> configure) Parameters configure Action<ILoggingBuilder> Action to be used to configure GetLogger(string) public static ILogger GetLogger(string name) Parameters name string Returns ILogger"
  },
  "api/PixelPilot.Common.Logging.html": {
    "href": "api/PixelPilot.Common.Logging.html",
    "title": "Namespace PixelPilot.Common.Logging | PixelPilot",
    "keywords": "Namespace PixelPilot.Common.Logging Classes LogManager The LogManager class provides static access to loggers though the project."
  },
  "api/PixelPilot.Common.html": {
    "href": "api/PixelPilot.Common.html",
    "title": "Namespace PixelPilot.Common | PixelPilot",
    "keywords": "Namespace PixelPilot.Common Classes EndPoints"
  },
  "api/PixelPilot.Structures.Converters.Changes.VersionManager.html": {
    "href": "api/PixelPilot.Structures.Converters.Changes.VersionManager.html",
    "title": "Class VersionManager | PixelPilot",
    "keywords": "Class VersionManager Namespace PixelPilot.Structures.Converters.Changes Assembly PixelPilot.Structures.dll public class VersionManager Inheritance object VersionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VersionManager() public VersionManager() Methods ApplyMigrations(MappedBlockData) public void ApplyMigrations(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Changes.VersionMigration.html": {
    "href": "api/PixelPilot.Structures.Converters.Changes.VersionMigration.html",
    "title": "Class VersionMigration | PixelPilot",
    "keywords": "Class VersionMigration Namespace PixelPilot.Structures.Converters.Changes Assembly PixelPilot.Structures.dll public abstract class VersionMigration Inheritance object VersionMigration Derived Migration_2024_07_18 Migration_2024_07_29 Migration_2024_11_18 Migration_2024_12_04 Migration_2025_08_04 Migration_2025_08_05 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VersionMigration(int) protected VersionMigration(int fromVersion) Parameters fromVersion int Properties FromVersion public int FromVersion { get; } Property Value int ToVersion public int ToVersion { get; } Property Value int Methods ApplyMigration(MappedBlockData) public void ApplyMigration(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData DoUpdate(MappedBlockData) protected abstract void DoUpdate(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Changes.html": {
    "href": "api/PixelPilot.Structures.Converters.Changes.html",
    "title": "Namespace PixelPilot.Structures.Converters.Changes | PixelPilot",
    "keywords": "Namespace PixelPilot.Structures.Converters.Changes Classes VersionManager VersionMigration"
  },
  "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_07_18.html": {
    "href": "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_07_18.html",
    "title": "Class Migration_2024_07_18 | PixelPilot",
    "keywords": "Class Migration_2024_07_18 Namespace PixelPilot.Structures.Converters.Migrations.Migrations Assembly PixelPilot.Structures.dll public class Migration_2024_07_18 : VersionMigration Inheritance object VersionMigration Migration_2024_07_18 Inherited Members VersionMigration.FromVersion VersionMigration.ToVersion VersionMigration.ApplyMigration(MappedBlockData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Migration_2024_07_18() public Migration_2024_07_18() Methods DoUpdate(MappedBlockData) protected override void DoUpdate(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_07_29.html": {
    "href": "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_07_29.html",
    "title": "Class Migration_2024_07_29 | PixelPilot",
    "keywords": "Class Migration_2024_07_29 Namespace PixelPilot.Structures.Converters.Migrations.Migrations Assembly PixelPilot.Structures.dll public class Migration_2024_07_29 : VersionMigration Inheritance object VersionMigration Migration_2024_07_29 Inherited Members VersionMigration.FromVersion VersionMigration.ToVersion VersionMigration.ApplyMigration(MappedBlockData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Migration_2024_07_29() public Migration_2024_07_29() Methods DoUpdate(MappedBlockData) protected override void DoUpdate(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_11_18.html": {
    "href": "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_11_18.html",
    "title": "Class Migration_2024_11_18 | PixelPilot",
    "keywords": "Class Migration_2024_11_18 Namespace PixelPilot.Structures.Converters.Migrations.Migrations Assembly PixelPilot.Structures.dll public class Migration_2024_11_18 : VersionMigration Inheritance object VersionMigration Migration_2024_11_18 Inherited Members VersionMigration.FromVersion VersionMigration.ToVersion VersionMigration.ApplyMigration(MappedBlockData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Migration_2024_11_18() public Migration_2024_11_18() Methods DoUpdate(MappedBlockData) protected override void DoUpdate(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_12_04.html": {
    "href": "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2024_12_04.html",
    "title": "Class Migration_2024_12_04 | PixelPilot",
    "keywords": "Class Migration_2024_12_04 Namespace PixelPilot.Structures.Converters.Migrations.Migrations Assembly PixelPilot.Structures.dll public class Migration_2024_12_04 : VersionMigration Inheritance object VersionMigration Migration_2024_12_04 Inherited Members VersionMigration.FromVersion VersionMigration.ToVersion VersionMigration.ApplyMigration(MappedBlockData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Migration_2024_12_04() public Migration_2024_12_04() Methods DoUpdate(MappedBlockData) protected override void DoUpdate(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2025_08_04.html": {
    "href": "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2025_08_04.html",
    "title": "Class Migration_2025_08_04 | PixelPilot",
    "keywords": "Class Migration_2025_08_04 Namespace PixelPilot.Structures.Converters.Migrations.Migrations Assembly PixelPilot.Structures.dll public class Migration_2025_08_04 : VersionMigration Inheritance object VersionMigration Migration_2025_08_04 Inherited Members VersionMigration.FromVersion VersionMigration.ToVersion VersionMigration.ApplyMigration(MappedBlockData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Migration_2025_08_04() public Migration_2025_08_04() Methods DoUpdate(MappedBlockData) protected override void DoUpdate(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2025_08_05.html": {
    "href": "api/PixelPilot.Structures.Converters.Migrations.Migrations.Migration_2025_08_05.html",
    "title": "Class Migration_2025_08_05 | PixelPilot",
    "keywords": "Class Migration_2025_08_05 Namespace PixelPilot.Structures.Converters.Migrations.Migrations Assembly PixelPilot.Structures.dll public class Migration_2025_08_05 : VersionMigration Inheritance object VersionMigration Migration_2025_08_05 Inherited Members VersionMigration.FromVersion VersionMigration.ToVersion VersionMigration.ApplyMigration(MappedBlockData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Migration_2025_08_05() public Migration_2025_08_05() Methods DoUpdate(MappedBlockData) protected override void DoUpdate(MappedBlockData mappedBlockData) Parameters mappedBlockData MappedBlockData"
  },
  "api/PixelPilot.Structures.Converters.Migrations.Migrations.html": {
    "href": "api/PixelPilot.Structures.Converters.Migrations.Migrations.html",
    "title": "Namespace PixelPilot.Structures.Converters.Migrations.Migrations | PixelPilot",
    "keywords": "Namespace PixelPilot.Structures.Converters.Migrations.Migrations Classes Migration_2024_07_18 Migration_2024_07_29 Migration_2024_11_18 Migration_2024_12_04 Migration_2025_08_04 Migration_2025_08_05"
  },
  "api/PixelPilot.Structures.Converters.PilotSimple.JsonBlockListConverter.html": {
    "href": "api/PixelPilot.Structures.Converters.PilotSimple.JsonBlockListConverter.html",
    "title": "Class JsonBlockListConverter | PixelPilot",
    "keywords": "Class JsonBlockListConverter Namespace PixelPilot.Structures.Converters.PilotSimple Assembly PixelPilot.Structures.dll Additional binding to convert a list of placed blocks to a save format. This format also takes into consideration a version number. public class JsonBlockListConverter : JsonConverter<List<IPlacedBlock>> Inheritance object JsonConverter JsonConverter<List<IPlacedBlock>> JsonBlockListConverter Inherited Members JsonConverter<List<IPlacedBlock>>.CanConvert(Type) JsonConverter<List<IPlacedBlock>>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<List<IPlacedBlock>>.WriteAsPropertyName(Utf8JsonWriter, List<IPlacedBlock>, JsonSerializerOptions) JsonConverter<List<IPlacedBlock>>.HandleNull JsonConverter<List<IPlacedBlock>>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type List<IPlacedBlock>. public override List<IPlacedBlock>? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns List<IPlacedBlock> The converted value. Write(Utf8JsonWriter, List<IPlacedBlock>, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, List<IPlacedBlock> blocks, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. blocks List<IPlacedBlock> options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/PixelPilot.Structures.Converters.PilotSimple.MappedBlockData.html": {
    "href": "api/PixelPilot.Structures.Converters.PilotSimple.MappedBlockData.html",
    "title": "Class MappedBlockData | PixelPilot",
    "keywords": "Class MappedBlockData Namespace PixelPilot.Structures.Converters.PilotSimple Assembly PixelPilot.Structures.dll public class MappedBlockData Inheritance object MappedBlockData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MappedBlockData() public MappedBlockData() MappedBlockData(List<PixelBlock>, List<string>) public MappedBlockData(List<PixelBlock> mapping, List<string> blockData) Parameters mapping List<PixelBlock> blockData List<string> Properties BlockData public List<string> BlockData { get; set; } Property Value List<string> Mapping public List<string> Mapping { get; set; } Property Value List<string> Version public int Version { get; set; } Property Value int"
  },
  "api/PixelPilot.Structures.Converters.PilotSimple.PilotSaveSerializer.html": {
    "href": "api/PixelPilot.Structures.Converters.PilotSimple.PilotSaveSerializer.html",
    "title": "Class PilotSaveSerializer | PixelPilot",
    "keywords": "Class PilotSaveSerializer Namespace PixelPilot.Structures.Converters.PilotSimple Assembly PixelPilot.Structures.dll public static class PilotSaveSerializer Inheritance object PilotSaveSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Deserialize(string) public static Structure Deserialize(string rawData) Parameters rawData string Returns Structure Serialize(Structure) public static string Serialize(Structure structure) Parameters structure Structure Returns string"
  },
  "api/PixelPilot.Structures.Converters.PilotSimple.PilotSimpleStructure.html": {
    "href": "api/PixelPilot.Structures.Converters.PilotSimple.PilotSimpleStructure.html",
    "title": "Class PilotSimpleStructure | PixelPilot",
    "keywords": "Class PilotSimpleStructure Namespace PixelPilot.Structures.Converters.PilotSimple Assembly PixelPilot.Structures.dll Used to save a structure public class PilotSimpleStructure Inheritance object PilotSimpleStructure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PilotSimpleStructure() public PilotSimpleStructure() Properties Blocks public List<IPlacedBlock> Blocks { get; set; } Property Value List<IPlacedBlock> ContainsEmpty public bool ContainsEmpty { get; set; } Property Value bool Height public int Height { get; set; } Property Value int Meta public Dictionary<string, string> Meta { get; set; } Property Value Dictionary<string, string> Version public int Version { get; set; } Property Value int Width public int Width { get; set; } Property Value int Methods FromStructure(Structure) public static PilotSimpleStructure FromStructure(Structure structure) Parameters structure Structure Returns PilotSimpleStructure ToStructure() public Structure ToStructure() Returns Structure"
  },
  "api/PixelPilot.Structures.Converters.PilotSimple.html": {
    "href": "api/PixelPilot.Structures.Converters.PilotSimple.html",
    "title": "Namespace PixelPilot.Structures.Converters.PilotSimple | PixelPilot",
    "keywords": "Namespace PixelPilot.Structures.Converters.PilotSimple Classes JsonBlockListConverter Additional binding to convert a list of placed blocks to a save format. This format also takes into consideration a version number. MappedBlockData PilotSaveSerializer PilotSimpleStructure Used to save a structure"
  },
  "api/PixelPilot.Structures.Extensions.PlacedBlockListExtensions.html": {
    "href": "api/PixelPilot.Structures.Extensions.PlacedBlockListExtensions.html",
    "title": "Class PlacedBlockListExtensions | PixelPilot",
    "keywords": "Class PlacedBlockListExtensions Namespace PixelPilot.Structures.Extensions Assembly PixelPilot.Structures.dll public static class PlacedBlockListExtensions Inheritance object PlacedBlockListExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods PasteInOrder(List<IPlacedBlock>, PixelPilotClient, Point, int) public static Task PasteInOrder(this List<IPlacedBlock> blocks, PixelPilotClient client, Point origin, int delay = 0) Parameters blocks List<IPlacedBlock> client PixelPilotClient origin Point delay int Returns Task PasteShuffled(List<IPlacedBlock>, PixelPilotClient, Point, int) public static Task PasteShuffled(this List<IPlacedBlock> blocks, PixelPilotClient client, Point origin, int delay = 0) Parameters blocks List<IPlacedBlock> client PixelPilotClient origin Point delay int Returns Task ToChunkedPacket(List<IPlacedBlock>) Creates a packet out of a blocks that are all the same. public static IMessage ToChunkedPacket(this List<IPlacedBlock> blocks) Parameters blocks List<IPlacedBlock> The blocks Returns IMessage A packet Exceptions PixelApiException When the requirements are not met ToChunkedPackets(IEnumerable<IPlacedBlock>) Group blocks that are the same into a single packet that can be send. public static List<IMessage> ToChunkedPackets(this IEnumerable<IPlacedBlock> blocks) Parameters blocks IEnumerable<IPlacedBlock> The blocks Returns List<IMessage> Packets to be send by the client."
  },
  "api/PixelPilot.Structures.Extensions.WorldExtensions.html": {
    "href": "api/PixelPilot.Structures.Extensions.WorldExtensions.html",
    "title": "Class WorldExtensions | PixelPilot",
    "keywords": "Class WorldExtensions Namespace PixelPilot.Structures.Extensions Assembly PixelPilot.Structures.dll public static class WorldExtensions Inheritance object WorldExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDifference(PixelWorld, Structure, int, int, bool) Get the difference between the world and structure at a specified place in the world. The returned list will be translated towards the origin point (unless disabled using the parameters) by copying the original blocks. If not translated the original references will be kept. public static List<IPlacedBlock> GetDifference(this PixelWorld world, Structure structure, int x = 0, int y = 0, bool translate = true) Parameters world PixelWorld The from which to check if blocks are already placed structure Structure The structure to be placed. x int The X location (Top Left) y int The Y location (Top Left) translate bool If the output should be translated to the differences in the world. Returns List<IPlacedBlock> Exceptions PixelGameException GetStructure(PixelWorld, Point, Point, bool) Get a structure from the world between two points. public static Structure GetStructure(this PixelWorld world, Point p1, Point p2, bool copyEmpty = false) Parameters world PixelWorld p1 Point p2 Point copyEmpty bool Returns Structure GetStructure(PixelWorld, int, int, int, int, bool) Get a structure from the world. public static Structure GetStructure(this PixelWorld world, int x, int y, int width, int height, bool copyEmpty = true) Parameters world PixelWorld x int y int width int height int copyEmpty bool Returns Structure PasteSafe(PixelWorld, Structure, PixelPilotClient, Point, int) public static Task PasteSafe(this PixelWorld world, Structure structure, PixelPilotClient client, Point pasteLocation, int maxAttempts = 5) Parameters world PixelWorld structure Structure client PixelPilotClient pasteLocation Point maxAttempts int Returns Task"
  },
  "api/PixelPilot.Structures.Extensions.html": {
    "href": "api/PixelPilot.Structures.Extensions.html",
    "title": "Namespace PixelPilot.Structures.Extensions | PixelPilot",
    "keywords": "Namespace PixelPilot.Structures.Extensions Classes PlacedBlockListExtensions WorldExtensions"
  },
  "api/PixelPilot.Structures.Structure.html": {
    "href": "api/PixelPilot.Structures.Structure.html",
    "title": "Class Structure | PixelPilot",
    "keywords": "Class Structure Namespace PixelPilot.Structures Assembly PixelPilot.Structures.dll public class Structure Inheritance object Structure Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Structure(int, int, Dictionary<string, string>, bool, List<IPlacedBlock>) public Structure(int width, int height, Dictionary<string, string> meta, bool containsEmpty, List<IPlacedBlock> blocks) Parameters width int height int meta Dictionary<string, string> containsEmpty bool blocks List<IPlacedBlock> Properties Blocks public List<IPlacedBlock> Blocks { get; } Property Value List<IPlacedBlock> BlocksWithEmpty Returns a computed list of the structure which includes empty blocks. public List<IPlacedBlock> BlocksWithEmpty { get; } Property Value List<IPlacedBlock> ContainsEmpty public bool ContainsEmpty { get; } Property Value bool Height public int Height { get; } Property Value int Meta public Dictionary<string, string> Meta { get; set; } Property Value Dictionary<string, string> Width public int Width { get; } Property Value int Methods AddEmptyBlocks() Adds empty blocks where no blocks are in this structure. This action will modify the original struct. public void AddEmptyBlocks()"
  },
  "api/PixelPilot.Structures.html": {
    "href": "api/PixelPilot.Structures.html",
    "title": "Namespace PixelPilot.Structures | PixelPilot",
    "keywords": "Namespace PixelPilot.Structures Classes Structure"
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.ChangeSecretEditKeyPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.ChangeSecretEditKeyPacket.html",
    "title": "Class ChangeSecretEditKeyPacket | PixelPilot",
    "keywords": "Class ChangeSecretEditKeyPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class ChangeSecretEditKeyPacket : IMessage<ChangeSecretEditKeyPacket>, IEquatable<ChangeSecretEditKeyPacket>, IDeepCloneable<ChangeSecretEditKeyPacket>, IBufferMessage, IMessage Inheritance object ChangeSecretEditKeyPacket Implements IMessage<ChangeSecretEditKeyPacket> IEquatable<ChangeSecretEditKeyPacket> IDeepCloneable<ChangeSecretEditKeyPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors ChangeSecretEditKeyPacket() public ChangeSecretEditKeyPacket() ChangeSecretEditKeyPacket(ChangeSecretEditKeyPacket) public ChangeSecretEditKeyPacket(ChangeSecretEditKeyPacket other) Parameters other ChangeSecretEditKeyPacket Fields NewEditKeyFieldNumber Field number for the \"new_edit_key\" field. public const int NewEditKeyFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor NewEditKey public string NewEditKey { get; set; } Property Value string Parser public static MessageParser<ChangeSecretEditKeyPacket> Parser { get; } Property Value MessageParser<ChangeSecretEditKeyPacket> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public ChangeSecretEditKeyPacket Clone() Returns ChangeSecretEditKeyPacket A deep clone of this object. Equals(ChangeSecretEditKeyPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(ChangeSecretEditKeyPacket other) Parameters other ChangeSecretEditKeyPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(ChangeSecretEditKeyPacket) Merges the given message into this one. public void MergeFrom(ChangeSecretEditKeyPacket other) Parameters other ChangeSecretEditKeyPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.GlobalSwitchChangedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.GlobalSwitchChangedPacket.html",
    "title": "Class GlobalSwitchChangedPacket | PixelPilot",
    "keywords": "Class GlobalSwitchChangedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Misc PACKETS public sealed class GlobalSwitchChangedPacket : IMessage<GlobalSwitchChangedPacket>, IEquatable<GlobalSwitchChangedPacket>, IDeepCloneable<GlobalSwitchChangedPacket>, IBufferMessage, IMessage Inheritance object GlobalSwitchChangedPacket Implements IMessage<GlobalSwitchChangedPacket> IEquatable<GlobalSwitchChangedPacket> IDeepCloneable<GlobalSwitchChangedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors GlobalSwitchChangedPacket() public GlobalSwitchChangedPacket() GlobalSwitchChangedPacket(GlobalSwitchChangedPacket) public GlobalSwitchChangedPacket(GlobalSwitchChangedPacket other) Parameters other GlobalSwitchChangedPacket Fields EnabledFieldNumber Field number for the \"enabled\" field. public const int EnabledFieldNumber = 3 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int SwitchIdFieldNumber Field number for the \"switch_id\" field. public const int SwitchIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Enabled public bool Enabled { get; set; } Property Value bool Parser public static MessageParser<GlobalSwitchChangedPacket> Parser { get; } Property Value MessageParser<GlobalSwitchChangedPacket> PlayerId public int PlayerId { get; set; } Property Value int SwitchId public int SwitchId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public GlobalSwitchChangedPacket Clone() Returns GlobalSwitchChangedPacket A deep clone of this object. Equals(GlobalSwitchChangedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(GlobalSwitchChangedPacket other) Parameters other GlobalSwitchChangedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(GlobalSwitchChangedPacket) Merges the given message into this one. public void MergeFrom(GlobalSwitchChangedPacket other) Parameters other GlobalSwitchChangedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.GlobalSwitchResetPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.GlobalSwitchResetPacket.html",
    "title": "Class GlobalSwitchResetPacket | PixelPilot",
    "keywords": "Class GlobalSwitchResetPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class GlobalSwitchResetPacket : IMessage<GlobalSwitchResetPacket>, IEquatable<GlobalSwitchResetPacket>, IDeepCloneable<GlobalSwitchResetPacket>, IBufferMessage, IMessage Inheritance object GlobalSwitchResetPacket Implements IMessage<GlobalSwitchResetPacket> IEquatable<GlobalSwitchResetPacket> IDeepCloneable<GlobalSwitchResetPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors GlobalSwitchResetPacket() public GlobalSwitchResetPacket() GlobalSwitchResetPacket(GlobalSwitchResetPacket) public GlobalSwitchResetPacket(GlobalSwitchResetPacket other) Parameters other GlobalSwitchResetPacket Fields EnabledFieldNumber Field number for the \"enabled\" field. public const int EnabledFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Enabled public bool Enabled { get; set; } Property Value bool Parser public static MessageParser<GlobalSwitchResetPacket> Parser { get; } Property Value MessageParser<GlobalSwitchResetPacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public GlobalSwitchResetPacket Clone() Returns GlobalSwitchResetPacket A deep clone of this object. Equals(GlobalSwitchResetPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(GlobalSwitchResetPacket other) Parameters other GlobalSwitchResetPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(GlobalSwitchResetPacket) Merges the given message into this one. public void MergeFrom(GlobalSwitchResetPacket other) Parameters other GlobalSwitchResetPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.OldChatMessage.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.OldChatMessage.html",
    "title": "Class OldChatMessage | PixelPilot",
    "keywords": "Class OldChatMessage Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class OldChatMessage : IMessage<OldChatMessage>, IEquatable<OldChatMessage>, IDeepCloneable<OldChatMessage>, IBufferMessage, IMessage Inheritance object OldChatMessage Implements IMessage<OldChatMessage> IEquatable<OldChatMessage> IDeepCloneable<OldChatMessage> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors OldChatMessage() public OldChatMessage() OldChatMessage(OldChatMessage) public OldChatMessage(OldChatMessage other) Parameters other OldChatMessage Fields IsFriendFieldNumber Field number for the \"is_friend\" field. public const int IsFriendFieldNumber = 3 Field Value int MessageFieldNumber Field number for the \"message\" field. public const int MessageFieldNumber = 4 Field Value int PlayerNameFieldNumber Field number for the \"player_name\" field. public const int PlayerNameFieldNumber = 1 Field Value int PlayerRoleFieldNumber Field number for the \"player_role\" field. public const int PlayerRoleFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor IsFriend public bool IsFriend { get; set; } Property Value bool Message public string Message { get; set; } Property Value string Parser public static MessageParser<OldChatMessage> Parser { get; } Property Value MessageParser<OldChatMessage> PlayerName public string PlayerName { get; set; } Property Value string PlayerRole public string PlayerRole { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public OldChatMessage Clone() Returns OldChatMessage A deep clone of this object. Equals(OldChatMessage) Indicates whether the current object is equal to another object of the same type. public bool Equals(OldChatMessage other) Parameters other OldChatMessage An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(OldChatMessage) Merges the given message into this one. public void MergeFrom(OldChatMessage other) Parameters other OldChatMessage Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.OldChatMessagesPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.OldChatMessagesPacket.html",
    "title": "Class OldChatMessagesPacket | PixelPilot",
    "keywords": "Class OldChatMessagesPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class OldChatMessagesPacket : IMessage<OldChatMessagesPacket>, IEquatable<OldChatMessagesPacket>, IDeepCloneable<OldChatMessagesPacket>, IBufferMessage, IMessage Inheritance object OldChatMessagesPacket Implements IMessage<OldChatMessagesPacket> IEquatable<OldChatMessagesPacket> IDeepCloneable<OldChatMessagesPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors OldChatMessagesPacket() public OldChatMessagesPacket() OldChatMessagesPacket(OldChatMessagesPacket) public OldChatMessagesPacket(OldChatMessagesPacket other) Parameters other OldChatMessagesPacket Fields OldChatMessagesFieldNumber Field number for the \"old_chat_messages\" field. public const int OldChatMessagesFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor OldChatMessages public RepeatedField<OldChatMessage> OldChatMessages { get; } Property Value RepeatedField<OldChatMessage> Parser public static MessageParser<OldChatMessagesPacket> Parser { get; } Property Value MessageParser<OldChatMessagesPacket> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public OldChatMessagesPacket Clone() Returns OldChatMessagesPacket A deep clone of this object. Equals(OldChatMessagesPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(OldChatMessagesPacket other) Parameters other OldChatMessagesPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(OldChatMessagesPacket) Merges the given message into this one. public void MergeFrom(OldChatMessagesPacket other) Parameters other OldChatMessagesPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PerformWorldActionPacket.Types.Action.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PerformWorldActionPacket.Types.Action.html",
    "title": "Enum PerformWorldActionPacket.Types.Action | PixelPilot",
    "keywords": "Enum PerformWorldActionPacket.Types.Action Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public enum PerformWorldActionPacket.Types.Action Fields [OriginalName(\"CLEAR_WORLD\")] ClearWorld = 3 [OriginalName(\"RELOAD_WORLD\")] ReloadWorld = 1 [OriginalName(\"SAVE_WORLD\")] SaveWorld = 0"
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PerformWorldActionPacket.Types.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PerformWorldActionPacket.Types.html",
    "title": "Class PerformWorldActionPacket.Types | PixelPilot",
    "keywords": "Class PerformWorldActionPacket.Types Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Container for nested types declared in the PerformWorldActionPacket message type. public static class PerformWorldActionPacket.Types Inheritance object PerformWorldActionPacket.Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PerformWorldActionPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PerformWorldActionPacket.html",
    "title": "Class PerformWorldActionPacket | PixelPilot",
    "keywords": "Class PerformWorldActionPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PerformWorldActionPacket : IMessage<PerformWorldActionPacket>, IEquatable<PerformWorldActionPacket>, IDeepCloneable<PerformWorldActionPacket>, IBufferMessage, IMessage Inheritance object PerformWorldActionPacket Implements IMessage<PerformWorldActionPacket> IEquatable<PerformWorldActionPacket> IDeepCloneable<PerformWorldActionPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PerformWorldActionPacket() public PerformWorldActionPacket() PerformWorldActionPacket(PerformWorldActionPacket) public PerformWorldActionPacket(PerformWorldActionPacket other) Parameters other PerformWorldActionPacket Fields ActionFieldNumber Field number for the \"action\" field. public const int ActionFieldNumber = 1 Field Value int Properties Action public PerformWorldActionPacket.Types.Action Action { get; set; } Property Value PerformWorldActionPacket.Types.Action Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PerformWorldActionPacket> Parser { get; } Property Value MessageParser<PerformWorldActionPacket> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PerformWorldActionPacket Clone() Returns PerformWorldActionPacket A deep clone of this object. Equals(PerformWorldActionPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PerformWorldActionPacket other) Parameters other PerformWorldActionPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PerformWorldActionPacket) Merges the given message into this one. public void MergeFrom(PerformWorldActionPacket other) Parameters other PerformWorldActionPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.Ping.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.Ping.html",
    "title": "Class Ping | PixelPilot",
    "keywords": "Class Ping Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Empty public sealed class Ping : IMessage<Ping>, IEquatable<Ping>, IDeepCloneable<Ping>, IBufferMessage, IMessage Inheritance object Ping Implements IMessage<Ping> IEquatable<Ping> IDeepCloneable<Ping> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors Ping() public Ping() Ping(Ping) public Ping(Ping other) Parameters other Ping Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<Ping> Parser { get; } Property Value MessageParser<Ping> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public Ping Clone() Returns Ping A deep clone of this object. Equals(Ping) Indicates whether the current object is equal to another object of the same type. public bool Equals(Ping other) Parameters other Ping An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(Ping) Merges the given message into this one. public void MergeFrom(Ping other) Parameters other Ping Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerAddEffectPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerAddEffectPacket.html",
    "title": "Class PlayerAddEffectPacket | PixelPilot",
    "keywords": "Class PlayerAddEffectPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerAddEffectPacket : IMessage<PlayerAddEffectPacket>, IEquatable<PlayerAddEffectPacket>, IDeepCloneable<PlayerAddEffectPacket>, IBufferMessage, IMessage Inheritance object PlayerAddEffectPacket Implements IMessage<PlayerAddEffectPacket> IEquatable<PlayerAddEffectPacket> IDeepCloneable<PlayerAddEffectPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerAddEffectPacket() public PlayerAddEffectPacket() PlayerAddEffectPacket(PlayerAddEffectPacket) public PlayerAddEffectPacket(PlayerAddEffectPacket other) Parameters other PlayerAddEffectPacket Fields DurationFieldNumber Field number for the \"duration\" field. public const int DurationFieldNumber = 3 Field Value int EffectIdFieldNumber Field number for the \"effect_id\" field. public const int EffectIdFieldNumber = 2 Field Value int FromPlayerIdFieldNumber Field number for the \"from_player_id\" field. public const int FromPlayerIdFieldNumber = 5 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int StrengthFieldNumber Field number for the \"strength\" field. public const int StrengthFieldNumber = 4 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Duration public int Duration { get; set; } Property Value int EffectId public int EffectId { get; set; } Property Value int FromPlayerId public int FromPlayerId { get; set; } Property Value int HasDuration Gets whether the \"duration\" field is set public bool HasDuration { get; } Property Value bool HasFromPlayerId Gets whether the \"from_player_id\" field is set public bool HasFromPlayerId { get; } Property Value bool HasStrength Gets whether the \"strength\" field is set public bool HasStrength { get; } Property Value bool Parser public static MessageParser<PlayerAddEffectPacket> Parser { get; } Property Value MessageParser<PlayerAddEffectPacket> PlayerId public int PlayerId { get; set; } Property Value int Strength public int Strength { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearDuration() Clears the value of the \"duration\" field public void ClearDuration() ClearFromPlayerId() Clears the value of the \"from_player_id\" field public void ClearFromPlayerId() ClearStrength() Clears the value of the \"strength\" field public void ClearStrength() Clone() Creates a deep clone of this object. public PlayerAddEffectPacket Clone() Returns PlayerAddEffectPacket A deep clone of this object. Equals(PlayerAddEffectPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerAddEffectPacket other) Parameters other PlayerAddEffectPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerAddEffectPacket) Merges the given message into this one. public void MergeFrom(PlayerAddEffectPacket other) Parameters other PlayerAddEffectPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerChatPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerChatPacket.html",
    "title": "Class PlayerChatPacket | PixelPilot",
    "keywords": "Class PlayerChatPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerChatPacket : IMessage<PlayerChatPacket>, IEquatable<PlayerChatPacket>, IDeepCloneable<PlayerChatPacket>, IBufferMessage, IMessage Inheritance object PlayerChatPacket Implements IMessage<PlayerChatPacket> IEquatable<PlayerChatPacket> IDeepCloneable<PlayerChatPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerChatPacket() public PlayerChatPacket() PlayerChatPacket(PlayerChatPacket) public PlayerChatPacket(PlayerChatPacket other) Parameters other PlayerChatPacket Fields MessageFieldNumber Field number for the \"message\" field. public const int MessageFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Message public string Message { get; set; } Property Value string Parser public static MessageParser<PlayerChatPacket> Parser { get; } Property Value MessageParser<PlayerChatPacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerChatPacket Clone() Returns PlayerChatPacket A deep clone of this object. Equals(PlayerChatPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerChatPacket other) Parameters other PlayerChatPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerChatPacket) Merges the given message into this one. public void MergeFrom(PlayerChatPacket other) Parameters other PlayerChatPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerCounterTransactionPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerCounterTransactionPacket.html",
    "title": "Class PlayerCounterTransactionPacket | PixelPilot",
    "keywords": "Class PlayerCounterTransactionPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerCounterTransactionPacket : IMessage<PlayerCounterTransactionPacket>, IEquatable<PlayerCounterTransactionPacket>, IDeepCloneable<PlayerCounterTransactionPacket>, IBufferMessage, IMessage Inheritance object PlayerCounterTransactionPacket Implements IMessage<PlayerCounterTransactionPacket> IEquatable<PlayerCounterTransactionPacket> IDeepCloneable<PlayerCounterTransactionPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerCounterTransactionPacket() public PlayerCounterTransactionPacket() PlayerCounterTransactionPacket(PlayerCounterTransactionPacket) public PlayerCounterTransactionPacket(PlayerCounterTransactionPacket other) Parameters other PlayerCounterTransactionPacket Fields CountFieldNumber Field number for the \"count\" field. public const int CountFieldNumber = 3 Field Value int CounterIdFieldNumber Field number for the \"counter_id\" field. public const int CounterIdFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Count public int Count { get; set; } Property Value int CounterId public int CounterId { get; set; } Property Value int Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerCounterTransactionPacket> Parser { get; } Property Value MessageParser<PlayerCounterTransactionPacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerCounterTransactionPacket Clone() Returns PlayerCounterTransactionPacket A deep clone of this object. Equals(PlayerCounterTransactionPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerCounterTransactionPacket other) Parameters other PlayerCounterTransactionPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerCounterTransactionPacket) Merges the given message into this one. public void MergeFrom(PlayerCounterTransactionPacket other) Parameters other PlayerCounterTransactionPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerCountersUpdatePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerCountersUpdatePacket.html",
    "title": "Class PlayerCountersUpdatePacket | PixelPilot",
    "keywords": "Class PlayerCountersUpdatePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerCountersUpdatePacket : IMessage<PlayerCountersUpdatePacket>, IEquatable<PlayerCountersUpdatePacket>, IDeepCloneable<PlayerCountersUpdatePacket>, IBufferMessage, IMessage Inheritance object PlayerCountersUpdatePacket Implements IMessage<PlayerCountersUpdatePacket> IEquatable<PlayerCountersUpdatePacket> IDeepCloneable<PlayerCountersUpdatePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerCountersUpdatePacket() public PlayerCountersUpdatePacket() PlayerCountersUpdatePacket(PlayerCountersUpdatePacket) public PlayerCountersUpdatePacket(PlayerCountersUpdatePacket other) Parameters other PlayerCountersUpdatePacket Fields BlueCoinsFieldNumber Field number for the \"blue_coins\" field. public const int BlueCoinsFieldNumber = 3 Field Value int CoinsFieldNumber Field number for the \"coins\" field. public const int CoinsFieldNumber = 2 Field Value int DeathsFieldNumber Field number for the \"deaths\" field. public const int DeathsFieldNumber = 4 Field Value int FromServerFieldNumber Field number for the \"from_server\" field. public const int FromServerFieldNumber = 5 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties BlueCoins public int BlueCoins { get; set; } Property Value int Coins public int Coins { get; set; } Property Value int Deaths public int Deaths { get; set; } Property Value int Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor FromServer public bool FromServer { get; set; } Property Value bool HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerCountersUpdatePacket> Parser { get; } Property Value MessageParser<PlayerCountersUpdatePacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerCountersUpdatePacket Clone() Returns PlayerCountersUpdatePacket A deep clone of this object. Equals(PlayerCountersUpdatePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerCountersUpdatePacket other) Parameters other PlayerCountersUpdatePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerCountersUpdatePacket) Merges the given message into this one. public void MergeFrom(PlayerCountersUpdatePacket other) Parameters other PlayerCountersUpdatePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerDirectMessagePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerDirectMessagePacket.html",
    "title": "Class PlayerDirectMessagePacket | PixelPilot",
    "keywords": "Class PlayerDirectMessagePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerDirectMessagePacket : IMessage<PlayerDirectMessagePacket>, IEquatable<PlayerDirectMessagePacket>, IDeepCloneable<PlayerDirectMessagePacket>, IBufferMessage, IMessage Inheritance object PlayerDirectMessagePacket Implements IMessage<PlayerDirectMessagePacket> IEquatable<PlayerDirectMessagePacket> IDeepCloneable<PlayerDirectMessagePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerDirectMessagePacket() public PlayerDirectMessagePacket() PlayerDirectMessagePacket(PlayerDirectMessagePacket) public PlayerDirectMessagePacket(PlayerDirectMessagePacket other) Parameters other PlayerDirectMessagePacket Fields FromPlayerIdFieldNumber Field number for the \"from_player_id\" field. public const int FromPlayerIdFieldNumber = 1 Field Value int MessageFieldNumber Field number for the \"message\" field. public const int MessageFieldNumber = 3 Field Value int TargetPlayerIdFieldNumber Field number for the \"target_player_id\" field. public const int TargetPlayerIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor FromPlayerId public int FromPlayerId { get; set; } Property Value int Message public string Message { get; set; } Property Value string Parser public static MessageParser<PlayerDirectMessagePacket> Parser { get; } Property Value MessageParser<PlayerDirectMessagePacket> TargetPlayerId public int TargetPlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerDirectMessagePacket Clone() Returns PlayerDirectMessagePacket A deep clone of this object. Equals(PlayerDirectMessagePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerDirectMessagePacket other) Parameters other PlayerDirectMessagePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerDirectMessagePacket) Merges the given message into this one. public void MergeFrom(PlayerDirectMessagePacket other) Parameters other PlayerDirectMessagePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerEffect.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerEffect.html",
    "title": "Class PlayerEffect | PixelPilot",
    "keywords": "Class PlayerEffect Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Represents an effect. public sealed class PlayerEffect : IMessage<PlayerEffect>, IEquatable<PlayerEffect>, IDeepCloneable<PlayerEffect>, IBufferMessage, IMessage Inheritance object PlayerEffect Implements IMessage<PlayerEffect> IEquatable<PlayerEffect> IDeepCloneable<PlayerEffect> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerEffect() public PlayerEffect() PlayerEffect(PlayerEffect) public PlayerEffect(PlayerEffect other) Parameters other PlayerEffect Fields DurationFieldNumber Field number for the \"duration\" field. public const int DurationFieldNumber = 2 Field Value int StrengthFieldNumber Field number for the \"strength\" field. public const int StrengthFieldNumber = 3 Field Value int TypeFieldNumber Field number for the \"type\" field. public const int TypeFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Duration public int Duration { get; set; } Property Value int HasDuration Gets whether the \"duration\" field is set public bool HasDuration { get; } Property Value bool HasStrength Gets whether the \"strength\" field is set public bool HasStrength { get; } Property Value bool Parser public static MessageParser<PlayerEffect> Parser { get; } Property Value MessageParser<PlayerEffect> Strength public int Strength { get; set; } Property Value int Type public int Type { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearDuration() Clears the value of the \"duration\" field public void ClearDuration() ClearStrength() Clears the value of the \"strength\" field public void ClearStrength() Clone() Creates a deep clone of this object. public PlayerEffect Clone() Returns PlayerEffect A deep clone of this object. Equals(PlayerEffect) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerEffect other) Parameters other PlayerEffect An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerEffect) Merges the given message into this one. public void MergeFrom(PlayerEffect other) Parameters other PlayerEffect Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerEnterSecretEditKeyPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerEnterSecretEditKeyPacket.html",
    "title": "Class PlayerEnterSecretEditKeyPacket | PixelPilot",
    "keywords": "Class PlayerEnterSecretEditKeyPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerEnterSecretEditKeyPacket : IMessage<PlayerEnterSecretEditKeyPacket>, IEquatable<PlayerEnterSecretEditKeyPacket>, IDeepCloneable<PlayerEnterSecretEditKeyPacket>, IBufferMessage, IMessage Inheritance object PlayerEnterSecretEditKeyPacket Implements IMessage<PlayerEnterSecretEditKeyPacket> IEquatable<PlayerEnterSecretEditKeyPacket> IDeepCloneable<PlayerEnterSecretEditKeyPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerEnterSecretEditKeyPacket() public PlayerEnterSecretEditKeyPacket() PlayerEnterSecretEditKeyPacket(PlayerEnterSecretEditKeyPacket) public PlayerEnterSecretEditKeyPacket(PlayerEnterSecretEditKeyPacket other) Parameters other PlayerEnterSecretEditKeyPacket Fields SecretEditKeyFieldNumber Field number for the \"secret_edit_key\" field. public const int SecretEditKeyFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerEnterSecretEditKeyPacket> Parser { get; } Property Value MessageParser<PlayerEnterSecretEditKeyPacket> SecretEditKey public string SecretEditKey { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerEnterSecretEditKeyPacket Clone() Returns PlayerEnterSecretEditKeyPacket A deep clone of this object. Equals(PlayerEnterSecretEditKeyPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerEnterSecretEditKeyPacket other) Parameters other PlayerEnterSecretEditKeyPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerEnterSecretEditKeyPacket) Merges the given message into this one. public void MergeFrom(PlayerEnterSecretEditKeyPacket other) Parameters other PlayerEnterSecretEditKeyPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerExchangeEffectsPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerExchangeEffectsPacket.html",
    "title": "Class PlayerExchangeEffectsPacket | PixelPilot",
    "keywords": "Class PlayerExchangeEffectsPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerExchangeEffectsPacket : IMessage<PlayerExchangeEffectsPacket>, IEquatable<PlayerExchangeEffectsPacket>, IDeepCloneable<PlayerExchangeEffectsPacket>, IBufferMessage, IMessage Inheritance object PlayerExchangeEffectsPacket Implements IMessage<PlayerExchangeEffectsPacket> IEquatable<PlayerExchangeEffectsPacket> IDeepCloneable<PlayerExchangeEffectsPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerExchangeEffectsPacket() public PlayerExchangeEffectsPacket() PlayerExchangeEffectsPacket(PlayerExchangeEffectsPacket) public PlayerExchangeEffectsPacket(PlayerExchangeEffectsPacket other) Parameters other PlayerExchangeEffectsPacket Fields TargetPlayerIdFieldNumber Field number for the \"target_player_id\" field. public const int TargetPlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerExchangeEffectsPacket> Parser { get; } Property Value MessageParser<PlayerExchangeEffectsPacket> TargetPlayerId public int TargetPlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerExchangeEffectsPacket Clone() Returns PlayerExchangeEffectsPacket A deep clone of this object. Equals(PlayerExchangeEffectsPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerExchangeEffectsPacket other) Parameters other PlayerExchangeEffectsPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerExchangeEffectsPacket) Merges the given message into this one. public void MergeFrom(PlayerExchangeEffectsPacket other) Parameters other PlayerExchangeEffectsPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerFacePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerFacePacket.html",
    "title": "Class PlayerFacePacket | PixelPilot",
    "keywords": "Class PlayerFacePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerFacePacket : IMessage<PlayerFacePacket>, IEquatable<PlayerFacePacket>, IDeepCloneable<PlayerFacePacket>, IBufferMessage, IMessage Inheritance object PlayerFacePacket Implements IMessage<PlayerFacePacket> IEquatable<PlayerFacePacket> IDeepCloneable<PlayerFacePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerFacePacket() public PlayerFacePacket() PlayerFacePacket(PlayerFacePacket) public PlayerFacePacket(PlayerFacePacket other) Parameters other PlayerFacePacket Fields FaceIdFieldNumber Field number for the \"face_id\" field. public const int FaceIdFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor FaceId public int FaceId { get; set; } Property Value int HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerFacePacket> Parser { get; } Property Value MessageParser<PlayerFacePacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerFacePacket Clone() Returns PlayerFacePacket A deep clone of this object. Equals(PlayerFacePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerFacePacket other) Parameters other PlayerFacePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerFacePacket) Merges the given message into this one. public void MergeFrom(PlayerFacePacket other) Parameters other PlayerFacePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerGodModePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerGodModePacket.html",
    "title": "Class PlayerGodModePacket | PixelPilot",
    "keywords": "Class PlayerGodModePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerGodModePacket : IMessage<PlayerGodModePacket>, IEquatable<PlayerGodModePacket>, IDeepCloneable<PlayerGodModePacket>, IBufferMessage, IMessage Inheritance object PlayerGodModePacket Implements IMessage<PlayerGodModePacket> IEquatable<PlayerGodModePacket> IDeepCloneable<PlayerGodModePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerGodModePacket() public PlayerGodModePacket() PlayerGodModePacket(PlayerGodModePacket) public PlayerGodModePacket(PlayerGodModePacket other) Parameters other PlayerGodModePacket Fields EnabledFieldNumber Field number for the \"enabled\" field. public const int EnabledFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Enabled public bool Enabled { get; set; } Property Value bool HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerGodModePacket> Parser { get; } Property Value MessageParser<PlayerGodModePacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerGodModePacket Clone() Returns PlayerGodModePacket A deep clone of this object. Equals(PlayerGodModePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerGodModePacket other) Parameters other PlayerGodModePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerGodModePacket) Merges the given message into this one. public void MergeFrom(PlayerGodModePacket other) Parameters other PlayerGodModePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerInitPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerInitPacket.html",
    "title": "Class PlayerInitPacket | PixelPilot",
    "keywords": "Class PlayerInitPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll PLAYER PACKETS public sealed class PlayerInitPacket : IMessage<PlayerInitPacket>, IEquatable<PlayerInitPacket>, IDeepCloneable<PlayerInitPacket>, IBufferMessage, IMessage Inheritance object PlayerInitPacket Implements IMessage<PlayerInitPacket> IEquatable<PlayerInitPacket> IDeepCloneable<PlayerInitPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerInitPacket() public PlayerInitPacket() PlayerInitPacket(PlayerInitPacket) public PlayerInitPacket(PlayerInitPacket other) Parameters other PlayerInitPacket Fields GlobalSwitchStateFieldNumber Field number for the \"global_switch_state\" field. public const int GlobalSwitchStateFieldNumber = 5 Field Value int PlayerPropertiesFieldNumber Field number for the \"player_properties\" field. public const int PlayerPropertiesFieldNumber = 1 Field Value int WorldDataFieldNumber Field number for the \"world_data\" field. public const int WorldDataFieldNumber = 6 Field Value int WorldHeightFieldNumber Field number for the \"world_height\" field. public const int WorldHeightFieldNumber = 4 Field Value int WorldMetaFieldNumber Field number for the \"world_meta\" field. public const int WorldMetaFieldNumber = 2 Field Value int WorldWidthFieldNumber Field number for the \"world_width\" field. public const int WorldWidthFieldNumber = 3 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor GlobalSwitchState Very specific world state public ByteString GlobalSwitchState { get; set; } Property Value ByteString Parser public static MessageParser<PlayerInitPacket> Parser { get; } Property Value MessageParser<PlayerInitPacket> PlayerProperties player_id located in PlayerProperties public PlayerProperties PlayerProperties { get; set; } Property Value PlayerProperties WorldData public ByteString WorldData { get; set; } Property Value ByteString WorldHeight public int WorldHeight { get; set; } Property Value int WorldMeta public WorldMeta WorldMeta { get; set; } Property Value WorldMeta WorldWidth Static world information public int WorldWidth { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerInitPacket Clone() Returns PlayerInitPacket A deep clone of this object. Equals(PlayerInitPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerInitPacket other) Parameters other PlayerInitPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerInitPacket) Merges the given message into this one. public void MergeFrom(PlayerInitPacket other) Parameters other PlayerInitPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerInitReceivedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerInitReceivedPacket.html",
    "title": "Class PlayerInitReceivedPacket | PixelPilot",
    "keywords": "Class PlayerInitReceivedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Pong back to the server that init has been done. public sealed class PlayerInitReceivedPacket : IMessage<PlayerInitReceivedPacket>, IEquatable<PlayerInitReceivedPacket>, IDeepCloneable<PlayerInitReceivedPacket>, IBufferMessage, IMessage Inheritance object PlayerInitReceivedPacket Implements IMessage<PlayerInitReceivedPacket> IEquatable<PlayerInitReceivedPacket> IDeepCloneable<PlayerInitReceivedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerInitReceivedPacket() public PlayerInitReceivedPacket() PlayerInitReceivedPacket(PlayerInitReceivedPacket) public PlayerInitReceivedPacket(PlayerInitReceivedPacket other) Parameters other PlayerInitReceivedPacket Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerInitReceivedPacket> Parser { get; } Property Value MessageParser<PlayerInitReceivedPacket> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerInitReceivedPacket Clone() Returns PlayerInitReceivedPacket A deep clone of this object. Equals(PlayerInitReceivedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerInitReceivedPacket other) Parameters other PlayerInitReceivedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerInitReceivedPacket) Merges the given message into this one. public void MergeFrom(PlayerInitReceivedPacket other) Parameters other PlayerInitReceivedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerJoinedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerJoinedPacket.html",
    "title": "Class PlayerJoinedPacket | PixelPilot",
    "keywords": "Class PlayerJoinedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerJoinedPacket : IMessage<PlayerJoinedPacket>, IEquatable<PlayerJoinedPacket>, IDeepCloneable<PlayerJoinedPacket>, IBufferMessage, IMessage Inheritance object PlayerJoinedPacket Implements IMessage<PlayerJoinedPacket> IEquatable<PlayerJoinedPacket> IDeepCloneable<PlayerJoinedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerJoinedPacket() public PlayerJoinedPacket() PlayerJoinedPacket(PlayerJoinedPacket) public PlayerJoinedPacket(PlayerJoinedPacket other) Parameters other PlayerJoinedPacket Fields PropertiesFieldNumber Field number for the \"properties\" field. public const int PropertiesFieldNumber = 1 Field Value int WorldStateFieldNumber Field number for the \"world_state\" field. public const int WorldStateFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerJoinedPacket> Parser { get; } Property Value MessageParser<PlayerJoinedPacket> Properties public PlayerProperties Properties { get; set; } Property Value PlayerProperties WorldState public PlayerWorldState WorldState { get; set; } Property Value PlayerWorldState Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerJoinedPacket Clone() Returns PlayerJoinedPacket A deep clone of this object. Equals(PlayerJoinedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerJoinedPacket other) Parameters other PlayerJoinedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerJoinedPacket) Merges the given message into this one. public void MergeFrom(PlayerJoinedPacket other) Parameters other PlayerJoinedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerLeftPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerLeftPacket.html",
    "title": "Class PlayerLeftPacket | PixelPilot",
    "keywords": "Class PlayerLeftPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerLeftPacket : IMessage<PlayerLeftPacket>, IEquatable<PlayerLeftPacket>, IDeepCloneable<PlayerLeftPacket>, IBufferMessage, IMessage Inheritance object PlayerLeftPacket Implements IMessage<PlayerLeftPacket> IEquatable<PlayerLeftPacket> IDeepCloneable<PlayerLeftPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerLeftPacket() public PlayerLeftPacket() PlayerLeftPacket(PlayerLeftPacket) public PlayerLeftPacket(PlayerLeftPacket other) Parameters other PlayerLeftPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerLeftPacket> Parser { get; } Property Value MessageParser<PlayerLeftPacket> PlayerId No content required public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerLeftPacket Clone() Returns PlayerLeftPacket A deep clone of this object. Equals(PlayerLeftPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerLeftPacket other) Parameters other PlayerLeftPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerLeftPacket) Merges the given message into this one. public void MergeFrom(PlayerLeftPacket other) Parameters other PlayerLeftPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerLocalSwitchChangedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerLocalSwitchChangedPacket.html",
    "title": "Class PlayerLocalSwitchChangedPacket | PixelPilot",
    "keywords": "Class PlayerLocalSwitchChangedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerLocalSwitchChangedPacket : IMessage<PlayerLocalSwitchChangedPacket>, IEquatable<PlayerLocalSwitchChangedPacket>, IDeepCloneable<PlayerLocalSwitchChangedPacket>, IBufferMessage, IMessage Inheritance object PlayerLocalSwitchChangedPacket Implements IMessage<PlayerLocalSwitchChangedPacket> IEquatable<PlayerLocalSwitchChangedPacket> IDeepCloneable<PlayerLocalSwitchChangedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerLocalSwitchChangedPacket() public PlayerLocalSwitchChangedPacket() PlayerLocalSwitchChangedPacket(PlayerLocalSwitchChangedPacket) public PlayerLocalSwitchChangedPacket(PlayerLocalSwitchChangedPacket other) Parameters other PlayerLocalSwitchChangedPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int SwitchEnabledFieldNumber Field number for the \"switch_enabled\" field. public const int SwitchEnabledFieldNumber = 3 Field Value int SwitchIdFieldNumber Field number for the \"switch_id\" field. public const int SwitchIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerLocalSwitchChangedPacket> Parser { get; } Property Value MessageParser<PlayerLocalSwitchChangedPacket> PlayerId public int PlayerId { get; set; } Property Value int SwitchEnabled public bool SwitchEnabled { get; set; } Property Value bool SwitchId public int SwitchId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerLocalSwitchChangedPacket Clone() Returns PlayerLocalSwitchChangedPacket A deep clone of this object. Equals(PlayerLocalSwitchChangedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerLocalSwitchChangedPacket other) Parameters other PlayerLocalSwitchChangedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerLocalSwitchChangedPacket) Merges the given message into this one. public void MergeFrom(PlayerLocalSwitchChangedPacket other) Parameters other PlayerLocalSwitchChangedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerLocalSwitchResetPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerLocalSwitchResetPacket.html",
    "title": "Class PlayerLocalSwitchResetPacket | PixelPilot",
    "keywords": "Class PlayerLocalSwitchResetPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerLocalSwitchResetPacket : IMessage<PlayerLocalSwitchResetPacket>, IEquatable<PlayerLocalSwitchResetPacket>, IDeepCloneable<PlayerLocalSwitchResetPacket>, IBufferMessage, IMessage Inheritance object PlayerLocalSwitchResetPacket Implements IMessage<PlayerLocalSwitchResetPacket> IEquatable<PlayerLocalSwitchResetPacket> IDeepCloneable<PlayerLocalSwitchResetPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerLocalSwitchResetPacket() public PlayerLocalSwitchResetPacket() PlayerLocalSwitchResetPacket(PlayerLocalSwitchResetPacket) public PlayerLocalSwitchResetPacket(PlayerLocalSwitchResetPacket other) Parameters other PlayerLocalSwitchResetPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int SwitchEnabledFieldNumber Field number for the \"switch_enabled\" field. public const int SwitchEnabledFieldNumber = 3 Field Value int SwitchIdFieldNumber Field number for the \"switch_id\" field. public const int SwitchIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerLocalSwitchResetPacket> Parser { get; } Property Value MessageParser<PlayerLocalSwitchResetPacket> PlayerId public int PlayerId { get; set; } Property Value int SwitchEnabled public bool SwitchEnabled { get; set; } Property Value bool SwitchId public int SwitchId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerLocalSwitchResetPacket Clone() Returns PlayerLocalSwitchResetPacket A deep clone of this object. Equals(PlayerLocalSwitchResetPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerLocalSwitchResetPacket other) Parameters other PlayerLocalSwitchResetPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerLocalSwitchResetPacket) Merges the given message into this one. public void MergeFrom(PlayerLocalSwitchResetPacket other) Parameters other PlayerLocalSwitchResetPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerModModePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerModModePacket.html",
    "title": "Class PlayerModModePacket | PixelPilot",
    "keywords": "Class PlayerModModePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerModModePacket : IMessage<PlayerModModePacket>, IEquatable<PlayerModModePacket>, IDeepCloneable<PlayerModModePacket>, IBufferMessage, IMessage Inheritance object PlayerModModePacket Implements IMessage<PlayerModModePacket> IEquatable<PlayerModModePacket> IDeepCloneable<PlayerModModePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerModModePacket() public PlayerModModePacket() PlayerModModePacket(PlayerModModePacket) public PlayerModModePacket(PlayerModModePacket other) Parameters other PlayerModModePacket Fields EnabledFieldNumber Field number for the \"enabled\" field. public const int EnabledFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Enabled public bool Enabled { get; set; } Property Value bool HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerModModePacket> Parser { get; } Property Value MessageParser<PlayerModModePacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerModModePacket Clone() Returns PlayerModModePacket A deep clone of this object. Equals(PlayerModModePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerModModePacket other) Parameters other PlayerModModePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerModModePacket) Merges the given message into this one. public void MergeFrom(PlayerModModePacket other) Parameters other PlayerModModePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerMovedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerMovedPacket.html",
    "title": "Class PlayerMovedPacket | PixelPilot",
    "keywords": "Class PlayerMovedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerMovedPacket : IMessage<PlayerMovedPacket>, IEquatable<PlayerMovedPacket>, IDeepCloneable<PlayerMovedPacket>, IBufferMessage, IMessage Inheritance object PlayerMovedPacket Implements IMessage<PlayerMovedPacket> IEquatable<PlayerMovedPacket> IDeepCloneable<PlayerMovedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerMovedPacket() public PlayerMovedPacket() PlayerMovedPacket(PlayerMovedPacket) public PlayerMovedPacket(PlayerMovedPacket other) Parameters other PlayerMovedPacket Fields HorizontalFieldNumber Field number for the \"horizontal\" field. public const int HorizontalFieldNumber = 7 Field Value int JustTeleportedFieldNumber Field number for the \"just_teleported\" field. public const int JustTeleportedFieldNumber = 11 Field Value int ModifierXFieldNumber Field number for the \"modifier_x\" field. public const int ModifierXFieldNumber = 5 Field Value int ModifierYFieldNumber Field number for the \"modifier_y\" field. public const int ModifierYFieldNumber = 6 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int PositionFieldNumber Field number for the \"position\" field. public const int PositionFieldNumber = 2 Field Value int SpaceDownFieldNumber Field number for the \"space_down\" field. public const int SpaceDownFieldNumber = 9 Field Value int SpaceJustDownFieldNumber Field number for the \"space_just_down\" field. public const int SpaceJustDownFieldNumber = 10 Field Value int TickIdFieldNumber Field number for the \"tick_id\" field. public const int TickIdFieldNumber = 12 Field Value int VelocityXFieldNumber Field number for the \"velocity_x\" field. public const int VelocityXFieldNumber = 3 Field Value int VelocityYFieldNumber Field number for the \"velocity_y\" field. public const int VelocityYFieldNumber = 4 Field Value int VerticalFieldNumber Field number for the \"vertical\" field. public const int VerticalFieldNumber = 8 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Horizontal public int Horizontal { get; set; } Property Value int JustTeleported public bool JustTeleported { get; set; } Property Value bool ModifierX public double ModifierX { get; set; } Property Value double ModifierY public double ModifierY { get; set; } Property Value double Parser public static MessageParser<PlayerMovedPacket> Parser { get; } Property Value MessageParser<PlayerMovedPacket> PlayerId public int PlayerId { get; set; } Property Value int Position public PointDouble Position { get; set; } Property Value PointDouble SpaceDown public bool SpaceDown { get; set; } Property Value bool SpaceJustDown public bool SpaceJustDown { get; set; } Property Value bool TickId public int TickId { get; set; } Property Value int VelocityX public double VelocityX { get; set; } Property Value double VelocityY public double VelocityY { get; set; } Property Value double Vertical public int Vertical { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerMovedPacket Clone() Returns PlayerMovedPacket A deep clone of this object. Equals(PlayerMovedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerMovedPacket other) Parameters other PlayerMovedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerMovedPacket) Merges the given message into this one. public void MergeFrom(PlayerMovedPacket other) Parameters other PlayerMovedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerProperties.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerProperties.html",
    "title": "Class PlayerProperties | PixelPilot",
    "keywords": "Class PlayerProperties Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerProperties : IMessage<PlayerProperties>, IEquatable<PlayerProperties>, IDeepCloneable<PlayerProperties>, IBufferMessage, IMessage Inheritance object PlayerProperties Implements IMessage<PlayerProperties> IEquatable<PlayerProperties> IDeepCloneable<PlayerProperties> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerProperties() public PlayerProperties() PlayerProperties(PlayerProperties) public PlayerProperties(PlayerProperties other) Parameters other PlayerProperties Fields AccountIdFieldNumber Field number for the \"account_id\" field. public const int AccountIdFieldNumber = 2 Field Value int FaceFieldNumber Field number for the \"face\" field. public const int FaceFieldNumber = 4 Field Value int IsFriendFieldNumber Field number for the \"is_friend\" field. public const int IsFriendFieldNumber = 6 Field Value int IsWorldOwnerFieldNumber Field number for the \"is_world_owner\" field. public const int IsWorldOwnerFieldNumber = 8 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int PositionFieldNumber Field number for the \"position\" field. public const int PositionFieldNumber = 7 Field Value int RightsFieldNumber Field number for the \"rights\" field. public const int RightsFieldNumber = 9 Field Value int RoleFieldNumber Field number for the \"role\" field. public const int RoleFieldNumber = 5 Field Value int UsernameFieldNumber Field number for the \"username\" field. public const int UsernameFieldNumber = 3 Field Value int Properties AccountId public string AccountId { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Face public int Face { get; set; } Property Value int IsFriend public bool IsFriend { get; set; } Property Value bool IsWorldOwner public bool IsWorldOwner { get; set; } Property Value bool Parser public static MessageParser<PlayerProperties> Parser { get; } Property Value MessageParser<PlayerProperties> PlayerId public int PlayerId { get; set; } Property Value int Position public PointDouble Position { get; set; } Property Value PointDouble Rights public PlayerRights Rights { get; set; } Property Value PlayerRights Role public string Role { get; set; } Property Value string Username public string Username { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerProperties Clone() Returns PlayerProperties A deep clone of this object. Equals(PlayerProperties) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerProperties other) Parameters other PlayerProperties An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerProperties) Merges the given message into this one. public void MergeFrom(PlayerProperties other) Parameters other PlayerProperties Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerRemoveEffectPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerRemoveEffectPacket.html",
    "title": "Class PlayerRemoveEffectPacket | PixelPilot",
    "keywords": "Class PlayerRemoveEffectPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerRemoveEffectPacket : IMessage<PlayerRemoveEffectPacket>, IEquatable<PlayerRemoveEffectPacket>, IDeepCloneable<PlayerRemoveEffectPacket>, IBufferMessage, IMessage Inheritance object PlayerRemoveEffectPacket Implements IMessage<PlayerRemoveEffectPacket> IEquatable<PlayerRemoveEffectPacket> IDeepCloneable<PlayerRemoveEffectPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerRemoveEffectPacket() public PlayerRemoveEffectPacket() PlayerRemoveEffectPacket(PlayerRemoveEffectPacket) public PlayerRemoveEffectPacket(PlayerRemoveEffectPacket other) Parameters other PlayerRemoveEffectPacket Fields EffectIdFieldNumber Field number for the \"effect_id\" field. public const int EffectIdFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int ToPlayerIdFieldNumber Field number for the \"to_player_id\" field. public const int ToPlayerIdFieldNumber = 3 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor EffectId public int EffectId { get; set; } Property Value int HasToPlayerId Gets whether the \"to_player_id\" field is set public bool HasToPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerRemoveEffectPacket> Parser { get; } Property Value MessageParser<PlayerRemoveEffectPacket> PlayerId public int PlayerId { get; set; } Property Value int ToPlayerId public int ToPlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearToPlayerId() Clears the value of the \"to_player_id\" field public void ClearToPlayerId() Clone() Creates a deep clone of this object. public PlayerRemoveEffectPacket Clone() Returns PlayerRemoveEffectPacket A deep clone of this object. Equals(PlayerRemoveEffectPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerRemoveEffectPacket other) Parameters other PlayerRemoveEffectPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerRemoveEffectPacket) Merges the given message into this one. public void MergeFrom(PlayerRemoveEffectPacket other) Parameters other PlayerRemoveEffectPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerResetEffectsPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerResetEffectsPacket.html",
    "title": "Class PlayerResetEffectsPacket | PixelPilot",
    "keywords": "Class PlayerResetEffectsPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerResetEffectsPacket : IMessage<PlayerResetEffectsPacket>, IEquatable<PlayerResetEffectsPacket>, IDeepCloneable<PlayerResetEffectsPacket>, IBufferMessage, IMessage Inheritance object PlayerResetEffectsPacket Implements IMessage<PlayerResetEffectsPacket> IEquatable<PlayerResetEffectsPacket> IDeepCloneable<PlayerResetEffectsPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerResetEffectsPacket() public PlayerResetEffectsPacket() PlayerResetEffectsPacket(PlayerResetEffectsPacket) public PlayerResetEffectsPacket(PlayerResetEffectsPacket other) Parameters other PlayerResetEffectsPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerResetEffectsPacket> Parser { get; } Property Value MessageParser<PlayerResetEffectsPacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerResetEffectsPacket Clone() Returns PlayerResetEffectsPacket A deep clone of this object. Equals(PlayerResetEffectsPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerResetEffectsPacket other) Parameters other PlayerResetEffectsPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerResetEffectsPacket) Merges the given message into this one. public void MergeFrom(PlayerResetEffectsPacket other) Parameters other PlayerResetEffectsPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerResetPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerResetPacket.html",
    "title": "Class PlayerResetPacket | PixelPilot",
    "keywords": "Class PlayerResetPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerResetPacket : IMessage<PlayerResetPacket>, IEquatable<PlayerResetPacket>, IDeepCloneable<PlayerResetPacket>, IBufferMessage, IMessage Inheritance object PlayerResetPacket Implements IMessage<PlayerResetPacket> IEquatable<PlayerResetPacket> IDeepCloneable<PlayerResetPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerResetPacket() public PlayerResetPacket() PlayerResetPacket(PlayerResetPacket) public PlayerResetPacket(PlayerResetPacket other) Parameters other PlayerResetPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int PositionFieldNumber Field number for the \"position\" field. public const int PositionFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerResetPacket> Parser { get; } Property Value MessageParser<PlayerResetPacket> PlayerId public int PlayerId { get; set; } Property Value int Position public PointInteger Position { get; set; } Property Value PointInteger Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerResetPacket Clone() Returns PlayerResetPacket A deep clone of this object. Equals(PlayerResetPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerResetPacket other) Parameters other PlayerResetPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerResetPacket) Merges the given message into this one. public void MergeFrom(PlayerResetPacket other) Parameters other PlayerResetPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerRespawnPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerRespawnPacket.html",
    "title": "Class PlayerRespawnPacket | PixelPilot",
    "keywords": "Class PlayerRespawnPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerRespawnPacket : IMessage<PlayerRespawnPacket>, IEquatable<PlayerRespawnPacket>, IDeepCloneable<PlayerRespawnPacket>, IBufferMessage, IMessage Inheritance object PlayerRespawnPacket Implements IMessage<PlayerRespawnPacket> IEquatable<PlayerRespawnPacket> IDeepCloneable<PlayerRespawnPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerRespawnPacket() public PlayerRespawnPacket() PlayerRespawnPacket(PlayerRespawnPacket) public PlayerRespawnPacket(PlayerRespawnPacket other) Parameters other PlayerRespawnPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int PositionFieldNumber Field number for the \"position\" field. public const int PositionFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerRespawnPacket> Parser { get; } Property Value MessageParser<PlayerRespawnPacket> PlayerId public int PlayerId { get; set; } Property Value int Position public PointInteger Position { get; set; } Property Value PointInteger Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerRespawnPacket Clone() Returns PlayerRespawnPacket A deep clone of this object. Equals(PlayerRespawnPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerRespawnPacket other) Parameters other PlayerRespawnPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerRespawnPacket) Merges the given message into this one. public void MergeFrom(PlayerRespawnPacket other) Parameters other PlayerRespawnPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerRights.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerRights.html",
    "title": "Class PlayerRights | PixelPilot",
    "keywords": "Class PlayerRights Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerRights : IMessage<PlayerRights>, IEquatable<PlayerRights>, IDeepCloneable<PlayerRights>, IBufferMessage, IMessage Inheritance object PlayerRights Implements IMessage<PlayerRights> IEquatable<PlayerRights> IDeepCloneable<PlayerRights> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerRights() public PlayerRights() PlayerRights(PlayerRights) public PlayerRights(PlayerRights other) Parameters other PlayerRights Fields AvailableCommandsFieldNumber Field number for the \"available_commands\" field. public const int AvailableCommandsFieldNumber = 5 Field Value int CanChangeWorldSettingsFieldNumber Field number for the \"can_change_world_settings\" field. public const int CanChangeWorldSettingsFieldNumber = 4 Field Value int CanEditFieldNumber Field number for the \"can_edit\" field. public const int CanEditFieldNumber = 1 Field Value int CanGodFieldNumber Field number for the \"can_god\" field. public const int CanGodFieldNumber = 2 Field Value int CanToggleMinimapFieldNumber Field number for the \"can_toggle_minimap\" field. public const int CanToggleMinimapFieldNumber = 3 Field Value int Properties AvailableCommands public RepeatedField<string> AvailableCommands { get; } Property Value RepeatedField<string> CanChangeWorldSettings public bool CanChangeWorldSettings { get; set; } Property Value bool CanEdit public bool CanEdit { get; set; } Property Value bool CanGod public bool CanGod { get; set; } Property Value bool CanToggleMinimap public bool CanToggleMinimap { get; set; } Property Value bool Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerRights> Parser { get; } Property Value MessageParser<PlayerRights> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerRights Clone() Returns PlayerRights A deep clone of this object. Equals(PlayerRights) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerRights other) Parameters other PlayerRights An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerRights) Merges the given message into this one. public void MergeFrom(PlayerRights other) Parameters other PlayerRights Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerSetCollectiblesPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerSetCollectiblesPacket.html",
    "title": "Class PlayerSetCollectiblesPacket | PixelPilot",
    "keywords": "Class PlayerSetCollectiblesPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerSetCollectiblesPacket : IMessage<PlayerSetCollectiblesPacket>, IEquatable<PlayerSetCollectiblesPacket>, IDeepCloneable<PlayerSetCollectiblesPacket>, IBufferMessage, IMessage Inheritance object PlayerSetCollectiblesPacket Implements IMessage<PlayerSetCollectiblesPacket> IEquatable<PlayerSetCollectiblesPacket> IDeepCloneable<PlayerSetCollectiblesPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerSetCollectiblesPacket() public PlayerSetCollectiblesPacket() PlayerSetCollectiblesPacket(PlayerSetCollectiblesPacket) public PlayerSetCollectiblesPacket(PlayerSetCollectiblesPacket other) Parameters other PlayerSetCollectiblesPacket Fields CollectedFieldNumber Field number for the \"collected\" field. public const int CollectedFieldNumber = 2 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int Properties Collected public RepeatedField<PointInteger> Collected { get; } Property Value RepeatedField<PointInteger> Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerSetCollectiblesPacket> Parser { get; } Property Value MessageParser<PlayerSetCollectiblesPacket> PlayerId public int PlayerId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerSetCollectiblesPacket Clone() Returns PlayerSetCollectiblesPacket A deep clone of this object. Equals(PlayerSetCollectiblesPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerSetCollectiblesPacket other) Parameters other PlayerSetCollectiblesPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerSetCollectiblesPacket) Merges the given message into this one. public void MergeFrom(PlayerSetCollectiblesPacket other) Parameters other PlayerSetCollectiblesPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerSpectatePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerSpectatePacket.html",
    "title": "Class PlayerSpectatePacket | PixelPilot",
    "keywords": "Class PlayerSpectatePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerSpectatePacket : IMessage<PlayerSpectatePacket>, IEquatable<PlayerSpectatePacket>, IDeepCloneable<PlayerSpectatePacket>, IBufferMessage, IMessage Inheritance object PlayerSpectatePacket Implements IMessage<PlayerSpectatePacket> IEquatable<PlayerSpectatePacket> IDeepCloneable<PlayerSpectatePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerSpectatePacket() public PlayerSpectatePacket() PlayerSpectatePacket(PlayerSpectatePacket) public PlayerSpectatePacket(PlayerSpectatePacket other) Parameters other PlayerSpectatePacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int SpectatePlayerFieldNumber Field number for the \"spectate_player\" field. public const int SpectatePlayerFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerSpectatePacket> Parser { get; } Property Value MessageParser<PlayerSpectatePacket> PlayerId public int PlayerId { get; set; } Property Value int SpectatePlayer public int SpectatePlayer { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerSpectatePacket Clone() Returns PlayerSpectatePacket A deep clone of this object. Equals(PlayerSpectatePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerSpectatePacket other) Parameters other PlayerSpectatePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerSpectatePacket) Merges the given message into this one. public void MergeFrom(PlayerSpectatePacket other) Parameters other PlayerSpectatePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerTeamUpdatePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerTeamUpdatePacket.html",
    "title": "Class PlayerTeamUpdatePacket | PixelPilot",
    "keywords": "Class PlayerTeamUpdatePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerTeamUpdatePacket : IMessage<PlayerTeamUpdatePacket>, IEquatable<PlayerTeamUpdatePacket>, IDeepCloneable<PlayerTeamUpdatePacket>, IBufferMessage, IMessage Inheritance object PlayerTeamUpdatePacket Implements IMessage<PlayerTeamUpdatePacket> IEquatable<PlayerTeamUpdatePacket> IDeepCloneable<PlayerTeamUpdatePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerTeamUpdatePacket() public PlayerTeamUpdatePacket() PlayerTeamUpdatePacket(PlayerTeamUpdatePacket) public PlayerTeamUpdatePacket(PlayerTeamUpdatePacket other) Parameters other PlayerTeamUpdatePacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int TeamIdFieldNumber Field number for the \"team_id\" field. public const int TeamIdFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerTeamUpdatePacket> Parser { get; } Property Value MessageParser<PlayerTeamUpdatePacket> PlayerId public int PlayerId { get; set; } Property Value int TeamId public int TeamId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerTeamUpdatePacket Clone() Returns PlayerTeamUpdatePacket A deep clone of this object. Equals(PlayerTeamUpdatePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerTeamUpdatePacket other) Parameters other PlayerTeamUpdatePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerTeamUpdatePacket) Merges the given message into this one. public void MergeFrom(PlayerTeamUpdatePacket other) Parameters other PlayerTeamUpdatePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerTeleportedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerTeleportedPacket.html",
    "title": "Class PlayerTeleportedPacket | PixelPilot",
    "keywords": "Class PlayerTeleportedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerTeleportedPacket : IMessage<PlayerTeleportedPacket>, IEquatable<PlayerTeleportedPacket>, IDeepCloneable<PlayerTeleportedPacket>, IBufferMessage, IMessage Inheritance object PlayerTeleportedPacket Implements IMessage<PlayerTeleportedPacket> IEquatable<PlayerTeleportedPacket> IDeepCloneable<PlayerTeleportedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerTeleportedPacket() public PlayerTeleportedPacket() PlayerTeleportedPacket(PlayerTeleportedPacket) public PlayerTeleportedPacket(PlayerTeleportedPacket other) Parameters other PlayerTeleportedPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int PositionFieldNumber Field number for the \"position\" field. public const int PositionFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Parser public static MessageParser<PlayerTeleportedPacket> Parser { get; } Property Value MessageParser<PlayerTeleportedPacket> PlayerId public int PlayerId { get; set; } Property Value int Position public PointDouble Position { get; set; } Property Value PointDouble Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerTeleportedPacket Clone() Returns PlayerTeleportedPacket A deep clone of this object. Equals(PlayerTeleportedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerTeleportedPacket other) Parameters other PlayerTeleportedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerTeleportedPacket) Merges the given message into this one. public void MergeFrom(PlayerTeleportedPacket other) Parameters other PlayerTeleportedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerTouchBlockPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerTouchBlockPacket.html",
    "title": "Class PlayerTouchBlockPacket | PixelPilot",
    "keywords": "Class PlayerTouchBlockPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerTouchBlockPacket : IMessage<PlayerTouchBlockPacket>, IEquatable<PlayerTouchBlockPacket>, IDeepCloneable<PlayerTouchBlockPacket>, IBufferMessage, IMessage Inheritance object PlayerTouchBlockPacket Implements IMessage<PlayerTouchBlockPacket> IEquatable<PlayerTouchBlockPacket> IDeepCloneable<PlayerTouchBlockPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerTouchBlockPacket() public PlayerTouchBlockPacket() PlayerTouchBlockPacket(PlayerTouchBlockPacket) public PlayerTouchBlockPacket(PlayerTouchBlockPacket other) Parameters other PlayerTouchBlockPacket Fields BlockIdFieldNumber Field number for the \"block_id\" field. public const int BlockIdFieldNumber = 4 Field Value int LayerFieldNumber Field number for the \"layer\" field. public const int LayerFieldNumber = 3 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int PositionFieldNumber Field number for the \"position\" field. public const int PositionFieldNumber = 2 Field Value int Properties BlockId public int BlockId { get; set; } Property Value int Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Layer public int Layer { get; set; } Property Value int Parser public static MessageParser<PlayerTouchBlockPacket> Parser { get; } Property Value MessageParser<PlayerTouchBlockPacket> PlayerId public int PlayerId { get; set; } Property Value int Position public PointInteger Position { get; set; } Property Value PointInteger Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public PlayerTouchBlockPacket Clone() Returns PlayerTouchBlockPacket A deep clone of this object. Equals(PlayerTouchBlockPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerTouchBlockPacket other) Parameters other PlayerTouchBlockPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerTouchBlockPacket) Merges the given message into this one. public void MergeFrom(PlayerTouchBlockPacket other) Parameters other PlayerTouchBlockPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerUpdateRightsPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerUpdateRightsPacket.html",
    "title": "Class PlayerUpdateRightsPacket | PixelPilot",
    "keywords": "Class PlayerUpdateRightsPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class PlayerUpdateRightsPacket : IMessage<PlayerUpdateRightsPacket>, IEquatable<PlayerUpdateRightsPacket>, IDeepCloneable<PlayerUpdateRightsPacket>, IBufferMessage, IMessage Inheritance object PlayerUpdateRightsPacket Implements IMessage<PlayerUpdateRightsPacket> IEquatable<PlayerUpdateRightsPacket> IDeepCloneable<PlayerUpdateRightsPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerUpdateRightsPacket() public PlayerUpdateRightsPacket() PlayerUpdateRightsPacket(PlayerUpdateRightsPacket) public PlayerUpdateRightsPacket(PlayerUpdateRightsPacket other) Parameters other PlayerUpdateRightsPacket Fields PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int RightsFieldNumber Field number for the \"rights\" field. public const int RightsFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PlayerUpdateRightsPacket> Parser { get; } Property Value MessageParser<PlayerUpdateRightsPacket> PlayerId public int PlayerId { get; set; } Property Value int Rights public PlayerRights Rights { get; set; } Property Value PlayerRights Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerUpdateRightsPacket Clone() Returns PlayerUpdateRightsPacket A deep clone of this object. Equals(PlayerUpdateRightsPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerUpdateRightsPacket other) Parameters other PlayerUpdateRightsPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerUpdateRightsPacket) Merges the given message into this one. public void MergeFrom(PlayerUpdateRightsPacket other) Parameters other PlayerUpdateRightsPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerWorldState.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PlayerWorldState.html",
    "title": "Class PlayerWorldState | PixelPilot",
    "keywords": "Class PlayerWorldState Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll ============================================ PARTS, not messages themselves. public sealed class PlayerWorldState : IMessage<PlayerWorldState>, IEquatable<PlayerWorldState>, IDeepCloneable<PlayerWorldState>, IBufferMessage, IMessage Inheritance object PlayerWorldState Implements IMessage<PlayerWorldState> IEquatable<PlayerWorldState> IDeepCloneable<PlayerWorldState> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PlayerWorldState() public PlayerWorldState() PlayerWorldState(PlayerWorldState) public PlayerWorldState(PlayerWorldState other) Parameters other PlayerWorldState Fields CoinsBlueFieldNumber Field number for the \"coins_blue\" field. public const int CoinsBlueFieldNumber = 2 Field Value int CoinsGoldFieldNumber Field number for the \"coins_gold\" field. public const int CoinsGoldFieldNumber = 1 Field Value int CollectedItemsFieldNumber Field number for the \"collected_items\" field. public const int CollectedItemsFieldNumber = 4 Field Value int CountersFieldNumber Field number for the \"counters\" field. public const int CountersFieldNumber = 11 Field Value int DeathsFieldNumber Field number for the \"deaths\" field. public const int DeathsFieldNumber = 3 Field Value int GodmodeFieldNumber Field number for the \"godmode\" field. public const int GodmodeFieldNumber = 8 Field Value int HasGoldCrownFieldNumber Field number for the \"has_gold_crown\" field. public const int HasGoldCrownFieldNumber = 5 Field Value int HasSilverCrownFieldNumber Field number for the \"has_silver_crown\" field. public const int HasSilverCrownFieldNumber = 6 Field Value int ModmodeFieldNumber Field number for the \"modmode\" field. public const int ModmodeFieldNumber = 9 Field Value int SwitchesFieldNumber Field number for the \"switches\" field. public const int SwitchesFieldNumber = 7 Field Value int TeamIdFieldNumber Field number for the \"team_id\" field. public const int TeamIdFieldNumber = 10 Field Value int Properties CoinsBlue public int CoinsBlue { get; set; } Property Value int CoinsGold public int CoinsGold { get; set; } Property Value int CollectedItems public RepeatedField<PointInteger> CollectedItems { get; } Property Value RepeatedField<PointInteger> Counters public RepeatedField<int> Counters { get; } Property Value RepeatedField<int> Deaths public int Deaths { get; set; } Property Value int Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Godmode public bool Godmode { get; set; } Property Value bool HasGoldCrown public bool HasGoldCrown { get; set; } Property Value bool HasSilverCrown public bool HasSilverCrown { get; set; } Property Value bool Modmode public bool Modmode { get; set; } Property Value bool Parser public static MessageParser<PlayerWorldState> Parser { get; } Property Value MessageParser<PlayerWorldState> Switches public ByteString Switches { get; set; } Property Value ByteString TeamId public int TeamId { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PlayerWorldState Clone() Returns PlayerWorldState A deep clone of this object. Equals(PlayerWorldState) Indicates whether the current object is equal to another object of the same type. public bool Equals(PlayerWorldState other) Parameters other PlayerWorldState An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PlayerWorldState) Merges the given message into this one. public void MergeFrom(PlayerWorldState other) Parameters other PlayerWorldState Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PointDouble.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PointDouble.html",
    "title": "Class PointDouble | PixelPilot",
    "keywords": "Class PointDouble Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Represents a double position. public sealed class PointDouble : IMessage<PointDouble>, IEquatable<PointDouble>, IDeepCloneable<PointDouble>, IBufferMessage, IMessage Inheritance object PointDouble Implements IMessage<PointDouble> IEquatable<PointDouble> IDeepCloneable<PointDouble> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors PointDouble() public PointDouble() PointDouble(PointDouble) public PointDouble(PointDouble other) Parameters other PointDouble Fields XFieldNumber Field number for the \"x\" field. public const int XFieldNumber = 1 Field Value int YFieldNumber Field number for the \"y\" field. public const int YFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PointDouble> Parser { get; } Property Value MessageParser<PointDouble> X public double X { get; set; } Property Value double Y public double Y { get; set; } Property Value double Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PointDouble Clone() Returns PointDouble A deep clone of this object. Equals(PointDouble) Indicates whether the current object is equal to another object of the same type. public bool Equals(PointDouble other) Parameters other PointDouble An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PointDouble) Merges the given message into this one. public void MergeFrom(PointDouble other) Parameters other PointDouble Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.PointInteger.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.PointInteger.html",
    "title": "Class PointInteger | PixelPilot",
    "keywords": "Class PointInteger Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Represents an integer position. public sealed class PointInteger : IMessage<PointInteger>, IEquatable<PointInteger>, IDeepCloneable<PointInteger>, IBufferMessage, IMessage Inheritance object PointInteger Implements IMessage<PointInteger> IEquatable<PointInteger> IDeepCloneable<PointInteger> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) PartExtensions.ToPoint(PointInteger) Constructors PointInteger() public PointInteger() PointInteger(PointInteger) public PointInteger(PointInteger other) Parameters other PointInteger Fields XFieldNumber Field number for the \"x\" field. public const int XFieldNumber = 1 Field Value int YFieldNumber Field number for the \"y\" field. public const int YFieldNumber = 2 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<PointInteger> Parser { get; } Property Value MessageParser<PointInteger> X public int X { get; set; } Property Value int Y public int Y { get; set; } Property Value int Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public PointInteger Clone() Returns PointInteger A deep clone of this object. Equals(PointInteger) Indicates whether the current object is equal to another object of the same type. public bool Equals(PointInteger other) Parameters other PointInteger An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(PointInteger) Merges the given message into this one. public void MergeFrom(PointInteger other) Parameters other PointInteger Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.SystemMessagePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.SystemMessagePacket.html",
    "title": "Class SystemMessagePacket | PixelPilot",
    "keywords": "Class SystemMessagePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class SystemMessagePacket : IMessage<SystemMessagePacket>, IEquatable<SystemMessagePacket>, IDeepCloneable<SystemMessagePacket>, IBufferMessage, IMessage Inheritance object SystemMessagePacket Implements IMessage<SystemMessagePacket> IEquatable<SystemMessagePacket> IDeepCloneable<SystemMessagePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors SystemMessagePacket() public SystemMessagePacket() SystemMessagePacket(SystemMessagePacket) public SystemMessagePacket(SystemMessagePacket other) Parameters other SystemMessagePacket Fields IsDialogFieldNumber Field number for the \"is_dialog\" field. public const int IsDialogFieldNumber = 3 Field Value int MessageFieldNumber Field number for the \"message\" field. public const int MessageFieldNumber = 2 Field Value int TitleFieldNumber Field number for the \"title\" field. public const int TitleFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor IsDialog public bool IsDialog { get; set; } Property Value bool Message public string Message { get; set; } Property Value string Parser public static MessageParser<SystemMessagePacket> Parser { get; } Property Value MessageParser<SystemMessagePacket> Title public string Title { get; set; } Property Value string Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public SystemMessagePacket Clone() Returns SystemMessagePacket A deep clone of this object. Equals(SystemMessagePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(SystemMessagePacket other) Parameters other SystemMessagePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(SystemMessagePacket) Merges the given message into this one. public void MergeFrom(SystemMessagePacket other) Parameters other SystemMessagePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldBlockFilledPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldBlockFilledPacket.html",
    "title": "Class WorldBlockFilledPacket | PixelPilot",
    "keywords": "Class WorldBlockFilledPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class WorldBlockFilledPacket : IMessage<WorldBlockFilledPacket>, IEquatable<WorldBlockFilledPacket>, IDeepCloneable<WorldBlockFilledPacket>, IBufferMessage, IMessage Inheritance object WorldBlockFilledPacket Implements IMessage<WorldBlockFilledPacket> IEquatable<WorldBlockFilledPacket> IDeepCloneable<WorldBlockFilledPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors WorldBlockFilledPacket() public WorldBlockFilledPacket() WorldBlockFilledPacket(WorldBlockFilledPacket) public WorldBlockFilledPacket(WorldBlockFilledPacket other) Parameters other WorldBlockFilledPacket Fields BlockIdFieldNumber Field number for the \"block_id\" field. public const int BlockIdFieldNumber = 4 Field Value int ExtraFieldsFieldNumber Field number for the \"extra_fields\" field. public const int ExtraFieldsFieldNumber = 5 Field Value int IgnoreLayersFieldNumber Field number for the \"ignoreLayers\" field. public const int IgnoreLayersFieldNumber = 2 Field Value int LayerFieldNumber Field number for the \"layer\" field. public const int LayerFieldNumber = 3 Field Value int PositionFieldNumber Field number for the \"position\" field. public const int PositionFieldNumber = 1 Field Value int Properties BlockId public int BlockId { get; set; } Property Value int Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor ExtraFields Legacy? Holds a byte[] that can hold extra information public ByteString ExtraFields { get; set; } Property Value ByteString IgnoreLayers public bool IgnoreLayers { get; set; } Property Value bool Layer public int Layer { get; set; } Property Value int Parser public static MessageParser<WorldBlockFilledPacket> Parser { get; } Property Value MessageParser<WorldBlockFilledPacket> Position public PointInteger Position { get; set; } Property Value PointInteger Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public WorldBlockFilledPacket Clone() Returns WorldBlockFilledPacket A deep clone of this object. Equals(WorldBlockFilledPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(WorldBlockFilledPacket other) Parameters other WorldBlockFilledPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(WorldBlockFilledPacket) Merges the given message into this one. public void MergeFrom(WorldBlockFilledPacket other) Parameters other WorldBlockFilledPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldBlockPlacedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldBlockPlacedPacket.html",
    "title": "Class WorldBlockPlacedPacket | PixelPilot",
    "keywords": "Class WorldBlockPlacedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class WorldBlockPlacedPacket : IMessage<WorldBlockPlacedPacket>, IEquatable<WorldBlockPlacedPacket>, IDeepCloneable<WorldBlockPlacedPacket>, IBufferMessage, IMessage Inheritance object WorldBlockPlacedPacket Implements IMessage<WorldBlockPlacedPacket> IEquatable<WorldBlockPlacedPacket> IDeepCloneable<WorldBlockPlacedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors WorldBlockPlacedPacket() public WorldBlockPlacedPacket() WorldBlockPlacedPacket(WorldBlockPlacedPacket) public WorldBlockPlacedPacket(WorldBlockPlacedPacket other) Parameters other WorldBlockPlacedPacket Fields BlockIdFieldNumber Field number for the \"block_id\" field. public const int BlockIdFieldNumber = 4 Field Value int ExtraFieldsFieldNumber Field number for the \"extra_fields\" field. public const int ExtraFieldsFieldNumber = 5 Field Value int LayerFieldNumber Field number for the \"layer\" field. public const int LayerFieldNumber = 3 Field Value int PlayerIdFieldNumber Field number for the \"player_id\" field. public const int PlayerIdFieldNumber = 1 Field Value int PositionsFieldNumber Field number for the \"positions\" field. public const int PositionsFieldNumber = 2 Field Value int Properties BlockId public int BlockId { get; set; } Property Value int Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor ExtraFields Legacy? Holds a byte[] that can hold extra information public ByteString ExtraFields { get; set; } Property Value ByteString HasPlayerId Gets whether the \"player_id\" field is set public bool HasPlayerId { get; } Property Value bool Layer public int Layer { get; set; } Property Value int Parser public static MessageParser<WorldBlockPlacedPacket> Parser { get; } Property Value MessageParser<WorldBlockPlacedPacket> PlayerId public int PlayerId { get; set; } Property Value int Positions Repeated for use in fill operations public RepeatedField<PointInteger> Positions { get; } Property Value RepeatedField<PointInteger> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPlayerId() Clears the value of the \"player_id\" field public void ClearPlayerId() Clone() Creates a deep clone of this object. public WorldBlockPlacedPacket Clone() Returns WorldBlockPlacedPacket A deep clone of this object. Equals(WorldBlockPlacedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(WorldBlockPlacedPacket other) Parameters other WorldBlockPlacedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(WorldBlockPlacedPacket) Merges the given message into this one. public void MergeFrom(WorldBlockPlacedPacket other) Parameters other WorldBlockPlacedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldClearedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldClearedPacket.html",
    "title": "Class WorldClearedPacket | PixelPilot",
    "keywords": "Class WorldClearedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Empty public sealed class WorldClearedPacket : IMessage<WorldClearedPacket>, IEquatable<WorldClearedPacket>, IDeepCloneable<WorldClearedPacket>, IBufferMessage, IMessage Inheritance object WorldClearedPacket Implements IMessage<WorldClearedPacket> IEquatable<WorldClearedPacket> IDeepCloneable<WorldClearedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors WorldClearedPacket() public WorldClearedPacket() WorldClearedPacket(WorldClearedPacket) public WorldClearedPacket(WorldClearedPacket other) Parameters other WorldClearedPacket Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<WorldClearedPacket> Parser { get; } Property Value MessageParser<WorldClearedPacket> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public WorldClearedPacket Clone() Returns WorldClearedPacket A deep clone of this object. Equals(WorldClearedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(WorldClearedPacket other) Parameters other WorldClearedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(WorldClearedPacket) Merges the given message into this one. public void MergeFrom(WorldClearedPacket other) Parameters other WorldClearedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMeta.Types.WorldType.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMeta.Types.WorldType.html",
    "title": "Enum WorldMeta.Types.WorldType | PixelPilot",
    "keywords": "Enum WorldMeta.Types.WorldType Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public enum WorldMeta.Types.WorldType Fields [OriginalName(\"Legacy\")] Legacy = 2 [OriginalName(\"Saved\")] Saved = 0 [OriginalName(\"Unsaved\")] Unsaved = 1"
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMeta.Types.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMeta.Types.html",
    "title": "Class WorldMeta.Types | PixelPilot",
    "keywords": "Class WorldMeta.Types Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Container for nested types declared in the WorldMeta message type. public static class WorldMeta.Types Inheritance object WorldMeta.Types Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMeta.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMeta.html",
    "title": "Class WorldMeta | PixelPilot",
    "keywords": "Class WorldMeta Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class WorldMeta : IMessage<WorldMeta>, IEquatable<WorldMeta>, IDeepCloneable<WorldMeta>, IBufferMessage, IMessage Inheritance object WorldMeta Implements IMessage<WorldMeta> IEquatable<WorldMeta> IDeepCloneable<WorldMeta> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors WorldMeta() public WorldMeta() WorldMeta(WorldMeta) public WorldMeta(WorldMeta other) Parameters other WorldMeta Fields DescriptionFieldNumber Field number for the \"description\" field. public const int DescriptionFieldNumber = 4 Field Value int HasSecretEditKeyFieldNumber Field number for the \"has_secret_edit_key\" field. public const int HasSecretEditKeyFieldNumber = 11 Field Value int HasUnsavedChangesFieldNumber Field number for the \"has_unsaved_changes\" field. public const int HasUnsavedChangesFieldNumber = 7 Field Value int MaxPlayersFieldNumber Field number for the \"max_players\" field. public const int MaxPlayersFieldNumber = 8 Field Value int MinimapEnabledFieldNumber Field number for the \"minimap_enabled\" field. public const int MinimapEnabledFieldNumber = 10 Field Value int OwnerFieldNumber Field number for the \"owner\" field. public const int OwnerFieldNumber = 3 Field Value int OwnerRoleFieldNumber Field number for the \"owner_role\" field. public const int OwnerRoleFieldNumber = 9 Field Value int PlaysFieldNumber Field number for the \"plays\" field. public const int PlaysFieldNumber = 2 Field Value int TitleFieldNumber Field number for the \"title\" field. public const int TitleFieldNumber = 1 Field Value int VisibilityFieldNumber Field number for the \"visibility\" field. public const int VisibilityFieldNumber = 5 Field Value int WorldTypeFieldNumber Field number for the \"world_type\" field. public const int WorldTypeFieldNumber = 6 Field Value int Properties Description public string Description { get; set; } Property Value string Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor HasSecretEditKey public bool HasSecretEditKey { get; set; } Property Value bool HasUnsavedChanges public bool HasUnsavedChanges { get; set; } Property Value bool MaxPlayers public int MaxPlayers { get; set; } Property Value int MinimapEnabled public bool MinimapEnabled { get; set; } Property Value bool Owner public string Owner { get; set; } Property Value string OwnerRole public string OwnerRole { get; set; } Property Value string Parser public static MessageParser<WorldMeta> Parser { get; } Property Value MessageParser<WorldMeta> Plays public int Plays { get; set; } Property Value int Title public string Title { get; set; } Property Value string Visibility public string Visibility { get; set; } Property Value string WorldType public WorldMeta.Types.WorldType WorldType { get; set; } Property Value WorldMeta.Types.WorldType Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public WorldMeta Clone() Returns WorldMeta A deep clone of this object. Equals(WorldMeta) Indicates whether the current object is equal to another object of the same type. public bool Equals(WorldMeta other) Parameters other WorldMeta An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(WorldMeta) Merges the given message into this one. public void MergeFrom(WorldMeta other) Parameters other WorldMeta Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMetaUpdatePacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldMetaUpdatePacket.html",
    "title": "Class WorldMetaUpdatePacket | PixelPilot",
    "keywords": "Class WorldMetaUpdatePacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class WorldMetaUpdatePacket : IMessage<WorldMetaUpdatePacket>, IEquatable<WorldMetaUpdatePacket>, IDeepCloneable<WorldMetaUpdatePacket>, IBufferMessage, IMessage Inheritance object WorldMetaUpdatePacket Implements IMessage<WorldMetaUpdatePacket> IEquatable<WorldMetaUpdatePacket> IDeepCloneable<WorldMetaUpdatePacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors WorldMetaUpdatePacket() public WorldMetaUpdatePacket() WorldMetaUpdatePacket(WorldMetaUpdatePacket) public WorldMetaUpdatePacket(WorldMetaUpdatePacket other) Parameters other WorldMetaUpdatePacket Fields MetaFieldNumber Field number for the \"meta\" field. public const int MetaFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Meta public WorldMeta Meta { get; set; } Property Value WorldMeta Parser public static MessageParser<WorldMetaUpdatePacket> Parser { get; } Property Value MessageParser<WorldMetaUpdatePacket> Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public WorldMetaUpdatePacket Clone() Returns WorldMetaUpdatePacket A deep clone of this object. Equals(WorldMetaUpdatePacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(WorldMetaUpdatePacket other) Parameters other WorldMetaUpdatePacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(WorldMetaUpdatePacket) Merges the given message into this one. public void MergeFrom(WorldMetaUpdatePacket other) Parameters other WorldMetaUpdatePacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldPacket.PacketOneofCase.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldPacket.PacketOneofCase.html",
    "title": "Enum WorldPacket.PacketOneofCase | PixelPilot",
    "keywords": "Enum WorldPacket.PacketOneofCase Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Enum of possible cases for the \"packet\" oneof. public enum WorldPacket.PacketOneofCase Fields ChangeSecretEditKeyPacket = 36 GlobalSwitchChangedPacket = 33 GlobalSwitchResetPacket = 34 None = 0 OldChatMessagesPacket = 31 PerformWorldActionPacket = 35 Ping = 1 PlayerAddEffectPacket = 16 PlayerChatPacket = 6 PlayerCounterTransactionPacket = 38 PlayerCountersUpdatePacket = 20 PlayerDirectMessagePacket = 23 PlayerEnterSecretEditKeyPacket = 12 PlayerExchangeEffectsPacket = 24 PlayerFacePacket = 9 PlayerGodModePacket = 10 PlayerInitPacket = 2 PlayerInitReceived = 3 PlayerJoinedPacket = 4 PlayerLeftPacket = 5 PlayerLocalSwitchChangedPacket = 21 PlayerLocalSwitchResetPacket = 22 PlayerModModePacket = 11 PlayerMovedPacket = 8 PlayerRemoveEffectPacket = 17 PlayerResetEffectsPacket = 18 PlayerResetPacket = 14 PlayerRespawnPacket = 13 PlayerSetCollectiblesPacket = 39 PlayerSpectatePacket = 37 PlayerTeamUpdatePacket = 19 PlayerTeleportedPacket = 25 PlayerTouchBlockPacket = 15 PlayerUpdateRightsPacket = 7 SystemMessagePacket = 32 WorldBlockFilledPacket = 30 WorldBlockPlacedPacket = 29 WorldClearedPacket = 27 WorldMetaUpdatePacket = 28 WorldReloadedPacket = 26"
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldPacket.html",
    "title": "Class WorldPacket | PixelPilot",
    "keywords": "Class WorldPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll public sealed class WorldPacket : IMessage<WorldPacket>, IEquatable<WorldPacket>, IDeepCloneable<WorldPacket>, IBufferMessage, IMessage Inheritance object WorldPacket Implements IMessage<WorldPacket> IEquatable<WorldPacket> IDeepCloneable<WorldPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) WorldPacketExtensions.GetPacket(WorldPacket) Constructors WorldPacket() public WorldPacket() WorldPacket(WorldPacket) public WorldPacket(WorldPacket other) Parameters other WorldPacket Fields ChangeSecretEditKeyPacketFieldNumber Field number for the \"change_secret_edit_key_packet\" field. public const int ChangeSecretEditKeyPacketFieldNumber = 36 Field Value int GlobalSwitchChangedPacketFieldNumber Field number for the \"global_switch_changed_packet\" field. public const int GlobalSwitchChangedPacketFieldNumber = 33 Field Value int GlobalSwitchResetPacketFieldNumber Field number for the \"global_switch_reset_packet\" field. public const int GlobalSwitchResetPacketFieldNumber = 34 Field Value int OldChatMessagesPacketFieldNumber Field number for the \"old_chat_messages_packet\" field. public const int OldChatMessagesPacketFieldNumber = 31 Field Value int PerformWorldActionPacketFieldNumber Field number for the \"perform_world_action_packet\" field. public const int PerformWorldActionPacketFieldNumber = 35 Field Value int PingFieldNumber Field number for the \"ping\" field. public const int PingFieldNumber = 1 Field Value int PlayerAddEffectPacketFieldNumber Field number for the \"player_add_effect_packet\" field. public const int PlayerAddEffectPacketFieldNumber = 16 Field Value int PlayerChatPacketFieldNumber Field number for the \"player_chat_packet\" field. public const int PlayerChatPacketFieldNumber = 6 Field Value int PlayerCounterTransactionPacketFieldNumber Field number for the \"player_counter_transaction_packet\" field. public const int PlayerCounterTransactionPacketFieldNumber = 38 Field Value int PlayerCountersUpdatePacketFieldNumber Field number for the \"player_counters_update_packet\" field. public const int PlayerCountersUpdatePacketFieldNumber = 20 Field Value int PlayerDirectMessagePacketFieldNumber Field number for the \"player_direct_message_packet\" field. public const int PlayerDirectMessagePacketFieldNumber = 23 Field Value int PlayerEnterSecretEditKeyPacketFieldNumber Field number for the \"player_enter_secret_edit_key_packet\" field. public const int PlayerEnterSecretEditKeyPacketFieldNumber = 12 Field Value int PlayerExchangeEffectsPacketFieldNumber Field number for the \"player_exchange_effects_packet\" field. public const int PlayerExchangeEffectsPacketFieldNumber = 24 Field Value int PlayerFacePacketFieldNumber Field number for the \"player_face_packet\" field. public const int PlayerFacePacketFieldNumber = 9 Field Value int PlayerGodModePacketFieldNumber Field number for the \"player_god_mode_packet\" field. public const int PlayerGodModePacketFieldNumber = 10 Field Value int PlayerInitPacketFieldNumber Field number for the \"player_init_packet\" field. public const int PlayerInitPacketFieldNumber = 2 Field Value int PlayerInitReceivedFieldNumber Field number for the \"player_init_received\" field. public const int PlayerInitReceivedFieldNumber = 3 Field Value int PlayerJoinedPacketFieldNumber Field number for the \"player_joined_packet\" field. public const int PlayerJoinedPacketFieldNumber = 4 Field Value int PlayerLeftPacketFieldNumber Field number for the \"player_left_packet\" field. public const int PlayerLeftPacketFieldNumber = 5 Field Value int PlayerLocalSwitchChangedPacketFieldNumber Field number for the \"player_local_switch_changed_packet\" field. public const int PlayerLocalSwitchChangedPacketFieldNumber = 21 Field Value int PlayerLocalSwitchResetPacketFieldNumber Field number for the \"player_local_switch_reset_packet\" field. public const int PlayerLocalSwitchResetPacketFieldNumber = 22 Field Value int PlayerModModePacketFieldNumber Field number for the \"player_mod_mode_packet\" field. public const int PlayerModModePacketFieldNumber = 11 Field Value int PlayerMovedPacketFieldNumber Field number for the \"player_moved_packet\" field. public const int PlayerMovedPacketFieldNumber = 8 Field Value int PlayerRemoveEffectPacketFieldNumber Field number for the \"player_remove_effect_packet\" field. public const int PlayerRemoveEffectPacketFieldNumber = 17 Field Value int PlayerResetEffectsPacketFieldNumber Field number for the \"player_reset_effects_packet\" field. public const int PlayerResetEffectsPacketFieldNumber = 18 Field Value int PlayerResetPacketFieldNumber Field number for the \"player_reset_packet\" field. public const int PlayerResetPacketFieldNumber = 14 Field Value int PlayerRespawnPacketFieldNumber Field number for the \"player_respawn_packet\" field. public const int PlayerRespawnPacketFieldNumber = 13 Field Value int PlayerSetCollectiblesPacketFieldNumber Field number for the \"player_set_collectibles_packet\" field. public const int PlayerSetCollectiblesPacketFieldNumber = 39 Field Value int PlayerSpectatePacketFieldNumber Field number for the \"player_spectate_packet\" field. public const int PlayerSpectatePacketFieldNumber = 37 Field Value int PlayerTeamUpdatePacketFieldNumber Field number for the \"player_team_update_packet\" field. public const int PlayerTeamUpdatePacketFieldNumber = 19 Field Value int PlayerTeleportedPacketFieldNumber Field number for the \"player_teleported_packet\" field. public const int PlayerTeleportedPacketFieldNumber = 25 Field Value int PlayerTouchBlockPacketFieldNumber Field number for the \"player_touch_block_packet\" field. public const int PlayerTouchBlockPacketFieldNumber = 15 Field Value int PlayerUpdateRightsPacketFieldNumber Field number for the \"player_update_rights_packet\" field. public const int PlayerUpdateRightsPacketFieldNumber = 7 Field Value int SystemMessagePacketFieldNumber Field number for the \"system_message_packet\" field. public const int SystemMessagePacketFieldNumber = 32 Field Value int WorldBlockFilledPacketFieldNumber Field number for the \"world_block_filled_packet\" field. public const int WorldBlockFilledPacketFieldNumber = 30 Field Value int WorldBlockPlacedPacketFieldNumber Field number for the \"world_block_placed_packet\" field. public const int WorldBlockPlacedPacketFieldNumber = 29 Field Value int WorldClearedPacketFieldNumber Field number for the \"world_cleared_packet\" field. public const int WorldClearedPacketFieldNumber = 27 Field Value int WorldMetaUpdatePacketFieldNumber Field number for the \"world_meta_update_packet\" field. public const int WorldMetaUpdatePacketFieldNumber = 28 Field Value int WorldReloadedPacketFieldNumber Field number for the \"world_reloaded_packet\" field. public const int WorldReloadedPacketFieldNumber = 26 Field Value int Properties ChangeSecretEditKeyPacket public ChangeSecretEditKeyPacket ChangeSecretEditKeyPacket { get; set; } Property Value ChangeSecretEditKeyPacket Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor GlobalSwitchChangedPacket public GlobalSwitchChangedPacket GlobalSwitchChangedPacket { get; set; } Property Value GlobalSwitchChangedPacket GlobalSwitchResetPacket public GlobalSwitchResetPacket GlobalSwitchResetPacket { get; set; } Property Value GlobalSwitchResetPacket OldChatMessagesPacket MISC public OldChatMessagesPacket OldChatMessagesPacket { get; set; } Property Value OldChatMessagesPacket PacketCase public WorldPacket.PacketOneofCase PacketCase { get; } Property Value WorldPacket.PacketOneofCase Parser public static MessageParser<WorldPacket> Parser { get; } Property Value MessageParser<WorldPacket> PerformWorldActionPacket public PerformWorldActionPacket PerformWorldActionPacket { get; set; } Property Value PerformWorldActionPacket Ping Ping packet public Ping Ping { get; set; } Property Value Ping PlayerAddEffectPacket public PlayerAddEffectPacket PlayerAddEffectPacket { get; set; } Property Value PlayerAddEffectPacket PlayerChatPacket public PlayerChatPacket PlayerChatPacket { get; set; } Property Value PlayerChatPacket PlayerCounterTransactionPacket public PlayerCounterTransactionPacket PlayerCounterTransactionPacket { get; set; } Property Value PlayerCounterTransactionPacket PlayerCountersUpdatePacket public PlayerCountersUpdatePacket PlayerCountersUpdatePacket { get; set; } Property Value PlayerCountersUpdatePacket PlayerDirectMessagePacket public PlayerDirectMessagePacket PlayerDirectMessagePacket { get; set; } Property Value PlayerDirectMessagePacket PlayerEnterSecretEditKeyPacket public PlayerEnterSecretEditKeyPacket PlayerEnterSecretEditKeyPacket { get; set; } Property Value PlayerEnterSecretEditKeyPacket PlayerExchangeEffectsPacket public PlayerExchangeEffectsPacket PlayerExchangeEffectsPacket { get; set; } Property Value PlayerExchangeEffectsPacket PlayerFacePacket public PlayerFacePacket PlayerFacePacket { get; set; } Property Value PlayerFacePacket PlayerGodModePacket public PlayerGodModePacket PlayerGodModePacket { get; set; } Property Value PlayerGodModePacket PlayerInitPacket On join public PlayerInitPacket PlayerInitPacket { get; set; } Property Value PlayerInitPacket PlayerInitReceived public PlayerInitReceivedPacket PlayerInitReceived { get; set; } Property Value PlayerInitReceivedPacket PlayerJoinedPacket Player packets - Send/received while playing public PlayerJoinedPacket PlayerJoinedPacket { get; set; } Property Value PlayerJoinedPacket PlayerLeftPacket public PlayerLeftPacket PlayerLeftPacket { get; set; } Property Value PlayerLeftPacket PlayerLocalSwitchChangedPacket public PlayerLocalSwitchChangedPacket PlayerLocalSwitchChangedPacket { get; set; } Property Value PlayerLocalSwitchChangedPacket PlayerLocalSwitchResetPacket public PlayerLocalSwitchResetPacket PlayerLocalSwitchResetPacket { get; set; } Property Value PlayerLocalSwitchResetPacket PlayerModModePacket public PlayerModModePacket PlayerModModePacket { get; set; } Property Value PlayerModModePacket PlayerMovedPacket public PlayerMovedPacket PlayerMovedPacket { get; set; } Property Value PlayerMovedPacket PlayerRemoveEffectPacket public PlayerRemoveEffectPacket PlayerRemoveEffectPacket { get; set; } Property Value PlayerRemoveEffectPacket PlayerResetEffectsPacket public PlayerResetEffectsPacket PlayerResetEffectsPacket { get; set; } Property Value PlayerResetEffectsPacket PlayerResetPacket public PlayerResetPacket PlayerResetPacket { get; set; } Property Value PlayerResetPacket PlayerRespawnPacket public PlayerRespawnPacket PlayerRespawnPacket { get; set; } Property Value PlayerRespawnPacket PlayerSetCollectiblesPacket public PlayerSetCollectiblesPacket PlayerSetCollectiblesPacket { get; set; } Property Value PlayerSetCollectiblesPacket PlayerSpectatePacket public PlayerSpectatePacket PlayerSpectatePacket { get; set; } Property Value PlayerSpectatePacket PlayerTeamUpdatePacket public PlayerTeamUpdatePacket PlayerTeamUpdatePacket { get; set; } Property Value PlayerTeamUpdatePacket PlayerTeleportedPacket public PlayerTeleportedPacket PlayerTeleportedPacket { get; set; } Property Value PlayerTeleportedPacket PlayerTouchBlockPacket public PlayerTouchBlockPacket PlayerTouchBlockPacket { get; set; } Property Value PlayerTouchBlockPacket PlayerUpdateRightsPacket public PlayerUpdateRightsPacket PlayerUpdateRightsPacket { get; set; } Property Value PlayerUpdateRightsPacket SystemMessagePacket public SystemMessagePacket SystemMessagePacket { get; set; } Property Value SystemMessagePacket WorldBlockFilledPacket public WorldBlockFilledPacket WorldBlockFilledPacket { get; set; } Property Value WorldBlockFilledPacket WorldBlockPlacedPacket public WorldBlockPlacedPacket WorldBlockPlacedPacket { get; set; } Property Value WorldBlockPlacedPacket WorldClearedPacket public WorldClearedPacket WorldClearedPacket { get; set; } Property Value WorldClearedPacket WorldMetaUpdatePacket public WorldMetaUpdatePacket WorldMetaUpdatePacket { get; set; } Property Value WorldMetaUpdatePacket WorldReloadedPacket World packets - Mostly send out by the server public WorldReloadedPacket WorldReloadedPacket { get; set; } Property Value WorldReloadedPacket Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. ClearPacket() public void ClearPacket() Clone() Creates a deep clone of this object. public WorldPacket Clone() Returns WorldPacket A deep clone of this object. Equals(WorldPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(WorldPacket other) Parameters other WorldPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(WorldPacket) Merges the given message into this one. public void MergeFrom(WorldPacket other) Parameters other WorldPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldReflection.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldReflection.html",
    "title": "Class WorldReflection | PixelPilot",
    "keywords": "Class WorldReflection Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll Holder for reflection information generated from world.proto public static class WorldReflection Inheritance object WorldReflection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Descriptor File descriptor for world.proto public static FileDescriptor Descriptor { get; } Property Value FileDescriptor"
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldReloadedPacket.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.WorldReloadedPacket.html",
    "title": "Class WorldReloadedPacket | PixelPilot",
    "keywords": "Class WorldReloadedPacket Namespace PixelWalker.Networking.Protobuf.WorldPackets Assembly PixelPilot.Core.dll World PACKETS public sealed class WorldReloadedPacket : IMessage<WorldReloadedPacket>, IEquatable<WorldReloadedPacket>, IDeepCloneable<WorldReloadedPacket>, IBufferMessage, IMessage Inheritance object WorldReloadedPacket Implements IMessage<WorldReloadedPacket> IEquatable<WorldReloadedPacket> IDeepCloneable<WorldReloadedPacket> IBufferMessage IMessage Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods WorldPacketExtensions.GetPlayerId(IMessage) WorldPacketExtensions.IsReplayable(IMessage) WorldPacketExtensions.RemovePlayerId(IMessage) WorldPacketExtensions.ToWorldPacket(IMessage) Constructors WorldReloadedPacket() public WorldReloadedPacket() WorldReloadedPacket(WorldReloadedPacket) public WorldReloadedPacket(WorldReloadedPacket other) Parameters other WorldReloadedPacket Fields WorldDataFieldNumber Field number for the \"world_data\" field. public const int WorldDataFieldNumber = 1 Field Value int Properties Descriptor public static MessageDescriptor Descriptor { get; } Property Value MessageDescriptor Parser public static MessageParser<WorldReloadedPacket> Parser { get; } Property Value MessageParser<WorldReloadedPacket> WorldData public ByteString WorldData { get; set; } Property Value ByteString Methods CalculateSize() Calculates the size of this message in Protocol Buffer wire format, in bytes. public int CalculateSize() Returns int The number of bytes required to write this message to a coded output stream. Clone() Creates a deep clone of this object. public WorldReloadedPacket Clone() Returns WorldReloadedPacket A deep clone of this object. Equals(WorldReloadedPacket) Indicates whether the current object is equal to another object of the same type. public bool Equals(WorldReloadedPacket other) Parameters other WorldReloadedPacket An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object other) Parameters other object Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. MergeFrom(CodedInputStream) Merges the data from the specified coded input stream with the current message. public void MergeFrom(CodedInputStream input) Parameters input CodedInputStream Remarks See the user guide for precise merge semantics. MergeFrom(WorldReloadedPacket) Merges the given message into this one. public void MergeFrom(WorldReloadedPacket other) Parameters other WorldReloadedPacket Remarks See the user guide for precise merge semantics. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WriteTo(CodedOutputStream) Writes the data to the given coded output stream. public void WriteTo(CodedOutputStream output) Parameters output CodedOutputStream Coded output stream to write the data to. Must not be null."
  },
  "api/PixelWalker.Networking.Protobuf.WorldPackets.html": {
    "href": "api/PixelWalker.Networking.Protobuf.WorldPackets.html",
    "title": "Namespace PixelWalker.Networking.Protobuf.WorldPackets | PixelPilot",
    "keywords": "Namespace PixelWalker.Networking.Protobuf.WorldPackets Classes ChangeSecretEditKeyPacket GlobalSwitchChangedPacket Misc PACKETS GlobalSwitchResetPacket OldChatMessage OldChatMessagesPacket PerformWorldActionPacket PerformWorldActionPacket.Types Container for nested types declared in the PerformWorldActionPacket message type. Ping Empty PlayerAddEffectPacket PlayerChatPacket PlayerCounterTransactionPacket PlayerCountersUpdatePacket PlayerDirectMessagePacket PlayerEffect Represents an effect. PlayerEnterSecretEditKeyPacket PlayerExchangeEffectsPacket PlayerFacePacket PlayerGodModePacket PlayerInitPacket PLAYER PACKETS PlayerInitReceivedPacket Pong back to the server that init has been done. PlayerJoinedPacket PlayerLeftPacket PlayerLocalSwitchChangedPacket PlayerLocalSwitchResetPacket PlayerModModePacket PlayerMovedPacket PlayerProperties PlayerRemoveEffectPacket PlayerResetEffectsPacket PlayerResetPacket PlayerRespawnPacket PlayerRights PlayerSetCollectiblesPacket PlayerSpectatePacket PlayerTeamUpdatePacket PlayerTeleportedPacket PlayerTouchBlockPacket PlayerUpdateRightsPacket PlayerWorldState ============================================ PARTS, not messages themselves. PointDouble Represents a double position. PointInteger Represents an integer position. SystemMessagePacket WorldBlockFilledPacket WorldBlockPlacedPacket WorldClearedPacket Empty WorldMeta WorldMeta.Types Container for nested types declared in the WorldMeta message type. WorldMetaUpdatePacket WorldPacket WorldReflection Holder for reflection information generated from world.proto WorldReloadedPacket World PACKETS Enums PerformWorldActionPacket.Types.Action WorldMeta.Types.WorldType WorldPacket.PacketOneofCase Enum of possible cases for the \"packet\" oneof."
  },
  "guides/extra_packages/introduction.html": {
    "href": "guides/extra_packages/introduction.html",
    "title": "Introduction | PixelPilot",
    "keywords": "Extra packages PixelPilot provides extra optional packages for various uses. These packages can be installed alongside PixelPilot. They aim to be general purpose and easy to extend while keeping things simple."
  },
  "guides/extra_packages/pixelpilot_chatcommands.html": {
    "href": "guides/extra_packages/pixelpilot_chatcommands.html",
    "title": "PixelPilot.ChatCommands | PixelPilot",
    "keywords": "Introduction PixelPilot provides an additional package called PixelPilot.ChatCommands. This package allows users to execute commands in chat. Features: Supports permission strings Automatically generated help command. Format the help if you want. String based permissions. root.command.subcommand. Nested commands Getting started Install PixelPilot.ChatCommands by using NuGet into your current project. Ensure that the PixelPilot.Core version matches the PixelPilot.ChatCommands version. Creating basic commands To create a basic command, extend the ChatCommand class. Implement your own logic that should run on command. public class TestCommand : ChatCommand { public TestCommand() : base(\"test\", \"A test command\", null) { } public override Task ExecuteCommand(ICommandSender sender, string fullCommand, string[] args) { sender.SendMessage(\"This is a test command!\"); return Task.CompletedTask; } } Now create a command manager and hook it to the client. Register the command and add the optional help command. var commandManager = new CommandManager(client, playerManager); commandManager.AddHelpCommand(); commandManager.AddCommand(new TestCommand()); That's it! Your command can now be executed in the game. Nested commands To nest commands use extend the RootCommand. Add your new commands in the constructor of this command. Note that these can also be RootCommands. public class BotActionsRoot : RootCommand { public BotActionsRoot(PixelPilotClient client) : base(\"bot\", \"Bot commands\", \"bot\") { // Add the commands. AddCommand(new DisconnectCommand(client));; AddCommand(new BroadcastCommand(client));; } } Note that the base permission for this command is bot. The commands Disconnect and Broadcast extend this permission node by using the + sign. This means that the full permission will be bot.disconnect. public class SubCommand : ChatCommand { private PixelPilotClient _client; public DisconnectCommand(PixelPilotClient client) : base(\"disconnect\", \"Disconnect the bot\", \"+disconnect\") { _client = client; } public override Task ExecuteCommand(ICommandSender sender, string fullCommand, string[] args) { // Logic return Task.CompletedTask; } } Handling permissions By default the bot handles permissions by allowing all. You can change this by implementing your own command manager. See the following example below. Based on the players rank we grab a list of permission nodes allowed. If the list contains the permission node, the command is allowed. public class CustomCommandManager : PixelChatCommandManager<Player> { private PixelPilotClient _client; public CustomCommandManager(PixelPilotClient client, PixelPlayerManager<Player> pixelPlayerManager) : base(client, pixelPlayerManager) { _client = client; } protected override ICommandSender CreateSender(Player player) { // Create a custom sender that executes the permission check. return new CustomSender(player, _client); } } class CustomSender : CommandSender { public CustomSender(IPixelPlayer player, PixelPilotClient client) : base(player, client) { } public override bool HasPermission(string? permission) { // Allow by default if no permission is set. if (permission == null) return true; // Normally fetch the players rank here from the IPixelPlayer. var playerRank = Rank.Default; var permissions = playerRank.GetPermissions(); return permissions.Contains(permission); } }"
  },
  "guides/extra_packages/pixelpilot_structures.html": {
    "href": "guides/extra_packages/pixelpilot_structures.html",
    "title": "PixelPilot.Structures | PixelPilot",
    "keywords": "Introduction PixelPilot provides an additional package called PixelPilot.Structures. This package allows users to save, load and share structures within their worlds (or complete worlds!) Getting started Install PixelPilot.Structures by using NuGet into your current project. Ensure that the PixelPilot.Core version matches the PixelPilot.Structures version. Creating & Saving a structure A structure can be grabbed from a world and serialized to a JSON document. This JSON document has a special encoding for blocks which is not human readable. It does ensure that in future versions of the game you can still load old structures. // Create a structure, don't save empty blocks. var structure = world.GetStructure(p1, p2, copyEmpty: false); // Convert the structure to the JSON format & save it. var json = PilotSaveSerializer.Serialize(structure); File.WriteAllText(\"test-struct.json\", json); Loading & Pasting a structure // Load the file and convert it to a structure. string json = File.ReadAllText(\"test-struct.json\"); var structure = PilotSaveSerializer.Deserialize(json); // Various methods for getting the list of blocks. List<IPlacedBlock> diff = world.GetDifference(structure, x, y); List<IPlacedBlock> blocks = structure.Blocks; List<IPlacedBlock> blocks = structure.BlocksWithEmpty; // Helper methods for pasting the blocks. structure.Blocks.PasteInOrder(client, new Point(x, y), 5); structure.Blocks.PasteShuffeled(client, new Point(x, y), 5);"
  },
  "guides/getting_started/extra_topics.html": {
    "href": "guides/getting_started/extra_topics.html",
    "title": "Logging | PixelPilot",
    "keywords": "Extra topics This article covers some of the mics features of PixelPilot.Core. Configuration It's highly recommended that you don't store your token, username and or password in your code. Rather opt for using a configuration file or .ENV variables instead. Start by creating a config.json in your project. Ignore the logging part for now. It will be used in a later section of this guide. { \"AccountToken\": \"Secret key value if you want to use the token login\", \"LoginEmail\": \"Email\", \"LoginPassword\": \"Password\", \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"PixelPilot.API\": \"Information\", \"PixelPilot.Client\": \"Information\", \"PixelPilot.World\": \"Information\", \"PixelPilot.PacketConverter\": \"Information\", \"Microsoft\": \"Warning\", \"Microsoft.Hosting.Lifetime\": \"Information\" } } } Create class the values can be mapped to: public class BasicConfig { public string AccountToken { get; set; } = null!; public string AccountEmail { get; set; } = null!; public string AccountPassword { get; set; } = null!; } Initialize the configuration in your bot: var config = configuration.Get<BasicConfig>(); if (config == null) { Console.WriteLine(\"The configuration file could not be loaded.\"); return; } You can now use config.Token to retrieve your token! Logging PixelPilot uses the default logger provided with C#. In order to configure it you can use the following code snippet. Note that this example uses the config.json from the previous step. LogManager.Configure(configuration.GetSection(\"Logging\")); var config = configuration.Get<BasicConfig>(); if (config == null) { Console.WriteLine(\"The configuration file could not be loaded.\"); return; } Grabbing a logger It can be useful to do your logging using the provided LogManager. In order to get a logger you can use the following code snippet: private ILogger _logger = LogManager.GetLogger(\"YourLogger\");"
  },
  "guides/getting_started/first_bot.html": {
    "href": "guides/getting_started/first_bot.html",
    "title": "Start making a bot | PixelPilot",
    "keywords": "Note This guide assumes you have basic knowledge about C# and NuGet. If you don't, start learning it today! Installation The main package PixelPilot.Core can be found on NuGet. Install the latest version to start using the API. Your first bot PixelPilot.Core makes it easy to get a bot up and running. You can either provide the builder with a token, or by using your email and password directly. The token can be found in the local storage of your browser. # Create a bot by using a token // Create a client. var client = PixelPilotClient.Builder() .SetToken(config.AccountToken) .SetAutomaticReconnect(false) .Build(); # Create a bot by using email/password var client = PixelPilotClient.Builder() .SetEmail(config.AccountEmail) .SetPassword(config.AccountPassword) .SetAutomaticReconnect(false) .Build(); After creating the client you probably, you can let the bot connect to a world. Each world has an unique world ID. When you join a world, the URL bar will display the following https://pixelwalker.net/world/<WORLD_ID>. Copy the world ID and use it to connect to the world. // Connect to a room. await client.Connect(\"r082b210d67df52\"); Our bot has now joined the world but it since the end of the program has been reached it will terminate. You can prevent this by adding either one of the following lines of code to the end of your program. // Don't terminate. Thread.Sleep(-1); // Don't terminate. Unless disconnected await client.WaitForDisconnect(); That's it, you have now connected your first bot to the world!"
  },
  "guides/getting_started/manipulating_the_world.html": {
    "href": "guides/getting_started/manipulating_the_world.html",
    "title": "Manipulating the world | PixelPilot",
    "keywords": "Manipulating the world In the previous examples we have seen how to use basic packets. In this guide we will start manipulating the world. That's all what this game is about in the end! The World class In order to make World manipulation a bit easier PixelPilot.Core exposes a PixelWorld class. To parse the block packets can be quite complicated, so if you don't want to do this yourself, I highly recommend you use this class. To get started with the PixelWorld class, create an instance of it and ensure it receives packet updates from the client. // Create a PixelWorld class and attach the client to it. // Allow it to listen to client updates. Not required! var world = new PixelWorld(); client.OnPacketReceived += world.HandlePacket; We now have a world object that will keep track of blocks in the world, and dispatch events on block changes. The world has several layers. Each layer is used for a specific type of block. Currently there are two layers. The WorldLayer enum can be used for simplicity. Layer Description Enum 0 Background WorldLayer.Background 1 Foreground WorldLayer.Foreground In order to get a block at a specific coordinate and layer you can use the following snippet. We then check if it's a coin. Note that the block.Block gives us an enum. This enum can be cast to an INT if required. var worldBlock = world.BlockAt(layer, x, y); Console.WriteLine($\"Is this a coin? ({worldBlock.Block == PixelBlock.Coin})\"); Console.WriteLine($\"It is a: {worldBlock.Block} with ID {block.BlockId}\"); Blocks with additional data. Some blocks contain additional data. Think about portals, gates, signs, etc. To access this data, you can simply cast the IPixelBlock to it's desired type. In this example we will check for portal block. var worldBlock = world.BlockAt(layer, x, y); if (worldBlock is PortalBlock portalBlock) { Console.WriteLine($\"It is a portal with target {portalBlock.TargetId}\"); } else { Console.WriteLine(\"The block is not a portal.\"); } Tip The 'is' keyword is used to cast the object. For more information about casting check here Sending blocks In order to send your own blocks you can simply create an instance of the class. A block placement also needs a location, so we wrap the block with the PlacedBlock class. BasicBlock block = new BasicBlock(PixelBlock.CrownGold); PlacedBlock placedBlock = new PlacedBlock(x, y, WorldLayer.Foreground, block); client.Send(placedBlock.AsPacketOut()); That's it, you have send a block! Example: Blocking the crown! Lets say we want to disable people from placing a crown block. In order to do this, we need to listen to any blocks being placed in our world. The following code snippet can be used to achieve the actions we want. world.OnBlockPlaced += (_, playerId, oldBlock, newBlock) => { // Ignore our own bot if (client.BotId == playerId) return; if (newBlock.Block.Block != PixelBlock.Crown) return; client.Send(oldBlock.AsPacketOut()); };"
  },
  "guides/getting_started/player_management.html": {
    "href": "guides/getting_started/player_management.html",
    "title": "Player Management | PixelPilot",
    "keywords": "Player Management The game only sends updates about players only once. In order to make keep track of players in your world you can use the PlayerManager. This manager keeps tracks of players in your world and easily allows you to fetch their latest information. The following code snippet initializes the manager and ensures it receives the packets from the client. // Player manager allows you to easily keep track of player stats. // For advanced users, it can be extended to include relevant information for you. var playerManager = new PlayerManager(); client.OnPacketReceived += playerManager.HandlePacket; You now have access to the players stats at all time. This can be used in for example a .ping command that sends back the players name. client.OnPacketReceived += (_, packet) => { // Make use of strongly typed packets! switch (packet) { case PlayerChatPacket { Message: \".ping\" } chat: { var player = playerManager.GetPlayer(chat.PlayerId); if (player == null) return; client.Send(new PlayerChatOutPacket($\"Pong! ({player.Username}, {player.X}, {player.Y})\")); break; } } }; Advanced usage: Making your own player class When making a minigame you might need to store more information about the player. The API allows you to define your own player class that can still be used by the manager. The following steps should be taken: Create your own Player class that implements IPixelPlayer. Create your own PlayerManager which extends PixelPlayerManager. Start using your own implementation of IPixelPlayer and PixelPlayerManger! The default classes Player and PlayerManager used in this guide are created in the same way."
  },
  "guides/getting_started/using_packets.html": {
    "href": "guides/getting_started/using_packets.html",
    "title": "Using Packets | PixelPilot",
    "keywords": "Using packets The game communicates with your bot using Packets (Block placed, Smiley changed, Player moved, etc). PixelPilot.Core provides some abstraction so you don't have to construct these yourself. To start listening to incoming packets the game simply use the OnPacketReceived event handler of the client. // Executed when the client receives a packet! client.OnPacketReceived += (_, packet) => { Console.WriteLine(\"I received a packet\"); } All incoming packets implement the interface IMessage. A list of the packets can be found in the following documentation: Packet Documentation All PixelWalker.Networking.Protobuf.WorldPackets Handling specific packets (Giving god on join) Executing something on each packet received is not that useful. Luckily, with the use of some casting we can easily execute actions when we receive a specific packet. Since the packets are strongly typed, we can use a switch statement to do some more useful things. In the following code snippet, we check for the join packet. If we get it we get the username from it. After that we send the PlayerChatPacket with the username of the joined player. // Make use of strongly typed packets! switch (packet) { case PlayerJoinedPacket joinData: client.Send(new PlayerChatPacket() { Message = $\"/givegod {joinData.Properties.Username}\" }); break; } For blocks, there is a different method of constructing the packet which we will see in a later guide. We will now extend this example with a simple .stop command for the bot. Note that everyone can stop the bot. // Make use of strongly typed packets! switch (packet) { case PlayerChatPacket { Message: \".stop\" }: client.Disconnect(); Environment.Exit(0); return; case PlayerJoinedPacket joinData: client.Send(new PlayerChatPacket() { Message = $\"/givegod {joinData.Properties.Username}\" }); break; } That's it, you made a simple bot that responds to incoming packets and sends packets to the game!"
  },
  "guides/introduction.html": {
    "href": "guides/introduction.html",
    "title": "Introduction | PixelPilot",
    "keywords": "Introduction Welcome to the documentation of PixelPilot. To get started with your own bot visit Start making a bot"
  },
  "index.html": {
    "href": "index.html",
    "title": "Home | PixelPilot",
    "keywords": "Pixel Pilot Documentation Welcome to the documentation site of PixelPilot. PixelPilot is a C# library for interacting with the game PixelWalker For information about the capabilities checkout the Github. Where to start? You can follow the initial guides here: https://martenm.github.io/PixelPilotDocs/guides/getting_started/first_bot.html"
  }
}